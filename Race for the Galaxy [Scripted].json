{
  "SaveName": "Race for the Galaxy [Scripted]",
  "EpochTime": 1659011636,
  "Date": "7/28/2022 5:33:56 AM",
  "VersionNumber": "v13.1.1",
  "GameMode": "Race for the Galaxy",
  "GameType": "Game",
  "GameComplexity": "Low Complexity",
  "PlayingTime": [
    30,
    60
  ],
  "PlayerCounts": [
    2,
    4
  ],
  "Tags": [
    "Strategy Games",
    "Card Games",
    "Cards",
    "Scripting",
    "English"
  ],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "Table_None",
  "Sky": "Sky_Sunset",
  "SkyURL": "http://cloud-3.steamusercontent.com/ugc/768355553998480715/0757E233461FBCCD70B7501E5C26869A3DA8A6EF/",
  "Note": "",
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 1.12,
    "ySize": 1.12,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0
  },
  "ComponentTags": {
    "labels": [
      {
        "displayed": "Player",
        "normalized": "player"
      },
      {
        "displayed": "Discard",
        "normalized": "discard"
      },
      {
        "displayed": "Selected",
        "normalized": "selected"
      },
      {
        "displayed": "Action Card",
        "normalized": "action_card"
      },
      {
        "displayed": "PrestigeSearch",
        "normalized": "prestigesearch"
      },
      {
        "displayed": "VP",
        "normalized": "vp"
      },
      {
        "displayed": "VP Chip",
        "normalized": "vp_chip"
      },
      {
        "displayed": "Hidden",
        "normalized": "hidden"
      },
      {
        "displayed": "Adv2p",
        "normalized": "adv2p"
      },
      {
        "displayed": "Slot",
        "normalized": "slot"
      },
      {
        "displayed": "First Goal",
        "normalized": "first_goal"
      },
      {
        "displayed": "Most Goal",
        "normalized": "most_goal"
      },
      {
        "displayed": "Tied Chip",
        "normalized": "tied_chip"
      },
      {
        "displayed": "Prestige",
        "normalized": "prestige"
      },
      {
        "displayed": "PrestigeLeader",
        "normalized": "prestigeleader"
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "DecalPallet": [],
  "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Global.-1.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Global.-1.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/global\")\nend)\n__bundle_register(\"RftG/global\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\nrequire(\"cardtxt\")\r\nrequire(\"gameUi\")\r\nrequire(\"vpCalculator\")\r\n\r\n---1: starting hand, 0: select action. 100: end of round. Otherwise, index of selectedPhases\r\ncurrentPhaseIndex = -1\r\ngameStarted = false\r\nadvanced2p = false\r\nplaceTwoPhase = false\r\ntakeoverPhase = false\r\nuseTakeovers = false\r\nqueuePlaceTwoPhase = false\r\nsearchPhase = false\r\nexpansionLevel = 0\r\nselectedPhases = {}\r\n-- nil if no choice was made, otherwise GUID of selected object\r\n\r\nfunction player(i)\r\n    return {\r\n        index = i,\r\n        selectedGoods = {},\r\n        handCountSnapshot = 0,\r\n        powersSnapshot = {},\r\n        selectedCard = nil,\r\n        selectedCardPower = \"\",\r\n        cardsAlreadyUsed = {},\r\n        miscSelectedCards = {},\r\n        mustConsumeCount = 0,\r\n        produceCount = {},\r\n        paidCost = {},\r\n        tempMilitary = 0,\r\n        incomingGood = false,\r\n        forcedReady = false,\r\n        lastPlayedCard = nil,\r\n        roundEndDiscardCount = 0,\r\n        takeoverSource = nil,\r\n        takeoverPower = nil,\r\n        takeoverTarget = nil,\r\n        beingTargeted = nil,\r\n        usedPower = false,\r\n        canReady = false,\r\n        canFlip = false,\r\n        canConfirm = false,\r\n        beforeExplore = false,\r\n        recordedCards = {},\r\n        prestigeChips = {},\r\n        prestigeCount = 0,\r\n        consumedPrestige = 0\r\n    }\r\nend\r\n\r\nplayerData = {Yellow=player(1),Red=player(2),Blue=player(3),Green=player(4)}\r\nplayerOrder = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\nqueueUpdateState = {Yellow=false, Red=false, Blue=false, Green=false}\r\nupdateTimeSnapshot = {Yellow=0, Red=0, Blue=0, Green=0}\r\n\r\nplaymat12 = \"http://cloud-3.steamusercontent.com/ugc/1867319584733434168/76E4F818BB730F1F8713043E8000EC832B60EE87/\"\r\nplaymat14 = \"http://cloud-3.steamusercontent.com/ugc/1930373378495832995/BB2FCAE46BF72CF143C028808B787EB109064297/\"\r\n\r\ngameEndMessage = false\r\ngameDone = false\r\nenforceRules = true\r\ndelayNextPhase = false\r\ndelayNextPhaseTime = 0\r\ntransitionNextPhase = false\r\n\r\nrequiresConfirm = {[\"DISCARD_HAND\"]=1, [\"MILITARY_HAND\"]=1, [\"DISCARD\"]=1, [\"CONSUME_PRESTIGE\"]=1}\r\nrequiresGoods = {[\"TRADE_ACTION\"]=1,[\"CONSUME_ANY\"]=1,[\"CONSUME_NOVELTY\"]=1,[\"CONSUME_RARE\"]=1,[\"CONSUME_GENE\"]=1,[\"CONSUME_ALIEN\"]=1,\r\n    [\"CONSUME_3_DIFF\"]=1,[\"CONSUME_N_DIFF\"]=1,[\"CONSUME_ALL\"]=1}\r\ngoodsHighlightColor = {\r\n     [\"NOVELTY\"] = color(0.345, 0.709, 0.974),\r\n     [\"RARE\"] = color(0.709, 0.407, 0.129),\r\n     [\"GENE\"] = color(0.278, 0.760, 0.141),\r\n     [\"ALIEN\"] = color(0.933, 0.909, 0.105),\r\n     [\"ANY\"] = \"White\"\r\n}\r\noptionalPowers = {[\"DISCARD_HAND\"]=1,[\"DISCARD\"]=1,[\"CONSUME_PRESTIGE\"]=1}\r\n\r\n-- Determines which settle powers can chain with other settle powers. If separated with '|', the first word is the key, the rest are matching codes.\r\n-- Key = card's power, Value = what the key can be chained with\r\ncompatible = {\r\n    [\"DISCARD|EXTRA_MILITARY\"] = {[\"MILITARY_HAND\"]=1,[\"CONSUME_PRESTIGE\"]=1},\r\n    [\"DISCARD_CONQUER_SETTLE\"] = {[\"MILITARY_HAND\"]=1,[\"DISCARD|EXTRA_MILITARY\"]=1,[\"CONSUME_PRESTIGE\"]=1},\r\n    [\"DISCARD|TAKEOVER_MILITARY\"] = {[\"MILITARY_HAND\"]=1,[\"DISCARD|EXTRA_MILITARY\"]=1,[\"CONSUME_PRESTIGE\"]=1},\r\n    [\"TAKEOVER_REBEL\"] = {[\"MILITARY_HAND\"]=1,[\"DISCARD|EXTRA_MILITARY\"]=1,[\"CONSUME_PRESTIGE\"]=1},\r\n    [\"TAKEOVER_IMPERIUM\"] = {[\"MILITARY_HAND\"]=1,[\"DISCARD|EXTRA_MILITARY\"]=1,[\"CONSUME_PRESTIGE\"]=1},\r\n    [\"PAY_MILITARY\"] = {[\"DISCARD|REDUCE_ZERO\"]=1},\r\n}\r\n\r\nhandZone_GUID = {\"7556a6\", \"2a2c18\", \"0180e0\", \"84db02\"}\r\ntableauZone_GUID = {\"2f8337\", \"6a2b88\", \"6707c2\", \"970244\"}\r\nactionSelectorMenu_GUID = {\"b44250\", \"7552ef\", \"5c95f7\", \"74c6f0\"}\r\nactionZone_GUID = {\"98db35\", \"eec17a\", \"be1ba1\", \"dc1b97\"}\r\nselectedActionZone_GUID = {\"d507c0\", \"820d9e\", \"b1409d\", \"326786\"}\r\npresentedPhaseCardTile_GUID = {\"082406\", \"3e3772\", \"a5737a\", \"2c39a5\"}\r\ntableau_GUID = {\"3f1c4d\", \"bcf758\", \"a22fe5\", \"b4aab3\"}\r\nconsumeTradeCard_GUID = {\"8723c4\", \"095953\", \"1f756f\", \"0f845a\"}\r\nreadyTokens_GUID = {\"8f6042\", \"6ed6bc\", \"169b57\", \"718265\"}\r\nsmallReadyTokens_GUID = {\"dd182c\", \"ab5795\", \"37d9aa\", \"476374\"}\r\nhelpDisplay_GUID = {\"f9c4ee\", \"5a39e2\", \"515d9a\", \"1dbea0\"}\r\nstatTracker_GUID = {\"3b078d\", \"2ed5dd\", \"dc9bac\", \"8865a8\"}\r\nadvanced2pCards_GUID = {\"f4313a\", \"eead6a\", \"3ee2da\", \"09a79a\"}\r\nprestigeButton_GUID = {\"a276bc\", \"b5027c\", \"09bbe0\", \"77721b\"}\r\n\r\ndisableInteract_GUID = {presentedPhaseCardTile_GUID, tableau_GUID, readyTokens_GUID, smallReadyTokens_GUID, helpDisplay_GUID, statTracker_GUID, actionSelectorMenu_GUID}\r\n\r\nvpPoolBag_GUID = \"c2e459\"\r\nvpInfBag_GUID = \"5719f7\"\r\ndrawZone_GUID = \"32297e\"\r\ndiscardZone_GUID = \"fe5c37\"\r\nprestigeBag_GUID = \"f3bcc8\"\r\n\r\nhandZoneOwner = {\r\n     [\"7556a6\"] = \"Yellow\",\r\n     [\"2a2c18\"] = \"Red\",\r\n     [\"0180e0\"] = \"Blue\",\r\n     [\"84db02\"] = \"Green\"\r\n}\r\n\r\ntableauZoneOwner = {\r\n     [\"2f8337\"] = \"Yellow\",\r\n     [\"6a2b88\"] = \"Red\",\r\n     [\"6707c2\"] = \"Blue\",\r\n     [\"970244\"] = \"Green\",\r\n}\r\n\r\nphaseTilePlacement = {\r\n     {\"e536e3\", {-4.48, 1.68, -5.60}},\r\n     {\"34d2e8\", {-2.24, 1.68, -5.60}},\r\n     {\"8df356\", {0.00, 1.68, -5.60}},\r\n     {\"842722\", {2.24, 1.68, -5.60}},\r\n     {\"6c0780\", {4.48, 1.68, -5.60}},\r\n}\r\n\r\nphaseTilePlacementAdv2p = {\r\n     {\"e536e3\", {-6.72, 1.68, -5.60}},\r\n     {\"34d2e8\", {-4.48, 1.68, -5.60}},\r\n     {\"e80c84\", {-2.24, 1.68, -5.60}},\r\n     {\"8df356\", {0.00, 1.68, -5.60}},\r\n     {\"33a1c8\", {2.24, 1.68, -5.60}},\r\n     {\"842722\", {4.48, 1.68, -5.60}},\r\n     {\"6c0780\", {6.72, 1.68, -5.60}},\r\n}\r\n\r\nphaseIndex = {[\"Explore\"] = 1, [\"Develop\"] = 2, [\"Settle\"] = 3, [\"Consume\"] = 4, [\"Produce\"] = 5}\r\nphaseIndexAdv2p = {[\"Explore\"] = 1, [\"Develop\"] = 2, [\"DevelopAdv2p\"] = 3, [\"Settle\"] = 4, [\"SettleAdv2p\"] = 5, [\"Consume\"] = 6, [\"Produce\"] = 7}\r\nphaseText = {\"Phase I: Explore\", \"Phase II: Develop\", \"Phase III: Settle\", \"Phase IV: Consume\", \"Phase V: Produce\"}\r\nphaseTextAdv2p = {\"Phase I: Explore\", \"Phase II: Develop 1\", \"Phase II: Develop 2\", \"Phase III: Settle 1\", \"Phase III: Settle 2\", \"Phase IV: Consume\", \"Phase V: Produce\"}\r\nphaseCardNames = {\"Explore (+5)\", \"Explore (+1,+1)\", \"Develop\", \"Settle\", \"Consume ($)\", \"Consume (x2)\", \"Produce\", \"Prestige / Search\"}\r\nphaseCardNamesAdv2p = {\"Explore (+5)\", \"Explore (+1,+1)\", \"Develop\", \"DevelopAdv2p\", \"Settle\", \"SettleAdv2p\", \"Consume ($)\", \"Consume (x2)\", \"Produce\", \"Prestige / Search\"}\r\ntwoPlayerAdvancedMode = false\r\n\r\ngoodsSnapPointOffset = {-0.6, 0.1, 0.4}\r\ndrawDeck_GUID = \"\"\r\ndiscardPile = nil\r\nvpBag = nil\r\n\r\n-- GUIDS of cards that may have possible actions to perform\r\npossibleTableauActions = {[\"Yellow\"] = {}, [\"Red\"] = {}, [\"Blue\"] = {}, [\"Green\"] = {}}\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.gameStarted = gameStarted\r\n    saved_data.currentPhaseIndex = currentPhaseIndex\r\n    saved_data.selectedPhases = selectedPhases\r\n    saved_data.drawDeck_GUID = drawDeck_GUID\r\n    saved_data.advanced2p = advanced2p\r\n    saved_data.playerData = playerData\r\n    saved_data.placeTwoPhase = placeTwoPhase\r\n    saved_data.takeoverPhase = takeoverPhase\r\n    saved_data.useTakeovers = useTakeovers\r\n    saved_data.queuePlaceTwoPhase = queuePlaceTwoPhase\r\n    saved_data.enforceRules = enforceRules\r\n    saved_data.expansionLevel = expansionLevel\r\n    saved_data.searchPhase = searchPhase\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    componentsBag = getObjectFromGUID(\"4c1650\")\r\n    drawDeck = getObjectFromGUID(drawDeck_GUID)\r\n    drawZone = getObjectFromGUID(drawZone_GUID)\r\n    discardZone = getObjectFromGUID(discardZone_GUID)\r\n\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        gameStarted = data.gameStarted\r\n        currentPhaseIndex = data.currentPhaseIndex\r\n        selectedPhases = data.selectedPhases\r\n        drawDeck_GUID = data.drawDeck_GUID\r\n        advanced2p = data.advanced2p\r\n        playerData = data.playerData\r\n        placeTwoPhase = data.placeTwoPhase or false\r\n        takeoverPhase = data.takeoverPhase or false\r\n        useTakeovers = data.useTakeovers or false\r\n        queuePlaceTwoPhase = data.queuePlaceTwoPhase or false\r\n        enforceRules = data.enforceRules\r\n        expansionLevel = data.expansionLevel\r\n        searchPhase = data.searchPhase\r\n    end\r\n\r\n    rulesBtn = getObjectFromGUID(\"fe78ab\")\r\n    Wait.frames(function() rulesBtn.call(\"changeEnforceRulesButtonLabel\", enforceRules) end, 1)\r\n\r\n    card_db = loadData(0)\r\n\r\n    trySetAdvanced2pMode()\r\n\r\n    for i=1, #disableInteract_GUID do\r\n        for j=1, #disableInteract_GUID[i] do\r\n            local obj = getObjectFromGUID(disableInteract_GUID[i][j])\r\n            if obj then obj.interactable = false end\r\n        end\r\n    end\r\n\r\n    for _, o in pairs(getObjectsWithTag(\"Slot\")) do\r\n        o.interactable = false\r\n    end\r\n\r\n    handZoneMap = {}\r\n    for i=1, #handZone_GUID do\r\n        handZoneMap[handZone_GUID[i]] = true\r\n    end\r\n\r\n    tableauZoneMap = {}\r\n    for i=1, #tableauZone_GUID do\r\n        tableauZoneMap[tableauZone_GUID[i]] = true\r\n    end\r\n\r\n    sound = getObjectFromGUID(\"416393\")\r\n    sound.interactable = false\r\n\r\n    for color, data in pairs(playerData) do\r\n        local index = data.index\r\n        local o = getObjectFromGUID(readyTokens_GUID[index])\r\n        if o then\r\n            o.setVar(\"player\", color)\r\n        end\r\n\r\n        o = getObjectFromGUID(smallReadyTokens_GUID[index])\r\n        if o then\r\n            o.setVar(\"player\", color)\r\n        end\r\n\r\n        local statTracker = getObjectFromGUID(statTracker_GUID[index])\r\n        if statTracker then\r\n            statTracker.call(\"createButtons\")\r\n        end\r\n\r\n        queueUpdate(color)\r\n    end\r\n\r\n    updatePhaseTilesHighlight()\r\n\r\n    if takeoverPhase then\r\n        drawTakeoverLines()\r\n    else\r\n        Global.setVectorLines(getDefaultVectorLines())\r\n    end\r\nend\r\n\r\n-- ======================\r\n-- Game specific helper functions\r\n-- ======================\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction isTakeoverPower(power)\r\n    if power.name == \"TAKEOVER_IMPERIUM\" or power.name == \"TAKEOVER_REBEL\" then\r\n        return power.name\r\n    elseif power.codes[\"TAKEOVER_MILITARY\"] then\r\n        return \"TAKEOVER_MILITARY\"\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\n-- converts the raw phase value into corresponding actual phase. Use selectedPhases[currentPhaseIndex] to get the raw value instead.\r\nfunction getCurrentPhase()\r\n    local phase = selectedPhases[currentPhaseIndex]\r\n    if advanced2p and phase then\r\n        if phase == 3 then\r\n            phase = 2\r\n        elseif phase == 4 or phase == 5 then\r\n            phase = 3\r\n        elseif phase >= 6 and phase < 100 then\r\n            phase = phase - 2\r\n        end\r\n    end\r\n\r\n    return phase\r\nend\r\n\r\nfunction trySetAdvanced2pMode()\r\n     if advanced2p then\r\n          phaseTilePlacement = phaseTilePlacementAdv2p\r\n          phaseIndex = phaseIndexAdv2p\r\n          phaseCardNames = phaseCardNamesAdv2p\r\n          phaseText = phaseTextAdv2p\r\n     end\r\nend\r\n\r\nfunction updateHandCount(playerColor)\r\n     local i = playerData[playerColor].index\r\n     local statTracker = getObjectFromGUID(statTracker_GUID[i])\r\n     if statTracker then\r\n          statTracker.call(\"updateLabel\", {\"hand\", #Player[playerColor].getHandObjects()})\r\n     end\r\nend\r\n\r\nfunction countTrait(player, trait, name, cardType)\r\n    local count = 0\r\n    for card in allCardsInTableau(player) do\r\n        if card.hasTag(\"Action Card\") == false then\r\n            local info = card_db[card.getName()]\r\n\r\n            if cardType and cardType ~= info.type then\r\n                goto skip\r\n            end\r\n\r\n            if trait == \"goods\" and info[trait] == name or\r\n                trait ~= \"goods\" and info[trait][name] then\r\n                count = count + 1\r\n            end\r\n\r\n            ::skip::\r\n        end\r\n    end\r\n\r\n    return count\r\nend\r\n\r\nfunction getGoods(card)\r\n     local goods = nil\r\n     local pos = card.positionToWorld(goodsSnapPointOffset)\r\n     local hits = Physics.cast({\r\n          origin = {pos[1], pos[2] + 2, pos[3]},\r\n          direction = {0, -1, 0},\r\n          max_distance = 4\r\n     })\r\n\r\n     for _, hit in pairs(hits) do\r\n          if hit.hit_object.type == 'Card' and hit.hit_object.getDescription() == card.getGUID() then\r\n               goods = hit.hit_object\r\n               break\r\n          end\r\n     end\r\n\r\n     return goods\r\nend\r\n\r\nfunction tryProduceAt(player, card)\r\n    local info = card_db[card.getName()]\r\n    local powers = info.passivePowers[\"5\"]\r\n\r\n    local goods = getGoods(card)\r\n    if not goods then\r\n        local p = playerData[player]\r\n\r\n        -- no goods, produce on planet\r\n        p.produceCount[info.goods] = p.produceCount[info.goods] + 1\r\n        card.memo = placeGoodsAt(card.positionToWorld(goodsSnapPointOffset), card.getRotation()[2], player)\r\n\r\n        if powers and powers[\"DRAW_IF\"] then dealTo(powers[\"DRAW_IF\"].strength, player) end\r\n        if powers and powers[\"PRESTIGE_IF\"] then getPrestigeChips(player, powers[\"PRESTIGE_IF\"].strength) end\r\n\r\n        return true\r\n    end\r\n\r\n    return false\r\nend\r\n\r\nfunction getVpChips(player, n)\r\n    if not vpBag then\r\n        vpBag = getObjectFromGUID(vpPoolBag_GUID)\r\n        if not vpBag then\r\n            vpBag = getObjectFromGUID(vpInfBag_GUID)\r\n        end\r\n    end\r\n\r\n    local tableau = getObjectFromGUID(tableau_GUID[playerData[player].index])\r\n\r\n    for i=1, n do\r\n        if vpBag.type == \"Bag\" and #vpBag.getObjects() <= 0 then\r\n            replaceVpBag()\r\n        end\r\n\r\n        local token = vpBag.takeObject({\r\n            rotation = tableau.getRotation()\r\n        })\r\n\r\n        token.setPositionSmooth(tableau.positionToWorld({-1.4, 2, -0.8}), false, true)\r\n    end\r\n\r\n    if n > 0 then\r\n        delayNextPhase = true\r\n        delayNextPhaseTime = os.clock()\r\n    end\r\nend\r\n\r\nfunction getPrestigeChips(player, n)\r\n    local bag = getObjectFromGUID(prestigeBag_GUID)\r\n\r\n    if not bag then return end\r\n\r\n    local tableau = getObjectFromGUID(tableau_GUID[playerData[player].index])\r\n    for i=1, n do\r\n        local token = bag.takeObject({\r\n            rotation = tableau.getRotation(),\r\n        })\r\n        token.setPositionSmooth(tableau.positionToWorld({-1.8, 2, -0.8}), false, true)\r\n    end\r\n\r\n    if n > 0 then\r\n        delayNextPhase = true\r\n        delayNextPhaseTime = os.clock()\r\n    end\r\nend\r\n\r\nfunction replaceVpBag()\r\n    if not vpBag then\r\n        vpBag = getObjectFromGUID(vpPoolBag_GUID)\r\n    end\r\n\r\n    local oldBag = vpBag\r\n    local bagPos = oldBag.getPosition()\r\n    vpBag = getObjectFromGUID(vpInfBag_GUID)\r\n    vpBag.setRotation({0, 0, 0})    -- need to set this else the token in the bag will not move\r\n    vpBag.setPosition(bagPos)\r\n    componentsBag.putObject(oldBag)\r\nend\r\n\r\nfunction getCardActions(phase, card)\r\n    local data = cardData[card.getName()]\r\n\r\n    if not data.powers[phase] then\r\n        return nil\r\n    end\r\n\r\n    local results = {}\r\n\r\n    for i, data in pairs(data.powers[phase]) do\r\n        if phase == \"3\" and settleActions[data.name] or\r\n            phase == \"4\" and consumeActions[data.name] or\r\n            phase == \"5\" and produceActions[data.name] then\r\n            results[i] = {name = data.name, data = data}\r\n        end\r\n    end\r\n\r\n    return results\r\nend\r\n\r\nfunction checkIfSelectedAction(player, actionName)\r\n    local zone = getObjectFromGUID(selectedActionZone_GUID[playerData[player].index])\r\n\r\n    for _, obj in pairs(zone.getObjects()) do\r\n        if obj.hasTag(\"Action Card\") and obj.getName() == actionName then\r\n            return obj\r\n        end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\n-- countMarked = whether or not to include face-down cards in the count (default is true)\r\nfunction countCardsInHand(playerColor, countMarked)\r\n    countMarked = countMarked == nil and true or countMarked\r\n\r\n    local objs = Player[playerColor].getHandObjects(1)\r\n\r\n    if countMarked then\r\n        return #objs\r\n    else\r\n        local n = 0\r\n\r\n        for _, obj in pairs(objs) do\r\n            if (not obj.hasTag(\"Discard\") or obj.hasTag(\"Marked\")) and not obj.hasTag(\"Action Card\") then\r\n                n = n + 1\r\n            end\r\n        end\r\n\r\n        return n\r\n    end\r\nend\r\n\r\nfunction countDiscardInHand(playerColor, countMarked)\r\n    countMarked = countMarked == nil and false or countMarked\r\n\r\n    local objs = Player[playerColor].getHandObjects(1)\r\n\r\n    local n = 0\r\n    for _, obj in pairs(objs) do\r\n        if obj.hasTag(\"Discard\") and not obj.hasTag(\"Marked\") or countMarked then\r\n            n = n + 1\r\n        end\r\n    end\r\n\r\n    return n\r\nend\r\n\r\n-- returns number of selected actions. 0 = no actions selected.\r\nfunction getSelectedActionsCount(player)\r\n    local i = playerData[player].index\r\n    local zone = getObjectFromGUID(selectedActionZone_GUID[i])\r\n    local n = 0\r\n\r\n    for _, obj in pairs(zone.getObjects()) do\r\n        if obj.hasTag(\"Action Card\") then\r\n            n = n + 1\r\n        end\r\n    end\r\n\r\n    return n\r\nend\r\n\r\nfunction getOwner(card)\r\n    for _, zone in pairs(card.getZones()) do\r\n        if tableauZoneOwner[zone.getGUID()] then\r\n            return tableauZoneOwner[zone.getGUID()]\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nfunction toggleEnforceRulesClick(obj, player)\r\n    enforceRules = not enforceRules\r\n    rulesBtn.call(\"changeEnforceRulesButtonLabel\", enforceRules)\r\n    broadcastToAll(\"Enforce rules has been turned \" .. (enforceRules and \"ON.\" or \"OFF.\"), \"Purple\")\r\nend\r\n\r\n-- returns number of cards discarded from hand\r\nfunction discardMarkedCards(player, markForDiscard)\r\n    if markForDiscard == nil then markForDiscard = false end\r\n\r\n    local cards = {}\r\n    for _, obj in pairs(Player[player].getHandObjects(1)) do\r\n        if obj.type == 'Card' and (obj.hasTag(\"Discard\") or obj.is_face_down) then\r\n            if markForDiscard and not obj.hasTag(\"Marked\") then\r\n                obj.addTag(\"Marked\")\r\n                cards[#cards + 1] = obj\r\n            elseif not markForDiscard then\r\n                discardCard(obj)\r\n                cards[#cards + 1] = obj\r\n            end\r\n        end\r\n    end\r\n    return cards\r\nend\r\n\r\nfunction giveMarkedCards(player, target)\r\n    local cards = {}\r\n    for _, obj in pairs(Player[player].getHandObjects(1)) do\r\n        if obj.type == 'Card' and (obj.hasTag(\"Discard\") or obj.is_face_down) then\r\n            obj.deal(1, target)\r\n            cards[#cards + 1] = obj\r\n        end\r\n    end\r\n    return cards\r\nend\r\n\r\n-- check zone for any 'Selected' cards and attempt to play them\r\nfunction attemptPlayCard(card, player, fromTakeover)\r\n    if type(card) == \"table\" then\r\n        player = card[2]\r\n        card = card[1]\r\n    end\r\n\r\n    local p = playerData[player]\r\n    local tableau = getObjectFromGUID(tableau_GUID[p.index])\r\n    local sp = tableau.getSnapPoints()\r\n\r\n    -- Find first empty spot on tableau\r\n    for i=1, #sp do\r\n        local hits = Physics.cast({\r\n            origin = tableau.positionToWorld(add(sp[i].position, {0,1,0})),\r\n            direction = {0, -1, 0},\r\n            max_direction = 2\r\n        })\r\n\r\n        -- found empty spot\r\n        if hits[1].hit_object.hasTag(\"Slot\") then\r\n            -- trigger certain power bonuses based on phase\r\n            if currentPhaseIndex > 0 and currentPhaseIndex <= #selectedPhases then\r\n                local phase = getCurrentPhase()\r\n                local powers = p.powersSnapshot\r\n                if powers[\"DRAW_AFTER\"] then\r\n                    dealTo(powers[\"DRAW_AFTER\"], player)\r\n                end\r\n            end\r\n\r\n            local goods = getGoods(card)\r\n\r\n            local pos = tableau.positionToWorld(sp[i].position)\r\n            local rot = tableau.getRotation()\r\n            if not fromTakeover then\r\n                card.setPosition(add(pos, {0, 0.04, 0}))\r\n            else\r\n                card.setPositionSmooth(add(pos, {0, 0.04, 0}))\r\n            end\r\n            card.setRotation({rot[1], rot[2], 0})\r\n            card.removeTag(\"Selected\")\r\n            card.setLock(true)\r\n            highlightOff(card)\r\n            p.lastPlayedCard = card.getGUID()\r\n\r\n            local info = card_db[card.getName()]\r\n            local isWindfall = info.flags[\"WINDFALL\"]\r\n\r\n            -- if windfall, place a goods on top\r\n            if isWindfall and not fromTakeover then\r\n                placeGoodsAt(card.positionToWorld(goodsSnapPointOffset), rot[2], player)\r\n            elseif isWindfall and fromTakeover and goods then\r\n                goods.setPositionSmooth(tableau.positionToWorld(add(sp[i].position, {-0.1, 1, 0.07})))\r\n                goods.setRotationSmooth({rot[1], rot[2], 180})\r\n                p.incomingGood = true\r\n            end\r\n\r\n            local usedPayMilitary = false\r\n            local node = p.miscSelectedCards\r\n            while node and node.value do\r\n                if node.power.name == \"PAY_MILITARY\" then\r\n                    usedPayMilitary = true\r\n                    break\r\n                end\r\n                node = node.next\r\n            end\r\n\r\n            -- place prestige\r\n            local currentPhase = getCurrentPhase()\r\n            if expansionLevel >= 3 and \r\n                info.flags[\"PRESTIGE\"] or p.powersSnapshot[\"PRESTIGE\"] or\r\n                info.type == 2 and info.cost == 6 and p.powersSnapshot[\"PRESTIGE_SIX\"] or\r\n                info.type == 1 and not info.flags[\"WINDFALL\"] and info.goods and p.powersSnapshot[\"PRODUCE_PRESTIGE\"] or\r\n                info.type == 1 and usedPayMilitary and p.powersSnapshot[\"PAY_PRESTIGE\"] or\r\n                ((currentPhase == 2 and info.type == 2) or (currentPhase == 3 and info.type == 1)) and info.flags[\"REBEL\"] and p.powersSnapshot[\"PRESTIGE_REBEL\"] then\r\n                getPrestigeChips(player, 1)\r\n            end\r\n\r\n            return\r\n        end\r\n    end\r\nend\r\n\r\nfunction getTooltip(phase, power)\r\n    local tooltip = activePowers[phase][power.name]\r\n    if power.name == \"DISCARD\" or power.name == \"CONSUME_PRESTIGE\" then\r\n        for code, v in pairs(power.codes) do\r\n            if subtooltip[code] then\r\n                tooltip = tooltip .. subtooltip[code]\r\n                break\r\n            end\r\n        end\r\n    end\r\n    return tooltip\r\nend\r\n\r\nfunction placeGoodsAt(position, yRotation, player)\r\n     local card = drawCard()\r\n\r\n     if card then\r\n          card.setPositionSmooth(add(position, {0, 0.2, 0}))\r\n          card.setRotation({0, yRotation, 180})\r\n          playerData[player].incomingGood = true\r\n          delayNextPhase = true\r\n          delayNextPhaseTime = os.clock()\r\n     else\r\n          -- shouldn't ever happen, but just in case\r\n          broadcastToAll(\"Error: No cards detected in draw or discard pile\", color(1,0,0))\r\n     end\r\n\r\n     return card\r\nend\r\n\r\nfunction reshuffleDiscardPile()\r\n     -- no deck or card found, reshuffle discard and return that\r\n     item = getDeckOrCardInZone(discardZone)\r\n     if item then\r\n          broadcastToAll(\"Reshuffling the discard pile.\", \"White\")\r\n          item.setRotationSmooth({0,180,180})\r\n          item.setPositionSmooth(drawZone.getPosition())\r\n          item.shuffle()\r\n     end\r\n\r\n     return item\r\nend\r\n\r\nfunction getDeckOrCardInZone(zone)\r\n    for _, obj in pairs(zone.getObjects()) do\r\n        if obj.type == 'Deck' or obj.type == 'Card' then\r\n            return obj\r\n        end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction drawCard()\r\n    local card = nil\r\n    if not drawDeck or drawDeck.isDestroyed() then\r\n        drawDeck = getDeckOrCardInZone(drawZone)\r\n        if not drawDeck then\r\n            drawDeck = reshuffleDiscardPile()\r\n        end\r\n    end\r\n\r\n    if drawDeck.type == 'Deck' then\r\n        card = drawDeck.takeObject()\r\n\r\n        if drawDeck.remainder then\r\n            drawDeck = drawDeck.remainder\r\n        end\r\n    elseif drawDeck.type == 'Card' then\r\n        card = drawDeck\r\n        drawDeck = reshuffleDiscardPile()\r\n    end\r\n\r\n    drawDeck_GUID = drawDeck.getGUID()\r\n\r\n    return card\r\nend\r\n\r\nfunction discardCard(card)\r\n    card.memo = ''\r\n    card.setDescription('')\r\n    card.setTags({})\r\n    card.highlightOff()\r\n    card.setScale({1,1,1})\r\n    card.setLock(false)\r\n\r\n    if not discardPile or discardPile.isDestroyed() then\r\n        discardPile = getDeckOrCardInZone(discardZone)\r\n    end\r\n\r\n    if discardPile then\r\n        card.setPosition(add(card.getPosition(), {0, discardZone.getPosition()[2], 0}))\r\n        discardPile = discardPile.putObject(card)\r\n        return\r\n    end\r\n\r\n    discardPile = card\r\n    card.setPosition(discardZone.getPosition())\r\n    card.setRotation({0, 0, 180})\r\nend\r\n\r\nfunction dealTo(n, player)\r\n    for i=1, n do\r\n        local card = drawCard()\r\n        Wait.frames(\r\n            function()\r\n                card.addTag(\"Ignore Tableau\")\r\n                card.deal(1, player)\r\n            end, 1, 0)\r\n    end\r\nend\r\n\r\nfunction resetPlayerState(playerColor)\r\n    local p = playerData[playerColor]\r\n    local index = p.index\r\n    local incomingGood = p.incomingGood\r\n    local recordedCards = p.recordedCards\r\n\r\n    playerData[playerColor] = player(index)\r\n    playerData[playerColor].incomingGood = incomingGood\r\n    playerData[playerColor].canReady = false\r\n    playerData[playerColor].recordedCards = recordedCards\r\nend\r\n\r\n-- Check to see if player is planning to do a takeover\r\nfunction planningTakeover(player)\r\n    local p = playerData[player]\r\n    local phase = getCurrentPhase()\r\n    if phase ~= 3 or p.selectedCard then return false end\r\n\r\n    local node = p.miscSelectedCards\r\n\r\n    while node and node.value do\r\n        if isTakeoverPower(node.power) then\r\n            return true\r\n        end\r\n        node = node.next\r\n    end\r\nend\r\n\r\n-- iterator to go through all face-up cards in tableau plus the selection action card(s)\r\nfunction allCardsInTableau(player)\r\n    local pi = playerData[player].index\r\n    local objs = getObjectFromGUID(tableauZone_GUID[pi]).getObjects()\r\n    local actionCards = getObjectFromGUID(selectedActionZone_GUID[pi]).getObjects()\r\n\r\n    for _, item in pairs(actionCards) do\r\n        if item.hasTag(\"Action Card\") then\r\n            objs[#objs + 1] = item\r\n        end\r\n    end\r\n\r\n    local n = #objs\r\n    local i = 0\r\n\r\n    return function()\r\n            i = i + 1\r\n\r\n            while i <= n and objs[i] and (objs[i].type ~= 'Card' or objs[i].is_face_down) do\r\n                i = i + 1\r\n            end\r\n\r\n            if i <= n then\r\n                return objs[i]\r\n            end\r\n        end\r\nend\r\n\r\n-- ======================\r\n-- Event functions\r\n-- ======================\r\n\r\nfunction tryObjectRotate(object, spin, flip, player_color, old_spin, old_flip)\r\n    local inHandZone = false\r\n\r\n    local zones = object.getZones()\r\n    for i=1, #zones do\r\n        if handZoneMap[zones[i].getGUID()] then\r\n            inHandZone = true\r\n            break\r\n        end\r\n    end\r\n\r\n    -- check to see if the object is in the player's hand zone to prevent mark for deletion\r\n    if (object.hasTag(\"Selected\") or \r\n            object.hasTag(\"Explore Highlight\") and currentPhaseIndex == -1 or \r\n            not object.hasTag(\"Explore Highlight\") and getCurrentPhase() == 1 and not playerData[player_color].beforeExplore) and\r\n            inHandZone and flip == 180 then\r\n        local rot = object.getRotation()\r\n        --object.setRotation({rot[1], rot[2], 0})\r\n        return false\r\n    elseif object.hasTag(\"Marked\") and inHandZone and flip == 0 then\r\n        local rot = object.getRotation()\r\n        --object.setRotation({rot[1], rot[2], 180})\r\n        return false\r\n    end\r\n\r\n    if inHandZone and (flip == 180 or flip == 0) and not object.hasTag(\"Selected\") then\r\n        if player_color then\r\n            local p = playerData[player_color]\r\n            if enforceRules and (not p.canFlip or p.canReady) and flip == 180 then\r\n                local rot = object.getRotation()\r\n                --object.setRotation({rot[1], rot[2], 0})\r\n                return false\r\n            end\r\n        end\r\n\r\n        if flip == 180 then\r\n            object.addTag(\"Discard\")\r\n            if player_color then updateReadyButtons({player_color, false}) end\r\n        elseif flip == 0 then\r\n            object.removeTag(\"Discard\")\r\n            if player_color then updateReadyButtons({player_color, false}) end\r\n        end\r\n\r\n        updateHelpText(player_color)\r\n    end\r\n\r\n    return true\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, object)\r\n    if object.isDestroyed() then return end\r\n\r\n    local isHandZone = handZoneMap[zone.getGUID()]\r\n    local isTableauZone = tableauZoneMap[zone.getGUID()]\r\n\r\n    if zone == drawZone then\r\n    --      drawDeck = nil\r\n    -- elseif zone == discardZone then\r\n    --      discardPile = nil\r\n    elseif isHandZone then\r\n        local player = handZoneOwner[zone.getGUID()]\r\n\r\n        object.removeTag(\"Discard\")\r\n        object.clearButtons()\r\n\r\n        if object.hasTag(\"Explore Highlight\") then\r\n            highlightOff(object)\r\n        end\r\n\r\n        queueUpdate(player)\r\n    elseif isTableauZone then\r\n        if object.hasTag(\"Ignore Tableau\") then return end\r\n\r\n        local player = tableauZoneOwner[zone.getGUID()]\r\n        local p = playerData[player]\r\n        local selectedCard = getObjectFromGUID(p.selectedCard)\r\n\r\n        if object.type == 'Card' or object.hasTag(\"VP\") then\r\n            -- Force deselect for removing selected card from tableau\r\n            if (getCurrentPhase() == 4 or getCurrentPhase() == 5) and selectedCard == object then\r\n                p.selectedCard = nil\r\n            end\r\n\r\n            if not object.hasTag(\"Explore Highlight\") then\r\n                object.highlightOff()\r\n                highlightOff(object)\r\n            end\r\n\r\n            if object.getScale()[1] < 1 and object.type == \"Card\" then\r\n                object.setScale({1, 1, 1})\r\n                object.setDescription(\"\")\r\n\r\n                if p.selectedGoods[object.getGUID()] then\r\n                    p.selectedGoods[object.getGUID()] = nil\r\n                end\r\n            end\r\n\r\n            if object.type == 'Card' then\r\n                displayVpHexOff(object)\r\n                object.setSnapPoints({})\r\n                object.clearButtons()\r\n                local slot = getCardSlot(object)\r\n                if slot then slot.clearButtons() end\r\n            end\r\n\r\n            p.miscSelectedCards = deleteLinkedListNode(p.miscSelectedCards, object.getGUID())\r\n            queueUpdate(player)\r\n        end\r\n    end\r\nend\r\n\r\nfunction onObjectEnterZone(zone, object)\r\n    if object.isDestroyed() then return end\r\n\r\n    local isHandZone = handZoneMap[zone.getGUID()]\r\n    local isTableauZone = tableauZoneMap[zone.getGUID()]\r\n\r\n    if isHandZone then\r\n        local player = handZoneOwner[zone.getGUID()]\r\n\r\n        if object.is_face_down then\r\n            object.addTag(\"Discard\")\r\n        end\r\n\r\n        if object.hasTag(\"Ignore Tableau\") then\r\n            object.removeTag(\"Ignore Tableau\")\r\n        end\r\n\r\n        if object.type == 'Card' then\r\n            displayVpHexOff(object)\r\n        end\r\n\r\n        queueUpdate(player)\r\n    elseif isTableauZone and (object.type == 'Card' or object.hasTag(\"VP\")) then\r\n        if object.hasTag(\"Ignore Tableau\") then return end\r\n\r\n        local player = tableauZoneOwner[zone.getGUID()]\r\n\r\n        if object.is_face_down then\r\n            -- Check to see if card is below it to decide if this card is a goods card\r\n            local hits = Physics.cast({\r\n                origin = object.getPosition(),\r\n                direction = {0, -1, 0},\r\n                max_distance = 2\r\n            })\r\n\r\n            for _, hit in pairs(hits) do\r\n                local o = hit.hit_object\r\n                if o.type == 'Card' and not o.is_face_down then\r\n                    local data = card_db[o.getName()]\r\n                    if data and data.goods then\r\n                        object.setScale({0.6, 1, 0.6})\r\n                        object.setDescription(o.getGUID())\r\n                        object.highlightOn(goodsHighlightColor[data.goods])\r\n                        playerData[player].incomingGood = false\r\n                        break\r\n                    end\r\n                end\r\n            end\r\n        -- face up card, check if need to place snap point for goods placement\r\n        else\r\n            local data = card_db[object.getName()]\r\n            if data and data.goods then\r\n                object.setSnapPoints({{\r\n                    position = goodsSnapPointOffset,\r\n                    rotation = {0, 0, 0},\r\n                    rotation_snap = true\r\n                }})\r\n            end\r\n        end\r\n\r\n        queueUpdate(player)\r\n     end\r\nend\r\n\r\nfunction onObjectEnterContainer(container, enter_object)\r\n    if container.hasTag(\"VP\") then\r\n        for _, zone in pairs(container.getZones()) do\r\n            local owner = tableauZoneOwner[zone.getGUID()]\r\n            if owner then\r\n                queueUpdate(owner)\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction onObjectLeaveContainer(container, leave_object)\r\n    if container.hasTag(\"VP\") then\r\n        for _, zone in pairs(container.getZones()) do\r\n            local owner = tableauZoneOwner[zone.getGUID()]\r\n            if owner then\r\n                queueUpdate(owner)\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction onUpdate()\r\n    for player, willUpdate in pairs(queueUpdateState) do\r\n        if willUpdate and os.clock() > updateTimeSnapshot[player] + 0.2 then\r\n            queueUpdateState[player] = false\r\n\r\n            local p = playerData[player]\r\n            if p.selectedCard and not getObjectFromGUID(p.selectedCard) then\r\n                p.selectedCard = nil\r\n                p.selectedCardPower = \"\"\r\n                p.miscSelectedCards = {}\r\n            end\r\n\r\n            capturePowersSnapshot(player, tostring(getCurrentPhase()))\r\n            updateHandState(player)\r\n            updateTableauState(player)\r\n            updateVp(player)\r\n            updateHelpText(player)\r\n        end\r\n    end\r\nend\r\n\r\nfunction queueUpdate(playerColor, now)\r\n     now = now or false\r\n     queueUpdateState[playerColor] = true\r\n     updateTimeSnapshot[playerColor] = now and 0 or os.clock()\r\nend\r\n\r\n-- ======================\r\n-- Game functions\r\n-- ======================\r\n\r\nfunction gameStart(params)\r\n    playerData = {Yellow=player(1),Red=player(2),Blue=player(3),Green=player(4)}\r\n\r\n    gameStarted = true\r\n    currentPhaseIndex = -1\r\n    advanced2p = params.advanced2p\r\n    useTakeovers = params.takeovers\r\n    expansionLevel = params.expansionLevel\r\n\r\n    trySetAdvanced2pMode()\r\n\r\n    for _, data in pairs(phaseTilePlacement) do\r\n        local tile = componentsBag.takeObject({\r\n            guid = data[1],\r\n            position = data[2],\r\n            rotation = {0, 180, 180},\r\n            smooth = false\r\n        })\r\n\r\n        tile.setLock(true)\r\n        tile.interactable = false\r\n    end\r\n\r\n    for player, data in pairs(playerData) do\r\n        local i = data.index\r\n        data.handCountSnapshot = 6\r\n\r\n        -- remove prestige search card\r\n        if expansionLevel < 3 then\r\n            local cards = getObjectsWithTag(\"PrestigeSearch\")\r\n            for _, card in pairs(cards) do\r\n                componentsBag.putObject(card)\r\n            end\r\n        else\r\n            -- add the prestige search button to menu\r\n            local menu = getObjectFromGUID(actionSelectorMenu_GUID[i])\r\n            local btn = componentsBag.takeObject({\r\n                guid = prestigeButton_GUID[i],\r\n                position = menu.positionToWorld({10.05, 0, 0}),\r\n                rotation = menu.getRotation(),\r\n                smooth = false,\r\n                callback_function = function(x)\r\n                    x.setLock(true)\r\n                    x.interactable = false\r\n                end\r\n            })\r\n        end\r\n\r\n        -- remove 2p adv cards\r\n        if advanced2p == false then\r\n            local cards = getObjectsWithTag(\"Adv2p\")\r\n            for _, card in pairs(cards) do\r\n                componentsBag.putObject(card)\r\n            end\r\n        else\r\n            getObjectFromGUID(actionSelectorMenu_GUID[i]).rotate({0, 0, 180})\r\n        end\r\n    end\r\n\r\n    broadcastToAll(\"Determine your starting hand.\", \"White\")\r\nend\r\n\r\nfunction playerReadyClicked(playerColor, forced, playSound)\r\n    local p = playerData[playerColor]\r\n    local count = getSelectedActionsCount(playerColor)\r\n    local currentPhase = getCurrentPhase()\r\n\r\n    if transitionNextPhase then\r\n        updateReadyButtons({playerColor, false})\r\n        return\r\n    end\r\n\r\n    if currentPhaseIndex < 0 and enforceRules then\r\n        if not p.selectedCard then\r\n            broadcastToColor(\"You must select a start world.\", playerColor, \"White\")\r\n            updateReadyButtons({playerColor, false})\r\n            return\r\n        elseif not p.canReady then\r\n            broadcastToColor(\"Please discard the required number of cards.\", playerColor, \"White\")\r\n            updateReadyButtons({playerColor, false})\r\n            return\r\n        end\r\n    elseif currentPhaseIndex == 0 and (advanced2p and count < 2 or not advanced2p and count < 1) then\r\n        if advanced2p then\r\n            broadcastToColor(\"You must select 2 action cards!\", playerColor, \"White\")\r\n        else\r\n            broadcastToColor(\"You must select an action card!\", playerColor, \"White\")\r\n        end\r\n\r\n        updateReadyButtons({playerColor, false})\r\n        return\r\n    elseif currentPhase == 1 then\r\n        if enforceRules then\r\n            if p.beforeExplore then\r\n                broadcastToColor(\"You must confirm the card's power before clicking ready!\", playerColor, \"White\")\r\n                return\r\n            elseif not p.canReady then\r\n                broadcastToColor(\"Please discard the required number of cards.\", playerColor, \"White\")\r\n                updateReadyButtons({playerColor, false})\r\n                return\r\n            end\r\n        end\r\n    elseif currentPhase == 2 or currentPhase == 3 then\r\n        local node = p.miscSelectedCards\r\n        while node and node.next do\r\n            node = node.next\r\n        end\r\n\r\n        if node and node.power and requiresConfirm[concatPowerName(node.power)] then\r\n            broadcastToColor(\"You must confirm or cancel the card's power before clicking ready!\", playerColor, \"White\")\r\n            updateReadyButtons({playerColor, false})\r\n            return\r\n        end\r\n\r\n        if currentPhase == 3 and planningTakeover(playerColor) and not p.takeoverTarget then\r\n            broadcastToColor(\"You must have a valid takeover target.\", playerColor, \"White\")\r\n            updateReadyButtons({playerColor, false})\r\n            return\r\n        end\r\n\r\n        if enforceRules and p.selectedCard and not p.canReady then\r\n            local info = card_db[getObjectFromGUID(p.selectedCard).getName()]\r\n            local payMilitary = false\r\n            local node = p.miscSelectedCards\r\n            while node and node.value do -- check for some flags\r\n                if node.power.name == \"PAY_MILITARY\" then payMilitary = true end\r\n                node = node.next\r\n            end\r\n            if currentPhase == 3 and info.flags[\"MILITARY\"] and not payMilitary then\r\n                broadcastToColor(\"You do not have enough Military.\", playerColor, \"White\")\r\n            else\r\n                broadcastToColor(\"Please discard the required number of cards.\", playerColor, \"White\")\r\n            end\r\n            updateReadyButtons({playerColor, false})\r\n            return\r\n        end\r\n    elseif currentPhase == 4 or currentPhase == 5 then\r\n        if p.selectedCard then\r\n            local info = card_db[getObjectFromGUID(p.selectedCard).getName()]\r\n            if info.activePowers[tostring(currentPhase)] then\r\n                local power = info.activePowers[tostring(currentPhase)][p.selectedCardPower]\r\n                if power and requiresConfirm[concatPowerName(power)] then\r\n                    broadcastToColor(\"You must confirm or cancel the card's power before clicking ready!\", playerColor, \"White\")\r\n                    updateReadyButtons({playerColor, false})\r\n                    return\r\n                end\r\n            end\r\n        end\r\n\r\n        if enforceRules and not p.canReady then\r\n            broadcastToColor(\"You have remaining powers to use.\", playerColor, \"White\")\r\n            updateReadyButtons({playerColor, false})\r\n            return\r\n        end\r\n    elseif currentPhase == 100 and enforceRules and not p.canReady then\r\n        broadcastToColor(\"Please discard the required number of cards.\", playerColor, \"White\")\r\n        updateReadyButtons({playerColor, false})\r\n        return\r\n    end\r\n\r\n    if playSound then\r\n        sound.AssetBundle.playTriggerEffect(3)\r\n    end\r\n    startLuaCoroutine(Global, \"checkAllReadyCo\")\r\nend\r\n\r\n-- Makes all the ready buttons belonging to player the same toggle state\r\n-- [1] = owner, [2] = state\r\nfunction updateReadyButtons(params)\r\n    local player = params[1]\r\n    local state = params[2]\r\n    local playSound = false\r\n    if #params >= 3 then\r\n        playSound = params[3]\r\n    end\r\n    local i = playerData[player].index\r\n    local token = getObjectFromGUID(readyTokens_GUID[i])\r\n    if token then token.call(\"setToggleState\", state) end\r\n    token = getObjectFromGUID(smallReadyTokens_GUID[i])\r\n    if token then token.call(\"setToggleState\", state) end\r\n\r\n    if params[2] then\r\n        playerReadyClicked(player, true, playSound)\r\n    end\r\nend\r\n\r\nfunction checkAllReadyCo()\r\n    -- Check if all players are ready to move on to next step of game\r\n    local players = getSeatedPlayersWithHands()\r\n\r\n    for _, player in pairs(players) do\r\n        local readyToken = getObjectFromGUID(readyTokens_GUID[playerData[player].index])\r\n        if not readyToken.getVar(\"isReady\") then return 1 end\r\n    end\r\n\r\n    transitionNextPhase = true\r\n    Wait.time(function() transitionNextPhase = false end, 3)\r\n\r\n    Global.setVectorLines(getDefaultVectorLines())\r\n\r\n    local prestigeBag = getObjectFromGUID(prestigeBag_GUID)\r\n    local discardHappened = false\r\n    local takeDiscard = nil\r\n    local phase = getCurrentPhase()\r\n\r\n    for _, player in pairs(players) do\r\n        local p = playerData[player]\r\n        local node = p.miscSelectedCards\r\n\r\n        Global.UI.setAttribute(\"takeoverMenu_\" .. player, \"active\", false)\r\n        if p.powersSnapshot[\"TAKE_DISCARDS\"] and phase == 100 then takeDiscard = player end\r\n\r\n        -- remove misc selected cards if they have discard power\r\n        while node and node.value do\r\n            local card = getObjectFromGUID(node.value)\r\n            local info = card_db[card.getName()]\r\n            local power = node.power\r\n            if power and (power.name == 'DISCARD' and not power.codes[\"TAKEOVER_MILITARY\"] or power.name == \"DISCARD_REDUCE\" or power.name == \"DISCARD_CONQUER_SETTLE\") then\r\n                discardCard(card)\r\n                discardHappened = true\r\n                if power.name == 'DISCARD' and power.codes[\"EXTRA_MILITARY\"] then\r\n                    p.tempMilitary = p.tempMilitary + power.strength\r\n                end\r\n            end\r\n            node = node.next\r\n        end\r\n\r\n        -- remove used prestige\r\n        if p.consumedPrestige > 0 then\r\n            for k, v in pairs(p.prestigeChips) do\r\n                local chips = getObjectFromGUID(k)\r\n                if chips.getQuantity() < 0 then\r\n                    prestigeBag.putObject(chips)\r\n                    p.consumedPrestige = p.consumedPrestige - 1\r\n                else\r\n                    -- stack of chips\r\n                    for i=1, chips.getQuantity() do\r\n                        prestigeBag.putObject(chips.takeObject())\r\n                        p.consumedPrestige = p.consumedPrestige - 1\r\n\r\n                        if p.consumedPrestige <= 0 then break end\r\n                    end\r\n                end\r\n\r\n                if p.consumedPrestige <= 0 then break end\r\n            end\r\n        end\r\n\r\n        if p.consumedPrestige > 0 then\r\n            broadcastToAll(\"Error: \" .. (Player[player].steam_name or player) .. \" spent non-existing Prestige.\", color(1,0,0))\r\n            p.consumedPrestige = 0\r\n        end\r\n    end\r\n\r\n    if discardHappened then wait(0.1) end\r\n\r\n    -- resolve takeovers\r\n    if takeoverPhase and resolveTakeovers() then\r\n        wait(1.5)\r\n    end\r\n\r\n    -- play selected cards in hand\r\n    local placeTwo = {false,false,false,false}\r\n    local placeTwoTriggered = false\r\n    for _, player in pairs(players) do\r\n        for _, obj in pairs(Player[player].getHandObjects(1)) do\r\n            if obj.type == 'Card' and obj.hasTag(\"Selected\") then\r\n                attemptPlayCard(obj, player)\r\n            elseif not phase and obj.hasTag(\"Explore Highlight\") then\r\n                -- discard not selected starting homeworld\r\n                discardCard(obj)\r\n            end\r\n        end\r\n\r\n        local p = playerData[player]\r\n        if not placeTwoPhase and phase == 3 and p.powersSnapshot[\"PLACE_TWO\"] and p.lastPlayedCard then\r\n            placeTwo[p.index] = true\r\n            placeTwoPhase = true\r\n            placeTwoTriggered = true\r\n        end\r\n\r\n        -- discard all face down cards in hand\r\n        if currentPhaseIndex ~= 0 then\r\n            local n = 0\r\n\r\n            if takeDiscard then\r\n                n = giveMarkedCards(player, takeDiscard)\r\n            else\r\n                n = #discardMarkedCards(player)\r\n            end\r\n\r\n            if currentPhaseIndex == #selectedPhases then\r\n                p.roundEndDiscardCount = n\r\n            end\r\n        end\r\n        p.selectedCard = nil\r\n    end\r\n\r\n    wait(0.1)\r\n\r\n    for _, player in pairs(players) do\r\n        playerData[player].miscSelectedCards = {}\r\n        updateReadyButtons({player, false})\r\n        queueUpdate(player, true)\r\n        playerData[player].beingTargeted = nil\r\n    end\r\n\r\n    -- Trigger takeovers\r\n    if useTakeovers and not takeoverPhase then\r\n        local targetedPlayers = {}\r\n        local intendTakeover = {false, false, false, false}\r\n        local takeoverTriggered = false\r\n        for _, player in pairs(players) do\r\n            local p = playerData[player]\r\n            if p.takeoverTarget then\r\n                broadcastToAll((Player[player].steam_name or player) .. \" is attempting a takeover!\", player)\r\n                takeoverTriggered = true\r\n                intendTakeover[p.index] = true\r\n\r\n                local card = getObjectFromGUID(p.takeoverTarget)\r\n                local targetPlayer = tableauZoneOwner[card.getZones()[1].getGUID()]\r\n                local otherp = playerData[targetPlayer]\r\n\r\n                if not otherp.beingTargeted then otherp.beingTargeted = {} end\r\n\r\n                otherp.beingTargeted[p.takeoverTarget] = true\r\n                if Player[targetPlayer].seated then\r\n                    broadcastToColor(\"You are being targeted for a takeover by \" .. (Player[player].steam_name or player) .. \"!\", targetPlayer, \"Purple\")\r\n                end\r\n            end\r\n\r\n            queueUpdate(player)\r\n        end\r\n\r\n        if takeoverTriggered then\r\n            transitionNextPhase = false\r\n            sound.AssetBundle.playTriggerEffect(1)\r\n            takeoverPhase = true\r\n            drawTakeoverLines()\r\n            return 1\r\n        end\r\n    else\r\n        takeoverPhase = false\r\n    end\r\n\r\n    -- Trigger Improved Logistics\r\n    for _, player in pairs(players) do\r\n        if placeTwoTriggered then\r\n            if placeTwo[playerData[player].index] then\r\n                broadcastToAll(\"Waiting for \" .. Player[player].steam_name .. \"'s use of Improved Logistics.\", player)\r\n            else\r\n                updateReadyButtons({player, true})\r\n            end\r\n        end\r\n\r\n        queueUpdate(player)\r\n    end\r\n\r\n    if placeTwoTriggered then\r\n        sound.AssetBundle.playTriggerEffect(1)\r\n        transitionNextPhase = false\r\n        return 1\r\n    end\r\n\r\n    if gameStarted and currentPhaseIndex == -1 then\r\n        startNewRound()\r\n        transitionNextPhase = false\r\n        return 1\r\n    end\r\n\r\n    -- delay time if needed to process moving cards or tokens\r\n    if delayNextPhase then\r\n        delayNextPhase = false\r\n        local delayTime = math.max(1.5 - (os.clock() - delayNextPhaseTime), 0)\r\n        wait(delayTime)\r\n    end\r\n\r\n    if currentPhaseIndex == 0 then  -- All players have selected an action\r\n        local phases = {}\r\n\r\n        -- flip over all selected phase cards and phase tiles\r\n        for _, guid in pairs(selectedActionZone_GUID) do\r\n            local zone = getObjectFromGUID(guid)\r\n            local selectedActions = {}\r\n\r\n            for _, obj in pairs(zone.getObjects()) do\r\n                if obj.hasTag(\"Action Card\") and obj.is_face_down then\r\n                    obj.flip()\r\n                    local name = split(getName(obj), \" \")[1]\r\n                    selectedActions[name] = true\r\n                end\r\n            end\r\n\r\n            -- Doing some checks for double selection of phase cards for 2p advanced variant\r\n            if selectedActions[\"DevelopAdv2p\"] and not selectedActions[\"Develop\"] then\r\n                selectedActions[\"DevelopAdv2p\"] = nil\r\n                selectedActions[\"Develop\"] = true\r\n            end\r\n\r\n            if selectedActions[\"SettleAdv2p\"] and not selectedActions[\"Settle\"] then\r\n                selectedActions[\"SettleAdv2p\"] = nil\r\n                selectedActions[\"Settle\"] = true\r\n            end\r\n\r\n            for name, value in pairs(selectedActions) do\r\n                if value then phases[name] = true end\r\n            end\r\n        end\r\n\r\n        for phase, _ in pairs(phases) do\r\n            local index = phaseIndex[phase]\r\n            local tile = getObjectFromGUID(phaseTilePlacement[index][1])\r\n            tile.setRotationSmooth({0, 180, 0})\r\n            selectedPhases[#selectedPhases + 1] = phaseIndex[phase]\r\n        end\r\n\r\n        selectedPhases[#selectedPhases + 1] = 100\r\n        table.sort(selectedPhases)\r\n        currentPhaseIndex = -1000\r\n\r\n        wait(1.25)\r\n\r\n        beginNextPhase()\r\n    elseif currentPhaseIndex >= 1 then\r\n        for player, data in pairs(playerData) do\r\n            capturePowersSnapshot(player, tostring(getCurrentPhase()))\r\n        end\r\n        endOfPhaseGoalCheck()\r\n\r\n        if currentPhaseIndex > #selectedPhases then\r\n            -- round end\r\n        else\r\n            beginNextPhase()\r\n        end\r\n    end\r\n    transitionNextPhase = false\r\n    return 1\r\nend\r\n\r\nfunction startNewRound()\r\n    selectedPhases = {}\r\n    resetPhaseTiles()\r\n\r\n    if checkEndGame() and not gameDone then\r\n        gameDone = true\r\n        wait(1.5)\r\n        broadcastToAll(\"The game has ended.\", \"Purple\")\r\n        sound.AssetBundle.playTriggerEffect(4)\r\n    elseif currentPhaseIndex ~= 0 then\r\n        broadcastToAll(\"Starting new round.\", color(0, 1, 1))\r\n        sound.AssetBundle.playTriggerEffect(2)\r\n    end\r\n\r\n    currentPhaseIndex = 0\r\n\r\n    for player, data in pairs(playerData) do\r\n        resetPlayerState(player)\r\n        updateReadyButtons({player, false})\r\n        queueUpdate(player, true)\r\n    end\r\n\r\n    startLuaCoroutine(self, \"returnActionCardsCo\")\r\nend\r\n\r\nfunction returnActionCardsCo()\r\n     for i=1, 4 do\r\n          local o = getObjectFromGUID(actionSelectorMenu_GUID[i])\r\n          o.call(\"returnSelectedActionCard\")\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction beginNextPhase()\r\n     -- This shouldn't happen at all, but if it did...\r\n    if not selectedPhases or #selectedPhases <= 0  then\r\n        broadcastToAll(\"Error: No phases selected.\", color(1,0,0))\r\n        startNewRound()\r\n        return 1\r\n    end\r\n\r\n    local phase = getCurrentPhase()\r\n\r\n    if currentPhaseIndex <= 0 then currentPhaseIndex = 0 end\r\n\r\n    queuePlaceTwoPhase = false\r\n    placeTwoPhase = false\r\n    takeoverPhase = false\r\n\r\n    -- Apply end of phase powers here\r\n    if phase == 5 then\r\n        -- Count total produce\r\n        for player, data in pairs(playerData) do\r\n            data.produceCount[\"TOTAL\"] = 0\r\n            for type, value in pairs(data.produceCount) do\r\n                data.produceCount[\"TOTAL\"] = data.produceCount[\"TOTAL\"] + value\r\n            end\r\n        end\r\n\r\n        local tieRare = false\r\n        local tieChromo = false\r\n        local tieProduce = false\r\n        local most = {[\"RARE\"]=nil,[\"CHROMO_WORLDS\"]=nil,[\"TOTAL\"]=nil}\r\n        for player, data in pairs(playerData) do\r\n            if not most[\"RARE\"] or data.produceCount[\"RARE\"] > playerData[most[\"RARE\"]].produceCount[\"RARE\"]  then\r\n                tieRare = false\r\n                most[\"RARE\"] = player\r\n            elseif data.produceCount[\"RARE\"] == playerData[most[\"RARE\"]].produceCount[\"RARE\"] then\r\n                tieRare = true\r\n            end\r\n\r\n            if not most[\"CHROMO_WORLDS\"] or data.powersSnapshot[\"CHROMO_WORLDS\"] > playerData[most[\"CHROMO_WORLDS\"]].powersSnapshot[\"CHROMO_WORLDS\"] then\r\n                tieChromo = false\r\n                most[\"CHROMO_WORLDS\"] = player\r\n            elseif data.powersSnapshot[\"CHROMO_WORLDS\"] == playerData[most[\"CHROMO_WORLDS\"]].powersSnapshot[\"CHROMO_WORLDS\"] then\r\n                tieChromo = true\r\n            end\r\n\r\n            if not most[\"TOTAL\"] or data.produceCount[\"TOTAL\"] > playerData[most[\"TOTAL\"]].produceCount[\"TOTAL\"] then\r\n                tieProduce = false\r\n                most[\"TOTAL\"] = player\r\n            elseif data.produceCount[\"TOTAL\"] == playerData[most[\"TOTAL\"]].produceCount[\"TOTAL\"] then\r\n                tieProduce = true\r\n            end\r\n        end\r\n\r\n        for player, data in pairs(playerData) do\r\n            if data.powersSnapshot[\"DRAW_MOST_RARE\"] then\r\n                if tieRare or most[\"RARE\"] ~= player then\r\n                    broadcastToColor(\"Mining Conglomerate: You did not produce the most Rare goods this phase.\", player, \"Grey\")\r\n                elseif most[\"RARE\"] == player then\r\n                    broadcastToColor(\"Mining Conglomerate: You produced the most Rare goods this phase.\", player, player)\r\n                    dealTo(data.powersSnapshot[\"DRAW_MOST_RARE\"], player)\r\n                end\r\n            end\r\n\r\n            if data.powersSnapshot[\"PRESTIGE_MOST_CHROMO\"] then\r\n                if tieChromo or most[\"CHROMO_WORLDS\"] ~= player then\r\n                    broadcastToColor(\"Ravaged Uplift World: You do not have the most Chromosome worlds in your tableau.\", player, \"Grey\")\r\n                elseif most[\"CHROMO_WORLDS\"] == player then\r\n                    broadcastToColor(\"Ravaged Uplift World: You have the most Chromosome worlds in your tableau.\", player, player)\r\n                    getPrestigeChips(player, 1)\r\n                end\r\n            end\r\n\r\n            if data.powersSnapshot[\"DRAW_MOST_PRODUCED\"] then\r\n                if tieProduce or most[\"TOTAL\"] ~= player then\r\n                    broadcastToColor(\"Pan-Galactic Affluence: You did not produce the most goods this phase.\", player, \"Grey\")\r\n                elseif most[\"TOTAL\"] == player then\r\n                    broadcastToColor(\"Pan-Galactic Affluence: You produced the most goods this phase.\", player, player)\r\n                    dealTo(data.powersSnapshot[\"DRAW_MOST_PRODUCED\"], player)\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    currentPhaseIndex = currentPhaseIndex + 1\r\n    phase = getCurrentPhase()\r\n\r\n    for player, data in pairs(playerData) do\r\n        resetPlayerState(player)\r\n        updateReadyButtons({player, false})\r\n    end\r\n    updatePhaseTilesHighlight()\r\n\r\n    if currentPhaseIndex <= #selectedPhases - 1 then\r\n        broadcastToAll(phaseText[selectedPhases[currentPhaseIndex]], \"White\")\r\n        sound.AssetBundle.playTriggerEffect(0)\r\n\r\n        if phase == 1 then\r\n            startExplorePhase()\r\n        elseif phase == 2 then\r\n            startDevelopPhase()\r\n        elseif phase == 3 then\r\n            startSettlePhase()\r\n        elseif phase == 4 then\r\n            startConsumePhase()\r\n        elseif phase == 5 then\r\n            startProducePhase()\r\n        end\r\n    elseif currentPhaseIndex == #selectedPhases then\r\n        broadcastToAll(\"End of round.\", \"White\")\r\n        wait(1)\r\n        -- Check if any players need to discard cards\r\n        local skipPlayers = {}\r\n        local mustDiscard = false\r\n        local players = getSeatedPlayersWithHands()\r\n        for _, player in pairs(players) do\r\n            local p = playerData[player]\r\n            local n = countCardsInHand(player)\r\n            local maxHandSize = p.powersSnapshot[\"DISCARD_TO_12\"] and 12 or 10\r\n            p.handCountSnapshot = n\r\n            if n > maxHandSize then\r\n                mustDiscard = true\r\n                transitionNextPhase = false\r\n                broadcastToAll((Player[player].steam_name or player) .. \" must discard down to \" .. maxHandSize .. \" cards.\", player)\r\n            else\r\n                skipPlayers[player] = true\r\n            end\r\n        end\r\n\r\n        if not mustDiscard then\r\n            startNewRound()\r\n        else\r\n            for player, skip in pairs(skipPlayers) do\r\n                playerData[player].canReady = true\r\n                updateReadyButtons({player, true})\r\n            end\r\n        end\r\n    else\r\n        -- end of round\r\n        startNewRound()\r\n    end\r\n\r\n    for player, data in pairs(playerData) do\r\n        data.usedPower = true\r\n        queueUpdate(player, true)\r\n    end\r\nend\r\n\r\nfunction checkEndGame()\r\n    if not gameEndMessage then\r\n        for player, data in pairs(playerData) do\r\n            local p = playerData[player]\r\n            local count = 0\r\n            for card in allCardsInTableau(player) do\r\n                if not card.hasTag(\"Ignore Tableau\") and not card.is_face_down and not card.hasTag(\"Action Card\") then\r\n                    count = count + 1\r\n                end\r\n            end\r\n\r\n            local limit = 12\r\n            if p.powersSnapshot[\"GAME_END_14\"] then limit = 14 end\r\n            if count >= limit then\r\n                broadcastToAll((Player[player].steam_name or player) .. \" has played \" .. limit .. \" cards in their tableau.\", player)\r\n                gameEndMessage = true\r\n            end\r\n        end\r\n    end\r\n\r\n    return gameEndMessage\r\nend\r\n\r\nfunction updatePhaseTilesHighlight()\r\n    phaseTilesHighlightOff()\r\n\r\n    local phase = selectedPhases[currentPhaseIndex]\r\n    if phase and phase < 100 then\r\n        -- hilight current phase tile\r\n        local tile = getObjectFromGUID(phaseTilePlacement[phase][1])\r\n        tile.UI.setAttribute(\"highlight\", \"active\", true)\r\n    end\r\nend\r\n\r\nfunction phaseTilesHighlightOff()\r\n    for i=1, #phaseTilePlacement do\r\n        local tile = getObjectFromGUID(phaseTilePlacement[i][1])\r\n        if tile then tile.UI.setAttribute(\"highlight\", \"active\", false) end\r\n    end\r\nend\r\n\r\nfunction resetPhaseTiles()\r\n     for i=1, #phaseTilePlacement do\r\n          local tile = getObjectFromGUID(phaseTilePlacement[i][1])\r\n          tile.setRotationSmooth({0, 180, 180})\r\n     end\r\nend\r\n\r\nfunction startExplorePhase()\r\n    local players = getSeatedPlayersWithHands()\r\n\r\n    for _, player in pairs(players) do\r\n        local p = playerData[player]\r\n        capturePowersSnapshot(player, \"1\")\r\n\r\n        if p.powersSnapshot[\"DISCARD_PRESTIGE\"] then\r\n            p.handCountSnapshot = countCardsInHand(player)\r\n            p.beforeExplore = true\r\n        else\r\n            doExploreDraw(player)\r\n        end\r\n    end\r\nend\r\n\r\nfunction doExploreDraw(player)\r\n    local p = playerData[player]\r\n    p.handCountSnapshot = countCardsInHand(player) + p.powersSnapshot[\"DRAW\"]\r\n\r\n    for j=1, p.powersSnapshot[\"DRAW\"] do\r\n        local card = drawCard()\r\n        card.deal(1, player)\r\n        card.addTag(\"Explore Highlight\")\r\n    end\r\nend\r\n\r\nfunction startDevelopPhase()\r\n    for player, data in pairs(playerData) do\r\n        data.cardsAlreadyUsed = {}\r\n        capturePowersSnapshot(player, \"2\")\r\n\r\n        if data.powersSnapshot[\"DRAW\"] then\r\n            dealTo(data.powersSnapshot[\"DRAW\"], player)\r\n        end\r\n\r\n        updateHandState(player)\r\n        updateHelpText(player)\r\n    end\r\nend\r\n\r\nfunction startSettlePhase()\r\n    for player, data in pairs(playerData) do\r\n        data.cardsAlreadyUsed = {}\r\n        data.miscSelectedCards = {}\r\n\r\n        capturePowersSnapshot(player, \"3\")\r\n        updateHandState(player)\r\n        updateHelpText(player)\r\n    end\r\nend\r\n\r\nfunction startConsumePhase()\r\n    for player, data in pairs(playerData) do\r\n        data.cardsAlreadyUsed = {}\r\n        data.miscSelectedCards = {}\r\n        data.selectedGoods = {}\r\n\r\n        capturePowersSnapshot(player, \"4\")\r\n\r\n        -- Force first selection choice to be the consume trade card, otherwise it'll be nil\r\n        local card = checkIfSelectedAction(player, \"Consume ($)\")\r\n        if card then\r\n            data.selectedCard = card.getGUID()\r\n            data.selectedCardPower = \"TRADE_ACTION\"\r\n        end\r\n\r\n        queueUpdate(player, true)\r\n    end\r\nend\r\n\r\nfunction startProducePhase()\r\n    for player, data in pairs(playerData) do\r\n        data.cardsAlreadyUsed = {}\r\n        data.produceCount = {[\"NOVELTY\"]=0,[\"RARE\"]=0,[\"GENE\"]=0,[\"ALIEN\"]=0}\r\n\r\n        capturePowersSnapshot(player, \"5\")\r\n\r\n        -- produce on production planets first\r\n        for card in allCardsInTableau(player) do\r\n            local info = card_db[card.getName()]\r\n\r\n            if info.passivePowers[\"5\"] and info.passivePowers[\"5\"][\"PRODUCE\"] then\r\n                tryProduceAt(player, card)\r\n            end\r\n        end\r\n\r\n        -- Force first selection choice to be the consume trade card, otherwise it'll be nil\r\n        local card = checkIfSelectedAction(player, \"Produce\")\r\n        if card then\r\n            data.selectedCard = card.getGUID()\r\n            data.selectedCardPower = \"WINDFALL_ANY\"\r\n        end\r\n\r\n        queueUpdate(player, true)\r\n    end\r\nend\r\n\r\n-- phase = (string) current phase\r\nfunction capturePowersSnapshot(player, phase)\r\n    local p = playerData[player]\r\n    local selectedCard = getObjectFromGUID(p.selectedCard)\r\n\r\n    if phase == \"nil\" and currentPhaseIndex < 0 then\r\n        -- special case if start of game\r\n        if currentPhaseIndex == -1 then\r\n            local targetDiscard = 2\r\n            \r\n            if selectedCard and card_db[selectedCard.getName()].flags[\"STARTHAND_3\"] then\r\n                targetDiscard = 3\r\n            end\r\n\r\n            p.powersSnapshot[\"DISCARD\"] = targetDiscard\r\n        end\r\n        return\r\n    end\r\n\r\n    local results = {}\r\n\r\n    -- -- Default values for Explore phase\r\n    if phase == \"1\" then\r\n        results[\"DRAW\"] = 2\r\n        results[\"KEEP\"] = 1\r\n    end\r\n\r\n    results[\"EXTRA_MILITARY\"] = 0\r\n    results[\"BONUS_MILITARY\"] = 0\r\n    results[\"CHROMO_WORLDS\"] = 0\r\n\r\n    local ignore2ndDevelop = false\r\n    local ignore2ndSettle = false\r\n    local chromoCount = 0\r\n    local rebelMilitaryWorldCount = 0\r\n    local militaryWorldCount = 0\r\n    local tradeChromoBonus = false\r\n    local perMilitary = false\r\n    local perChromo = false\r\n    local takeoverDefense = false\r\n\r\n    for card in allCardsInTableau(player) do\r\n        local info = card_db[card.getName()]\r\n        local phase3Ap = info.activePowers[\"3\"]\r\n\r\n        -- Check if have takeover powers\r\n        if not results[\"TAKEOVER_POWERS\"] and phase3Ap then\r\n            for name, ap in pairs(phase3Ap) do\r\n                if takeoverPowers[name] then\r\n                    results[\"TAKEOVER_POWERS\"] = 1\r\n                    goto out\r\n                else\r\n                    for code, _ in pairs(ap.codes) do\r\n                        if takeoverPowers[code] then\r\n                            results[\"TAKEOVER_POWERS\"] = 1\r\n                            goto out\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end\r\n\r\n        ::out::\r\n\r\n        -- Place two triggered, skip the action card power and the last played card's powers\r\n        if (placeTwoPhase or takeoverPhase) and (card.hasTag(\"Action Card\") or card.getGUID() == p.lastPlayedCard) or card.hasTag(\"Ignore Tableau\") then\r\n            goto next_card\r\n        end\r\n\r\n        if info.flags[\"DISCARD_TO_12\"] then results[\"DISCARD_TO_12\"] = 1 end\r\n        if info.flags[\"GAME_END_14\"] then results[\"GAME_END_14\"] = 1 end\r\n        if info.flags[\"IMPERIUM\"] then results[\"IMPERIUM\"] = 1 end\r\n        if info.flags[\"TAKE_DISCARDS\"] then results[\"TAKE_DISCARDS\"] = 1 end\r\n\r\n        if info.passivePowers[phase] then\r\n            local powers = info.passivePowers[phase]\r\n            for name, power in pairs(powers) do\r\n                if not results[name] then\r\n                    results[name] = 0\r\n                end\r\n\r\n                -- count certain powers only in specific cases\r\n                if phase == \"2\" then\r\n                    if advanced2p and card.getName() == \"Develop\" then\r\n                        if ignore2ndDevelop then goto skip end\r\n                        ignore2ndDevelop = true\r\n                    end\r\n                elseif phase == \"3\" then\r\n                    if advanced2p and card.getName() == \"Settle\" then\r\n                        if ignore2ndSettle then goto skip end\r\n                        ignore2ndSettle = true\r\n                    end\r\n\r\n                    -- record specialized military for takeovers\r\n                    if name == \"BONUS_MILITARY\" then\r\n                        local appendName = \"\"\r\n                        for code, v in pairs(power.codes) do    -- only need to grab the first code\r\n                            appendName = code .. \"_BONUS_MILITARY\"\r\n                            break\r\n                        end\r\n\r\n                        if appendName ~= \"\" and not results[appendName] then\r\n                            results[appendName] = power.strength\r\n                        elseif results[appendName] then\r\n                            results[appendName] = results[appendName] + power.strength\r\n                        end\r\n                    elseif name == \"TAKEOVER_DEFENSE\" then\r\n                        takeoverDefense = true\r\n                    end\r\n\r\n                    -- Do some manipulations for special cases\r\n                    if selectedCard then\r\n                        local selectedInfo = card_db[selectedCard.getName()]\r\n\r\n                        -- Ignore powers with non matching types or improper bonus military\r\n                        if name == \"REDUCE\" and next(power.codes) ~= nil and not power.codes[selectedInfo.goods or \"\"] or\r\n                            name == \"BONUS_MILITARY\" and (power.codes[\"AGAINST_REBEL\"] and not selectedInfo.flags[\"REBEL\"] or \r\n                                not power.codes[\"AGAINST_REBEL\"] and not power.codes[selectedInfo.goods or \"\"]) then\r\n                            goto skip\r\n                        end\r\n                    end\r\n\r\n                    if name == \"EXTRA_MILITARY\" and next(power.codes) ~= nil then\r\n                        if power.codes[\"PER_MILITARY\"] then\r\n                            perMilitary = true\r\n                        end\r\n                        if power.codes[\"PER_CHROMO\"] then\r\n                            perChromo = true\r\n                        end\r\n                        goto skip\r\n                    end\r\n                end\r\n\r\n                if name ~= \"BONUS_MILITARY\" then\r\n                    results[name] = results[name] + power.strength\r\n                end\r\n\r\n                if name == \"TRADE_GENE\" and power.codes[\"TRADE_BONUS_CHROMO\"] then\r\n                    tradeChromoBonus = true\r\n                end\r\n\r\n                ::skip::\r\n            end\r\n        end\r\n\r\n        -- Count base military for stat display purposes\r\n        if phase ~= \"3\" and info.passivePowers[\"3\"] then               \r\n            local mil = info.passivePowers[\"3\"][\"EXTRA_MILITARY\"]\r\n            if mil and next(mil.codes) == nil then\r\n                results[\"EXTRA_MILITARY\"] = results[\"EXTRA_MILITARY\"] + mil.strength\r\n            elseif mil and mil.codes[\"PER_MILITARY\"] then\r\n                perMilitary = true\r\n            elseif mil and mil.codes[\"PER_CHROMO\"] then\r\n                perChromo = true\r\n            end\r\n\r\n            mil = info.passivePowers[\"3\"][\"IMPERIUM_MILITARY\"]\r\n            if mil then\r\n                if not results[\"IMPERIUM_MILITARY\"] then results[\"IMPERIUM_MILITARY\"] = 0 end\r\n                results[\"IMPERIUM_MILITARY\"] = results[\"IMPERIUM_MILITARY\"] + mil.strength\r\n            end\r\n        end\r\n\r\n        if info.flags[\"CHROMO\"] then\r\n            chromoCount = chromoCount + 1\r\n            if info.type == 1 then\r\n                results[\"CHROMO_WORLDS\"] = results[\"CHROMO_WORLDS\"] + 1\r\n            end\r\n        end\r\n\r\n        if info.flags[\"MILITARY\"] then\r\n            militaryWorldCount = militaryWorldCount + 1\r\n            if info.flags[\"REBEL\"] then\r\n                rebelMilitaryWorldCount = rebelMilitaryWorldCount + 1\r\n            end\r\n        end\r\n\r\n        ::next_card::\r\n    end\r\n\r\n    if results[\"IMPERIUM\"] and results[\"IMPERIUM_MILITARY\"] then\r\n        results[\"EXTRA_MILITARY\"] = results[\"EXTRA_MILITARY\"] + results[\"IMPERIUM_MILITARY\"]\r\n    end\r\n\r\n    if tradeChromoBonus then\r\n        results[\"TRADE_GENE\"] = results[\"TRADE_GENE\"] + chromoCount\r\n    end\r\n\r\n    if perMilitary then\r\n        results[\"EXTRA_MILITARY\"] = results[\"EXTRA_MILITARY\"] + militaryWorldCount\r\n    end\r\n\r\n    if perChromo then\r\n        results[\"EXTRA_MILITARY\"] = results[\"EXTRA_MILITARY\"] + chromoCount\r\n    end\r\n\r\n    if takeoverDefense then\r\n        results[\"TAKEOVER_DEFENSE\"] = rebelMilitaryWorldCount * 2 + (militaryWorldCount - rebelMilitaryWorldCount)\r\n    end\r\n\r\n    results[\"REBEL_MILITARY_WORLD_COUNT\"] = rebelMilitaryWorldCount\r\n    \r\n    -- Track special cases\r\n    if phase then\r\n        local list = p.miscSelectedCards\r\n        while list and list.value do\r\n            local card = getObjectFromGUID(list.value)\r\n            if card then\r\n                local info = card_db[card.getName()]\r\n\r\n                for name, power in pairs(info.activePowers[phase]) do\r\n                    if name == \"DISCARD\" and power.codes[\"EXTRA_MILITARY\"] then\r\n                        results[\"BONUS_MILITARY\"] = results[\"BONUS_MILITARY\"] + power.strength\r\n                    end\r\n                end\r\n            end\r\n\r\n            list = list.next\r\n        end\r\n    end\r\n\r\n    p.powersSnapshot = results\r\n\r\n    local statTracker = getObjectFromGUID(statTracker_GUID[p.index])\r\n    if statTracker then\r\n        local xtra = 0\r\n        if placeTwoPhase or takeoverPhase then\r\n            xtra = p.tempMilitary\r\n        end\r\n        statTracker.call(\"updateLabel\", {\"military\", results[\"EXTRA_MILITARY\"] + xtra})\r\n    end\r\nend\r\n\r\nfunction updateHandState(playerColor)\r\n    local p = playerData[playerColor]\r\n    local phase = getCurrentPhase()\r\n\r\n    for _, obj in pairs(Player[playerColor].getHandObjects(1)) do\r\n        local info = card_db[obj.getName()]\r\n\r\n        obj.clearButtons()\r\n\r\n        if transitionNextPhase then\r\n            \r\n        else\r\n            if not phase and currentPhaseIndex < 0 then   -- Opening hand\r\n                if obj.hasTag(\"Explore Highlight\") then\r\n                    if p.selectedCard then\r\n                        obj.highlightOff()\r\n                        if p.selectedCard ~= obj.getGUID() then\r\n                            highlightOn(obj, \"Brown\", playerColor)\r\n                        else\r\n                            createCancelButtonOnCard(obj)\r\n                        end\r\n                    else\r\n                        createSelectButtonOnCard(obj)\r\n                        obj.highlightOn(\"Orange\")\r\n                        highlightOff(obj)\r\n                    end\r\n                end\r\n            elseif (phase == 2 and info and info.type == 2) or    -- Make buttons on development or world cards if appropriate phase\r\n                (phase == 3 and info and info.type == 1) then\r\n                if phase == 3 and placeTwoPhase and not p.powersSnapshot[\"PLACE_TWO\"] or planningTakeover(playerColor) or takeoverPhase or (enforceRules and p.recordedCards[obj.getName()]) then\r\n                    goto skip\r\n                end\r\n\r\n                if not p.selectedCard then\r\n                    createSelectButtonOnCard(obj)\r\n                elseif p.selectedCard == obj.getGUID() then\r\n                    createCancelButtonOnCard(obj)\r\n                end\r\n\r\n                ::skip::\r\n            end\r\n\r\n            if phase == 1 and p.powersSnapshot[\"DISCARD_ANY\"] ~= nil and not obj.hasTag(\"Explore Highlight\") then\r\n                obj.addTag(\"Explore Highlight\")\r\n            end\r\n\r\n            -- Explore orange highlight\r\n            if phase == 1 and obj.hasTag(\"Explore Highlight\") then\r\n                obj.highlightOn(\"Orange\")\r\n            elseif currentPhaseIndex == 0 or phase and phase ~= 1 and obj.hasTag(\"Explore Highlight\") then\r\n                obj.highlightOff()\r\n                obj.removeTag(\"Explore Highlight\")\r\n            end\r\n\r\n            if obj.hasTag(\"Selected\") then\r\n                highlightOn(obj, \"rgb(0,1,0,1)\", playerColor)\r\n            elseif obj.hasTag(\"Marked\") then\r\n                highlightOn(obj, \"Red\", playerColor)\r\n            end\r\n        end\r\n    end\r\n\r\n    updateHandCount(playerColor)\r\nend\r\n\r\nfunction setVisibleTo(obj, player)\r\n    local arr = {}\r\n    for playerColor, data in pairs(playerData) do\r\n        if playerColor ~= player then\r\n            arr[#arr + 1] = playerColor\r\n        end\r\n    end\r\n    obj.setInvisibleTo(arr)\r\nend\r\n\r\n-- Make sure to call capturePowersSnapshot before calling this, otherwise may update with wrong modifiers\r\nfunction updateTableauState(player)\r\n    local p = playerData[player]\r\n    local i = playerData[player].index\r\n    local zone = getObjectFromGUID(tableauZone_GUID[i])\r\n    local selectedCard = getObjectFromGUID(p.selectedCard)\r\n    local selectedInfo = selectedCard and card_db[selectedCard.getName()] or nil\r\n    local currentPhase = tostring(getCurrentPhase())\r\n    local optColor = color(0.5,1,0.9)\r\n    local windfallCount = {[\"NOVELTY\"]=0,[\"RARE\"]=0,[\"GENE\"]=0,[\"ALIEN\"]=0,[\"TOTAL\"]=0}\r\n    local goodsCount = {[\"NOVELTY\"]=0,[\"RARE\"]=0,[\"GENE\"]=0,[\"ALIEN\"]=0,[\"TOTAL\"]=0}\r\n    local uniques = {}\r\n    local dontAutoPass = false\r\n    local selectedUniqueGoods = {}\r\n\r\n    p.recordedCards = {}\r\n    p.prestigeChips = {}\r\n    p.prestigeCount = 0\r\n\r\n    -- Change tableau image if needed\r\n    local tableau = getObjectFromGUID(tableau_GUID[p.index])\r\n    local tableauInfo = tableau.getCustomObject()\r\n    if p.powersSnapshot[\"GAME_END_14\"] and tableauInfo.image ~= playmat14 then\r\n        tableauInfo.image = playmat14\r\n        tableau.setCustomObject(tableauInfo)\r\n        tableau.reload()\r\n    elseif not p.powersSnapshot[\"GAME_END_14\"] and tableauInfo.image ~= playmat12 then\r\n        tableauInfo.image = playmat12\r\n        tableau.setCustomObject(tableauInfo)\r\n        tableau.reload()\r\n    end\r\n\r\n    if currentPhase == \"4\" or currentPhase == \"5\" then\r\n        p.canReady = true\r\n    end\r\n\r\n    for card in allCardsInTableau(player) do\r\n        card.clearButtons()\r\n        card.highlightOff()\r\n        highlightOff(card)\r\n    end\r\n\r\n    for guid, selected in pairs(p.selectedGoods) do\r\n        if selected then\r\n            local good = getObjectFromGUID(guid)\r\n            local parent = getObjectFromGUID(good.getDescription())\r\n\r\n            selectedUniqueGoods[card_db[parent.getName()].goods] = true\r\n        end\r\n    end\r\n\r\n    local miscPowerSnapshot = {}\r\n    local miscSelectedCardsTable = {}\r\n    local miscSelectedCount = 0\r\n    local miscActiveNode = nil\r\n    local miscActiveNodePowerKey = \"\"\r\n    local list = p.miscSelectedCards\r\n\r\n    while list and list.value do\r\n        local card = getObjectFromGUID(list.value)\r\n        if card then\r\n            miscSelectedCardsTable[list.value] = list\r\n\r\n            local info = card_db[card.getName()]\r\n            for name, power in pairs(info.activePowers[currentPhase]) do\r\n                miscPowerSnapshot[name] = power\r\n            end\r\n\r\n            if not list.next then\r\n                miscActiveNode = list\r\n                miscActiveNodePowerKey = concatPowerName(miscActiveNode.power)\r\n            end\r\n            miscSelectedCount = miscSelectedCount + 1\r\n        end\r\n\r\n        list = list.next\r\n    end\r\n\r\n    -- count certain cards, highlight goods, etc\r\n    for _, obj in pairs(zone.getObjects()) do\r\n        obj.clearButtons()\r\n\r\n        if obj.hasTag(\"Slot\") then\r\n            if currentPhase == \"2\" or (currentPhase == \"3\" and not takeoverPhase) then\r\n                setVisibleTo(obj, player)\r\n            else\r\n                obj.setInvisibleTo({})\r\n            end\r\n        end\r\n\r\n        if transitionNextPhase then\r\n            goto skip\r\n        end\r\n\r\n        if obj.type == 'Card' and not obj.is_face_down then\r\n            local parentData = card_db[obj.getName()]\r\n            if parentData.flags[\"WINDFALL\"] and not getGoods(obj) then\r\n                if parentData.goods == \"ANY\" then\r\n                    windfallCount[\"NOVELTY\"] = windfallCount[\"NOVELTY\"] + 1\r\n                    windfallCount[\"RARE\"] = windfallCount[\"RARE\"] + 1\r\n                    windfallCount[\"GENE\"] = windfallCount[\"GENE\"] + 1\r\n                    windfallCount[\"ALIEN\"] = windfallCount[\"ALIEN\"] + 1\r\n                else\r\n                    windfallCount[parentData.goods] = windfallCount[parentData.goods] + 1\r\n                end\r\n                windfallCount[\"TOTAL\"] = windfallCount[\"TOTAL\"] + 1\r\n            end\r\n        elseif obj.type == 'Card' and obj.is_face_down and obj.getDescription() ~= \"\" then  -- facedown goods on tableau\r\n            local parentCard = getObjectFromGUID(obj.getDescription())\r\n            local parentData = card_db[parentCard.getName()]\r\n\r\n            if #parentCard.getZones() <= 0 then\r\n                obj.setDescription(\"\")\r\n            elseif parentData.goods then\r\n                obj.highlightOn(goodsHighlightColor[parentData.goods])\r\n\r\n                if parentData.goods == \"ANY\" then\r\n                    goodsCount[\"NOVELTY\"] = goodsCount[\"NOVELTY\"] + 1\r\n                    goodsCount[\"RARE\"] = goodsCount[\"RARE\"] + 1\r\n                    goodsCount[\"GENE\"] = goodsCount[\"GENE\"] + 1\r\n                    goodsCount[\"ALIEN\"] = goodsCount[\"ALIEN\"] + 1\r\n                else\r\n                    goodsCount[parentData.goods] = goodsCount[parentData.goods] + 1\r\n                end\r\n                uniques[parentData.goods] = 1\r\n                goodsCount[\"TOTAL\"] = goodsCount[\"TOTAL\"] + 1\r\n\r\n                -- create buttons on cards based on action\r\n                if currentPhase == \"4\" and selectedCard then\r\n                    local ap = selectedInfo.activePowers[currentPhase]\r\n                    if p.selectedCardPower == \"TRADE_ACTION\" and not (parentData.passivePowers[\"4\"] and parentData.passivePowers[\"4\"][\"NO_TRADE\"]) then\r\n                        -- calculating cost to sell card\r\n                        local power = ap[p.selectedCardPower]\r\n                        local price = 0\r\n                        local bonus = not power.codes[\"TRADE_NO_BONUS\"]\r\n                        local basePrice = {NOVELTY = 2, RARE = 3, GENE = 4, ALIEN = 5}\r\n\r\n                        price = basePrice[parentData.goods] + (bonus and p.powersSnapshot[\"TRADE_\" .. parentData.goods] or 0)\r\n                        price = price + (bonus and p.powersSnapshot[\"TRADE_ANY\"] or 0)\r\n\r\n                        local parentPassive = parentData.passivePowers[currentPhase]\r\n                        if bonus and parentPassive and parentPassive[\"TRADE_THIS\"] then\r\n                            price = price + parentPassive[\"TRADE_THIS\"].strength\r\n                        end\r\n\r\n                        p.canReady = false\r\n                        createGoodsButton(parentCard, \"$➧\" .. price, goodsHighlightColor[parentData.goods])\r\n                        obj.memo = price\r\n                    elseif ap then -- using normal consume powers\r\n                        local makeButton = false\r\n                        local power = ap[p.selectedCardPower]\r\n\r\n                        if p.selectedCardPower == \"CONSUME_ANY\" or p.selectedCardPower == \"CONSUME_ALL\" or p.selectedCardPower == \"CONSUME_\" .. (parentData.goods or \"\") or\r\n                            (((p.selectedCardPower == \"CONSUME_3_DIFF\" or p.selectedCardPower == \"CONSUME_N_DIFF\") and not selectedUniqueGoods[parentData.goods]) or (p.selectedGoods and p.selectedGoods[obj.getGUID()])) then\r\n                            makeButton = true\r\n                        end\r\n\r\n                        if not makeButton and p.selectedCardPower and p.selectedCardPower:sub(1,7) == \"CONSUME\" then\r\n                            makeButton = true\r\n                        end\r\n\r\n                        if power.codes[\"CONSUME_THIS\"] and selectedCard ~= parentCard then\r\n                            makeButton = false\r\n                        end\r\n\r\n                        if makeButton then\r\n                            dontAutoPass = true\r\n                            p.canReady = false\r\n                            createGoodsButton(parentCard, p.selectedGoods[obj.getGUID()] and \"✔\" or \"\", goodsHighlightColor[parentData.goods])\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        elseif obj.hasTag(\"Prestige\") then\r\n            p.prestigeChips[obj.getGUID()] = obj.getGUID()\r\n            p.prestigeCount = p.prestigeCount + math.max(1, obj.getQuantity())\r\n        end\r\n\r\n        ::skip::\r\n    end\r\n\r\n    local uniqueCount = tableLength(uniques)\r\n    p.mustConsumeCount = 0\r\n\r\n    -- Auto cancel certain cards\r\n    if not p.incomingGood and p.usedPower and\r\n            (currentPhase == \"4\" and selectedCard and selectedCard.getName() == \"Consume ($)\" and goodsCount[\"TOTAL\"] <= 0\r\n            or currentPhase == \"5\" and selectedCard and selectedCard.getName() == \"Produce\" and windfallCount[\"TOTAL\"] <= 0) then\r\n        selectedCard = nil\r\n        selectedInfo = nil\r\n        p.selectedCard = nil\r\n        p.selectedCardPower = \"\"\r\n    end\r\n\r\n    local currentMiscSelected = nil\r\n\r\n    -- refresh state on all cards in tableau\r\n    for card in allCardsInTableau(player) do\r\n        local info = card_db[card.getName()]\r\n        p.recordedCards[card.getName()] = true\r\n\r\n        if selectedCard == card then\r\n            if card.hasTag(\"Action Card\") then\r\n                card.highlightOn(color(0,1,0))\r\n            else\r\n                highlightOn(card, \"rgb(0,1,0)\", player)\r\n            end\r\n        end\r\n\r\n        if not card.hasTag(\"Action Card\") then\r\n            local ap = info.activePowers[currentPhase]\r\n            local miscSelected = miscSelectedCardsTable[card.getGUID()]\r\n\r\n            if miscSelected then\r\n                highlightOn(card, \"rgb(0,1,0)\", player)\r\n            elseif placeTwoPhase and info.passivePowers[\"3\"] and info.passivePowers[\"3\"][\"PLACE_TWO\"] or\r\n                    takeoverPhase and p.takeoverSource == card.getGUID() then\r\n                card.highlightOn(\"Yellow\")\r\n            end\r\n\r\n            if currentPhase == \"1\" and p.beforeExplore then\r\n                local powers = info.passivePowers[\"1\"]\r\n                if powers and powers[\"DISCARD_PRESTIGE\"] then\r\n                    card.highlightOn(\"Yellow\")\r\n                    createConfirmButton(card)\r\n                end\r\n            elseif currentPhase == \"2\" and ap then\r\n                for name, power in pairs(ap) do\r\n                    if selectedCard then\r\n                        if miscSelectedCount <= 0 then\r\n                            dontAutoPass = true\r\n                            createUsePowerButton(card, power.index, info.activeCount[currentPhase], activePowers[currentPhase][name])\r\n                        else\r\n                            dontAutoPass = true\r\n                            createCancelButton(card)\r\n                        end\r\n                    end\r\n                end\r\n            elseif currentPhase == \"3\" then\r\n                if takeoverPhase then\r\n                    if p.beingTargeted and p.beingTargeted[card.getGUID()] then\r\n                        createStrengthLabel(player, card, true)\r\n                    elseif p.takeoverSource == card.getGUID() then\r\n                        createStrengthLabel(player, card, false)\r\n                    end\r\n                end\r\n\r\n                -- Create buttons for active powers\r\n                if ap and (selectedCard or miscActiveNode or p.beingTargeted) then\r\n                    for name, power in pairs(ap) do\r\n                        local powerName = \"\"\r\n                        local fullName = miscActiveNode and concatPowerName(miscActiveNode.power) or \"\"\r\n                        local used = p.cardsAlreadyUsed[card.getGUID()] and p.cardsAlreadyUsed[card.getGUID()][name .. power.index] >= power.strength\r\n                        local prestigeRemaining = p.consumedPrestige < p.prestigeCount\r\n\r\n                        if power.codes[\"AGAINST_REBEL\"] and selectedInfo and not selectedInfo.flags[\"REBEL\"] or \r\n                            miscActiveNode and miscActiveNode.value ~= card.getGUID() and requiresConfirm[fullName] then\r\n                            goto skip_power\r\n                        end\r\n\r\n                        if not used then\r\n                            if miscSelectedCount <= 0 then\r\n                                if name == \"DISCARD\" and power.codes[\"REDUCE_ZERO\"] and selectedInfo and selectedInfo.goods ~= \"ALIEN\" and not selectedInfo.flags[\"MILITARY\"] then\r\n                                    powerName = name\r\n                                elseif name == \"DISCARD\" and power.codes[\"EXTRA_MILITARY\"] and (takeoverPhase or selectedInfo.flags[\"MILITARY\"]) then\r\n                                    powerName = name\r\n                                elseif name == \"DISCARD_CONQUER_SETTLE\" and selectedInfo and not selectedInfo.flags[\"MILITARY\"] then\r\n                                    powerName = name\r\n                                elseif ap[\"PAY_MILITARY\"] and selectedInfo and selectedInfo.flags[\"MILITARY\"] and\r\n                                        (not next(power.codes) and selectedInfo.goods ~= \"ALIEN\" or \r\n                                        power.codes[\"ALIEN\"] and selectedInfo.goods == \"ALIEN\" or \r\n                                        power.codes[\"AGAINST_CHROMO\"] and selectedInfo.flags[\"CHROMO\"])  then\r\n                                    powerName = name\r\n                                elseif ap[\"MILITARY_HAND\"] and (takeoverPhase or selectedInfo.flags[\"MILITARY\"]) then\r\n                                    powerName = name\r\n                                elseif name == \"CONSUME_PRESTIGE\" and power.codes[\"EXTRA_MILITARY\"] and selectedInfo and selectedInfo.flags[\"MILITARY\"] and prestigeRemaining then\r\n                                    powerName = name\r\n                                end\r\n                            elseif not miscSelectedCardsTable[card.getGUID()] and not takeoverPhase then\r\n                                -- check for compatible chains\r\n                                local key = concatPowerName(power)\r\n                                if compatible[miscActiveNodePowerKey] and compatible[miscActiveNodePowerKey][key] then\r\n                                    powerName = power.name\r\n                                end\r\n                            end\r\n                        end\r\n\r\n                        if powerName ~= \"\" and not miscSelected and not used then\r\n                            dontAutoPass = true\r\n                            createUsePowerButton(card, power.index, info.activeCount[currentPhase], getTooltip(currentPhase, power))\r\n                        elseif miscSelected then\r\n                            dontAutoPass = true\r\n                            createCancelButton(card)\r\n\r\n                            if requiresConfirm[fullName] or takeoverPhase and requiresConfirm[name] then\r\n                                createConfirmButton(card)\r\n                            end\r\n                        end\r\n\r\n                        ::skip_power::\r\n                    end\r\n                elseif ap and not takeoverPhase then\r\n                    for name, power in pairs(ap) do\r\n                        -- make buttons for takeover powers\r\n                        if useTakeovers and isTakeoverPower(power) and not miscSelected then\r\n                            dontAutoPass = true\r\n                            createUsePowerButton(card, power.index, info.activeCount[currentPhase], getTooltip(currentPhase, power))\r\n                        end\r\n                    end\r\n                end\r\n            elseif currentPhase == \"4\" and ap then\r\n                local baseAmount = {}\r\n                local goodslimit = 1\r\n                local enoughGoods = false\r\n\r\n                for i=1, info.activeCount[currentPhase] do\r\n                    baseAmount[#baseAmount + 1] = 1\r\n                end\r\n\r\n                if #baseAmount > 0 then\r\n                    for name, power in pairs(info.activePowers[currentPhase]) do\r\n                        if name == \"CONSUME_ANY\" or name == \"CONSUME_ALL\" or name == \"CONSUME_3_DIFF\" or name == \"CONSUME_N_DIFF\" or name == \"TRADE_ACTION\" then\r\n                            goodslimit = goodsCount[\"TOTAL\"]\r\n                        elseif name:sub(1,7) == \"CONSUME\" then\r\n                            goodslimit = goodsCount[name:sub(9, name:len())]\r\n                        end\r\n\r\n                        if power.name ~= \"DISCARD_HAND\" and power.codes[\"CONSUME_TWO\"] then\r\n                            baseAmount[power.index] = 2\r\n                        elseif name == \"CONSUME_ALL\" then\r\n                            baseAmount[power.index] = math.max(1, goodsCount[\"TOTAL\"])\r\n                        elseif name == \"CONSUME_3_DIFF\" then\r\n                            baseAmount[power.index] = uniqueCount < 3 and 100 or 3\r\n                        elseif name == \"CONSUME_N_DIFF\" then\r\n                            baseAmount[power.index] = math.max(1, uniqueCount)\r\n                        elseif not requiresGoods[name] then\r\n                            baseAmount[power.index] = 0\r\n                        end\r\n\r\n                        goodslimit = math.min(math.max(1, power.times * baseAmount[power.index]), goodslimit)\r\n                    end\r\n                end\r\n\r\n                if not selectedCard then\r\n                    for name, power in pairs(ap) do\r\n                        local used = p.cardsAlreadyUsed[card.getGUID()]\r\n                        if (not used or not used[name .. power.index]) and baseAmount[power.index] <= goodslimit then\r\n                            dontAutoPass = true\r\n                            if not optionalPowers[name] then p.canReady = false end\r\n                            local prefix = optionalPowers[name] and \"(Optional) \" or \"\"\r\n                            createUsePowerButton(card, power.index, info.activeCount[currentPhase], prefix .. activePowers[currentPhase][name], optionalPowers[name] and optColor or \"White\")\r\n                        end\r\n                    end\r\n                elseif selectedCard == card then\r\n                    p.canReady = false\r\n                    dontAutoPass = true\r\n                    createCancelButton(card)\r\n                    local powerIndex = info.activePowers[currentPhase][p.selectedCardPower].index\r\n\r\n                    if requiresConfirm[p.selectedCardPower] then\r\n                        createConfirmButton(selectedCard)\r\n                    end\r\n\r\n                    p.mustConsumeCount = math.max(baseAmount[powerIndex], goodslimit)\r\n                end\r\n            elseif currentPhase == \"5\" then\r\n                if not selectedCard and ap then\r\n                    for name, power in pairs(ap) do\r\n                        local windfallStr = name\r\n                        local windfallPrefix = name:sub(1,8) == \"WINDFALL\"\r\n                        local targetGood = windfallPrefix and name:sub(10, name:len()) or \"\"\r\n\r\n                        -- second check because windfall power might be a code\r\n                        if not windfallPrefix then\r\n                            for code, v in pairs(power.codes) do\r\n                                if code:sub(1,8) == \"WINDFALL\" then\r\n                                    windfallPrefix = true\r\n                                    targetGood = code:sub(10, code:len())\r\n                                    break\r\n                                end\r\n                            end\r\n                        end\r\n                        \r\n                        local makeButton = true\r\n                        local used = p.cardsAlreadyUsed[card.getGUID()]\r\n                        local windfallCountTarget = windfallCount[targetGood]\r\n                        local open = getGoods(card)\r\n                        local prefix = optionalPowers[name] and \"(Optional) \" or \"\"\r\n\r\n                        if power.codes[\"NOT_THIS\"] and not open then\r\n                            windfallCountTarget = windfallCountTarget - 1\r\n                        end\r\n\r\n                        if used and used[name .. power.index] or\r\n                            power.codes[\"PRODUCE\"] and open or \r\n                            windfallPrefix and targetGood == \"ANY\" and windfallCount[\"TOTAL\"] <= 0 or\r\n                            windfallPrefix and windfallCountTarget and windfallCountTarget <= 0 then\r\n                            goto skip\r\n                        end\r\n\r\n                        if not optionalPowers[name] then p.canReady = false end\r\n\r\n                        dontAutoPass = true\r\n\r\n                        createUsePowerButton(card, power.index, info.activeCount[currentPhase], prefix .. activePowers[currentPhase][name], optionalPowers[name] and optColor or \"White\")\r\n\r\n                        ::skip::\r\n                    end\r\n                elseif selectedCard then\r\n                    -- Check to create 'place goods on windfall' button\r\n                    local power = selectedInfo.activePowers[currentPhase][p.selectedCardPower]\r\n                    local open = not getGoods(card)\r\n                    local paidCost = p.paidCost[selectedCard.getGUID()]\r\n                    paidCost = paidCost and paidCost[power.name .. power.index]\r\n\r\n                    local makeButton = false\r\n                    if (info.flags[\"WINDFALL\"] and (power.codes[\"WINDFALL_ANY\"] and info.goods or power.codes[\"WINDFALL_\" .. (info.goods or \"\")])) and paidCost and open then\r\n                        makeButton = true\r\n                    end\r\n\r\n                    if info.goods and info.flags[\"WINDFALL\"] and open and p.selectedCardPower:sub(1,8) == \"WINDFALL\" and card ~= selectedCard or makeButton then\r\n                        local targetGood = p.selectedCardPower:sub(10, p.selectedCardPower:len())\r\n                        if targetGood == \"ANY\" or targetGood == info.goods or power.codes[\"WINDFALL_ANY\"] or power.codes[\"WINDFALL_\" .. info.goods] then\r\n                            dontAutoPass = true\r\n                            p.canReady = false\r\n                            createGoodsButton(card, \"▼\", color(1, 1, 1, 0.9))\r\n                        end\r\n                    end\r\n\r\n                    if selectedCard == card and not paidCost then\r\n                        p.canReady = false\r\n                        dontAutoPass = true\r\n                        createCancelButton(selectedCard)\r\n\r\n                        if requiresConfirm[p.selectedCardPower] then\r\n                            createConfirmButton(selectedCard)\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    -- Force the player ready when they have nothing left to do\r\n    if (p.usedPower and not p.incomingGood and (currentPhase == \"4\" or currentPhase == \"5\") and not p.forcedReady and dontAutoPass == false and not selectedCard) or\r\n        (not p.incomingGood and not p.forcedReady and dontAutoPass == false and currentPhase == \"3\" and takeoverPhase and not p.beingTargeted)then\r\n        p.forcedReady = true\r\n        if Player[player].seated then\r\n            updateReadyButtons({player, true})\r\n        end\r\n    end\r\n\r\n    if not p.incomingGood then\r\n        p.usedPower = false\r\n    end\r\nend\r\n\r\nfunction markUsed(player, card, power, n)\r\n    local p = playerData[player]\r\n\r\n    if not p.cardsAlreadyUsed[card.getGUID()] then p.cardsAlreadyUsed[card.getGUID()] = {} end\r\n\r\n    p.selectedGoods = {}\r\n    p.cardsAlreadyUsed[card.getGUID()][power.name .. power.index] = n or 1\r\n    p.selectedCard = nil\r\n    p.selectedCardPower = \"\"\r\n    p.miscSelectedCards = {}\r\n    p.usedPower = true\r\n\r\n    queueUpdate(player, true)\r\nend\r\n\r\nfunction markUsedMisc(player, card, power, n)\r\n    local p = playerData[player]\r\n\r\n    if not p.cardsAlreadyUsed[card.getGUID()] then p.cardsAlreadyUsed[card.getGUID()] = {} end\r\n\r\n    p.selectedGoods = {}\r\n    p.cardsAlreadyUsed[card.getGUID()][power.name .. power.index] = n or 1\r\n    p.miscSelectedCards = deleteLinkedListNode(p.miscSelectedCards, card.getGUID())\r\n\r\n    queueUpdate(player, true)\r\nend\r\n\r\nfunction getActivePower(name, phase, powerIndex)\r\n    local info = card_db[name]\r\n    if info and info.activePowers[phase] then\r\n        for _, power in pairs(info.activePowers[phase]) do\r\n            if power.index == powerIndex then\r\n                return power\r\n            end\r\n        end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction usePowerClick1(obj, player, button) usePowerClick(obj, player, button, 1) end\r\nfunction usePowerClick2(obj, player, button) usePowerClick(obj, player, button, 2) end\r\nfunction usePowerClick3(obj, player, button) usePowerClick(obj, player, button, 3) end\r\n\r\nfunction usePowerClick(obj, player, rightClick, powerIndex)\r\n    if rightClick then return end\r\n    if getOwner(obj) ~= player then\r\n        broadcastToColor(\"You cannot use cards from another player's tableau.\", player, \"White\")\r\n        return\r\n    end\r\n\r\n    if obj.hasTag(\"Slot\") then obj = getCard(obj) end\r\n\r\n    local p = playerData[player]\r\n    local currentPhase = tostring(getCurrentPhase())\r\n\r\n    p.handCountSnapshot = countCardsInHand(player, true)\r\n\r\n    if currentPhase == \"4\" or currentPhase == \"5\" then\r\n        p.selectedCard = obj.getGUID()\r\n        local info = card_db[obj.getName()]\r\n        for name, power in pairs(info.activePowers[currentPhase]) do\r\n            if power.index == powerIndex then\r\n                p.selectedCardPower = name\r\n\r\n                -- Use power instantly\r\n                if p.selectedCardPower == \"DRAW\" then\r\n                    dealTo(power.strength, player)\r\n                    markUsed(player, obj, power)\r\n                    return\r\n                elseif p.selectedCardPower == \"VP\" then\r\n                    local vpMultiplier = p.powersSnapshot[\"DOUBLE_VP\"] and 2 or 1\r\n                    getVpChips(player, power.strength * vpMultiplier)\r\n                    markUsed(player, obj, power)\r\n                    return\r\n                end\r\n                break\r\n            end\r\n        end\r\n    end\r\n\r\n    -- Special produce powers\r\n    if currentPhase == \"5\" then\r\n        local usedPower = false\r\n        local power = card_db[obj.getName()].activePowers[currentPhase][p.selectedCardPower]\r\n\r\n        if power.name:sub(1,9) == \"DRAW_EACH\" then\r\n            local targetGood = p.selectedCardPower:sub(11, power.name:len())\r\n            dealTo(p.produceCount[targetGood] * power.strength, player)\r\n            usedPower = true\r\n        elseif power.name == \"DRAW_WORLD_GENE\" then\r\n            local n = countTrait(player, \"goods\", \"GENE\")\r\n            dealTo(n * power.strength, player)\r\n            usedPower = true\r\n        elseif power.name == \"DRAW_DIFFERENT\" then\r\n            local n = 0\r\n            for goods, count in pairs(p.produceCount) do\r\n                if goods ~= \"TOTAL\" and count > 0 then\r\n                    n = n + 1\r\n                end\r\n            end\r\n            dealTo(n * power.strength, player)\r\n            usedPower = true\r\n        elseif power.name == \"DRAW_MILITARY\" then\r\n            local n = countTrait(player, \"flags\", \"MILITARY\")\r\n            dealTo(n * power.strength, player)\r\n            usedPower = true\r\n        elseif power.name == \"DRAW_CHROMO\" then\r\n            local n = countTrait(player, \"flags\", \"CHROMO\")\r\n            dealTo(n * power.strength, player)\r\n            usedPower = true\r\n        elseif power.name == \"DRAW_REBEL\" then\r\n            local n = countTrait(player, \"flags\", \"REBEL\", 1)\r\n            dealTo(n * power.strength, player)\r\n            usedPower = true\r\n        end\r\n\r\n        if usedPower then\r\n            markUsed(player, obj, power)\r\n            queueUpdate(player, true)\r\n            return\r\n        end\r\n    end\r\n\r\n    local node = p.miscSelectedCards\r\n\r\n    while node and node.next do\r\n         node = node.next\r\n    end\r\n\r\n    if not p.miscSelectedCards then p.miscSelectedCards = {} end\r\n\r\n    local power = getActivePower(obj.getName(), currentPhase, powerIndex)\r\n\r\n    if not p.miscSelectedCards.value then\r\n         p.miscSelectedCards = {value = obj.getGUID(), power=power, next = nil}\r\n    else\r\n         node.next = {value = obj.getGUID(), power=power, next = nil}\r\n    end\r\n\r\n    local takeoverName = isTakeoverPower(power)\r\n    if useTakeovers and currentPhase == \"3\" then\r\n        refreshTakeoverMenu(player)\r\n        if takeoverName ~= nil then\r\n            p.takeoverSource = obj.getGUID()\r\n            p.takeoverPower = power\r\n            p.takeoverTarget = nil\r\n            Wait.frames(function() Global.UI.setAttribute(\"takeoverMenu_\" .. player, \"active\", true) end, 1)\r\n        end\r\n\r\n        if power.name == \"DISCARD\" and power.codes[\"EXTRA_MILITARY\"] then\r\n            p.powersSnapshot[\"BONUS_MILITARY\"] = p.powersSnapshot[\"BONUS_MILITARY\"] + power.strength\r\n        end\r\n        --Wait.frames(function() refreshTakeoverMenu(player) end, 1)\r\n    end\r\n\r\n    queueUpdate(player, true)\r\nend\r\n\r\nfunction cancelPowerClick(obj, player, rightClick)\r\n    if rightClick then return end\r\n    if getOwner(obj) ~= player then\r\n        broadcastToColor(\"You cannot use cards from another player's tableau.\", player, \"White\")\r\n        return\r\n    end\r\n\r\n    if obj.hasTag(\"Slot\") then obj = getCard(obj) end\r\n\r\n    local p = playerData[player]\r\n\r\n    p.handCountSnapshot = countCardsInHand(player, true)\r\n    p.miscSelectedCards = deleteLinkedListNode(p.miscSelectedCards, obj.getGUID())\r\n\r\n    if getCurrentPhase() ~= 3 and getCurrentPhase() ~= 2 then\r\n        p.selectedCard = nil\r\n        p.selectedCardPower = \"\"\r\n        p.selectedGoods = {}\r\n    elseif useTakeovers and getCurrentPhase() == 3 then\r\n        if not p.miscSelectedCards.value then\r\n            Global.UI.setAttribute(\"takeoverMenu_\" .. player, \"active\", false)\r\n            p.takeoverSource = nil\r\n            p.takeoverTarget = nil\r\n        end\r\n\r\n        -- temporarily set this value for now to refresh takeover menu\r\n        capturePowersSnapshot(player, \"3\")\r\n        Wait.frames(function() refreshTakeoverMenu(player) end, 1)\r\n    end\r\n\r\n    for _, obj in pairs(Player[player].getHandObjects(1)) do\r\n        if obj.is_face_down then\r\n            obj.flip()\r\n        end\r\n     end\r\n\r\n    queueUpdate(player, true)\r\nend\r\n\r\nfunction confirmPowerClick(obj, player, rightClick)\r\n    if rightClick then return end\r\n    if getOwner(obj) ~= player then\r\n        broadcastToColor(\"You cannot use cards from another player's tableau.\", player, \"White\")\r\n        return\r\n    end\r\n\r\n    if obj.hasTag(\"Slot\") then obj = getCard(obj) end\r\n\r\n    local p = playerData[player]\r\n    local currentPhase = tostring(getCurrentPhase())\r\n    local power = card_db[obj.getName()].activePowers[currentPhase][p.selectedCardPower]\r\n\r\n    p.handCountSnapshot = countCardsInHand(player)\r\n\r\n    if currentPhase == \"1\" and p.beforeExplore then\r\n        -- Discarding cards for prestige from hand before explore\r\n        local marked = #discardMarkedCards(player)\r\n        getPrestigeChips(player, marked)\r\n        p.beforeExplore = false\r\n        Wait.frames(function()\r\n            doExploreDraw(player)\r\n            queueUpdate(player, true)\r\n        end, 1)\r\n        return\r\n    elseif currentPhase == \"2\" or currentPhase == \"3\" then\r\n        local node = getLinkedListNode(p.miscSelectedCards, obj.getGUID())\r\n        local n = 0\r\n        power = node.power\r\n        if power.name == \"MILITARY_HAND\" then\r\n            local marked = discardMarkedCards(player, not takeoverPhase)\r\n            local usedAmount = 0\r\n            if p.cardsAlreadyUsed[obj.getGUID()] and p.cardsAlreadyUsed[obj.getGUID()][power.name .. power.index] then\r\n                usedAmount = p.cardsAlreadyUsed[obj.getGUID()][power.name .. power.index]\r\n            end\r\n            n = #marked\r\n            p.tempMilitary = p.tempMilitary + math.min(n, power.strength - usedAmount)\r\n            refreshTakeoverMenu(player)\r\n        elseif power.name == \"DISCARD\" and power.codes[\"EXTRA_MILITARY\"] then\r\n            n = 1\r\n            p.tempMilitary = p.tempMilitary + power.strength\r\n            discardCard(obj)\r\n        elseif power.name == \"CONSUME_PRESTIGE\" and power.codes[\"EXTRA_MILITARY\"] then\r\n            n = power.strength\r\n            p.tempMilitary = p.tempMilitary + power.strength\r\n            p.consumedPrestige = p.consumedPrestige + 1\r\n        end\r\n\r\n        if n == 0 then return end\r\n\r\n        markUsedMisc(player, obj, power, n)\r\n        return\r\n    elseif currentPhase == \"5\" then\r\n        if p.selectedCardPower == \"DISCARD_HAND\" then\r\n            local n = #discardMarkedCards(player)\r\n            if enforceRules and n <= 0 then\r\n                broadcastToColor(\"Please discard the required number of cards.\", player, \"White\")\r\n                return\r\n            end\r\n\r\n            local windfallCode = false\r\n            for code, v in pairs(power.codes) do\r\n                if code:sub(1,8) == \"WINDFALL\" then\r\n                    windfallCode = true\r\n                    break\r\n                end\r\n            end\r\n\r\n            if windfallCode then\r\n                if not p.paidCost[obj.getGUID()] then p.paidCost[obj.getGUID()] = {} end\r\n                p.paidCost[obj.getGUID()][power.name .. power.index] = true\r\n                queueUpdate(player, true)\r\n                return\r\n            elseif power.codes[\"PRODUCE\"] then\r\n                tryProduceAt(player, obj)\r\n            end\r\n        end\r\n    elseif p.selectedCardPower == \"DISCARD_HAND\" then\r\n        if enforceRules and not p.canConfirm then\r\n            broadcastToColor(\"Please discard the required number of cards.\", player, \"White\")\r\n            return\r\n        end\r\n        local times = math.min(power.times, #discardMarkedCards(player))\r\n        if times == 0 then return end\r\n        if power.codes[\"GET_VP\"] then\r\n            getVpChips(player, times)\r\n        end\r\n        if power.codes[\"GET_CARD\"] then\r\n            dealTo(power.strength, player)\r\n        end\r\n        if power.codes[\"GET_PRESTIGE\"] then\r\n            getPrestigeChips(player, times)\r\n        end\r\n    end\r\n\r\n    markUsed(player, obj, power)\r\nend\r\n\r\nfunction goodSelectClick(slot, player, rightClick)\r\n    if rightClick then return end\r\n    if getOwner(slot) ~= player then\r\n        broadcastToColor(\"You cannot use cards from another player's tableau.\", player, \"White\")\r\n        return\r\n    end\r\n\r\n    local parentCard = getCard(slot)\r\n\r\n    local p = playerData[player]\r\n    local selectedCard = getObjectFromGUID(p.selectedCard)\r\n    local selectedInfo = card_db[selectedCard.getName()]\r\n    local currentPhase = tostring(getCurrentPhase())\r\n    local powers = selectedInfo.activePowers[currentPhase]\r\n    local power = powers[p.selectedCardPower]\r\n    local powerUsed = false\r\n\r\n    if currentPhase == \"4\" then    -- consume the goods card\r\n        local good = getGoods(parentCard)\r\n\r\n        if good == nil then\r\n            broadcastToColor(\"Invalid goods selected.\", player, \"Red\")\r\n        end\r\n\r\n        -- Toggle selection of goods\r\n        p.selectedGoods[good.getGUID()] = not p.selectedGoods[good.getGUID()]\r\n\r\n        local selectedGoodsCount = 0\r\n        for guid, selected in pairs(p.selectedGoods) do\r\n            if selected then selectedGoodsCount = selectedGoodsCount + 1 end\r\n        end\r\n\r\n        if selectedGoodsCount >= p.mustConsumeCount then\r\n            local vpMultiplier = p.powersSnapshot[\"DOUBLE_VP\"] and 2 or 1\r\n            local times = 1\r\n\r\n            if p.selectedCardPower == \"TRADE_ACTION\" then\r\n                times = 0\r\n                local price = good.memo\r\n                dealTo(price, player)\r\n            elseif p.selectedCardPower == \"CONSUME_ALL\" then\r\n                times = selectedGoodsCount - 1\r\n            elseif selectedGoodsCount <= power.times or p.selectedCardPower == \"CONSUME_N_DIFF\" then\r\n                times = selectedGoodsCount\r\n            end\r\n\r\n            for i=1, times do\r\n                if power.codes[\"GET_VP\"] then getVpChips(player, power.strength * vpMultiplier) end\r\n                if power.codes[\"GET_CARD\"] then dealTo(power.strength, player) end\r\n                if power.codes[\"GET_2_CARD\"] then dealTo(power.strength * 2, player) end\r\n                if power.codes[\"GET_3_CARD\"] then dealTo(power.strength * 3, player) end\r\n                if power.codes[\"GET_PRESTIGE\"] then getPrestigeChips(player, power.strength) end\r\n            end\r\n\r\n            for guid, selected in pairs(p.selectedGoods) do\r\n                discardCard(getObjectFromGUID(guid))\r\n            end\r\n\r\n            powerUsed = true\r\n        end\r\n    elseif currentPhase == \"5\" then     -- produce the goods card\r\n        local windfallCode = p.selectedCardPower:sub(1,8) == \"WINDFALL\"\r\n        if not windfallCode then\r\n            for code, v in pairs(power.codes) do\r\n                if code:sub(1,8) == \"WINDFALL\" then\r\n                    windfallCode = true\r\n                    break\r\n                end\r\n            end\r\n        end\r\n\r\n        if windfallCode then\r\n            tryProduceAt(player, parentCard)\r\n        end\r\n\r\n        powerUsed = true\r\n    end\r\n\r\n    if powerUsed then\r\n        markUsed(player, selectedCard, power)\r\n    end\r\n\r\n    queueUpdate(player, true)\r\nend\r\n\r\nfunction cardSelectClick(object, player, rightClick)\r\n    if rightClick then return end\r\n\r\n    if object.hasTag(\"Slot\") then object = getCard(object) end\r\n\r\n    local p = playerData[player]\r\n\r\n    if enforceRules and p.recordedCards[object.getName()] then\r\n        broadcastToColor(\"You cannot play a card you already have in your tableau.\", player, \"White\")\r\n        return\r\n    end\r\n\r\n    p.selectedCard = object.getGUID()\r\n    p.handCountSnapshot = countCardsInHand(player, true)\r\n    p.selectedGoods = {}\r\n    object.addTag(\"Selected\")\r\n    updateReadyButtons({player, false})\r\n\r\n    queueUpdate(player, true)\r\nend\r\n\r\nfunction cardCancelClick(object, player, rightClick)\r\n     if rightClick then return end\r\n\r\n     if object.hasTag(\"Slot\") then\r\n          object = getCard(object)\r\n     end\r\n\r\n     local p = playerData[player]\r\n\r\n     p.selectedCard = nil\r\n     p.selectedCardPower = \"\"\r\n     p.miscSelectedCards = {}\r\n\r\n     object.removeTag(\"Selected\")\r\n     highlightOff(object)\r\n\r\n     for _, obj in pairs(Player[player].getHandObjects(1)) do\r\n        if obj.is_face_down then\r\n            obj.flip()\r\n        end\r\n     end\r\n\r\n     updateReadyButtons({player, false})\r\n\r\n     queueUpdate(player, true)\r\nend\r\n\r\nfunction setHelpText(player, text)\r\n    local i = playerData[player].index\r\n    local obj = getObjectFromGUID(helpDisplay_GUID[i])\r\n    obj.UI.setValue(\"label\", text)\r\nend\r\n\r\nfunction updateHelpText(playerColor)\r\n    if not playerColor then return end\r\n\r\n    local p = playerData[playerColor]\r\n    local i = p.index\r\n    local powers = p.powersSnapshot\r\n    local handCount = p.handCountSnapshot\r\n    local cardsInHand = countCardsInHand(playerColor, currentPhaseIndex == #selectedPhases)\r\n    local discarded = handCount - cardsInHand\r\n    local currentPhase = getCurrentPhase()\r\n\r\n    if currentPhase ~= 4 and currentPhase ~= 5 then\r\n        p.canReady = false\r\n    end\r\n\r\n    p.canFlip = false\r\n    p.canConfirm = true\r\n\r\n    if transitionNextPhase then\r\n        setHelpText(playerColor, \"\")\r\n        return\r\n    -- opening hand\r\n    elseif gameStarted and currentPhaseIndex == -1 then\r\n        if p.selectedCard then\r\n            p.canFlip = true\r\n            local discardTarget = powers[\"DISCARD\"]\r\n            if discarded >= discardTarget then p.canReady = true end\r\n            setHelpText(playerColor, \"Determine starting hand. (discard \" .. discarded .. \"/\" .. discardTarget .. \")\")\r\n        else\r\n            setHelpText(playerColor, \"▼ Select your start world.\")\r\n        end\r\n    -- end of round\r\n    elseif currentPhaseIndex > #selectedPhases then\r\n        p.canFlip = true\r\n    -- start of round\r\n    elseif currentPhaseIndex == 0 then\r\n        setHelpText(playerColor, \"▲ Select an action.\")\r\n    -- explore\r\n    elseif currentPhase == 1 then\r\n        if p.beforeExplore then\r\n            local discardTarget = p.powersSnapshot[\"DISCARD_PRESTIGE\"] or 1\r\n            if discarded < discardTarget then p.canFlip = true end\r\n            setHelpText(playerColor, \"▼ Explore: may discard for prestige. (\" .. discarded .. \"/\" .. discardTarget .. \")\")\r\n        else\r\n            p.canFlip = true\r\n            local discardTarget = math.max(0, powers[\"DRAW\"] - powers[\"KEEP\"])\r\n            if discarded >= discardTarget then p.canReady = true end\r\n            setHelpText(playerColor, \"Explore: draw \" .. powers[\"DRAW\"] .. \", keep \" .. powers[\"KEEP\"] .. \". (discard \" .. discarded .. \"/\" .. discardTarget .. \")\")\r\n        end\r\n    elseif currentPhase == 2 then\r\n        if p.selectedCard then\r\n            local card = getObjectFromGUID(p.selectedCard)\r\n            local info = card_db[card.getName()]\r\n            local discardTarget = math.max(0, info.cost - (powers[\"REDUCE\"] or 0))\r\n            local node = p.miscSelectedCards\r\n\r\n            while node and node.value do\r\n                local miscCard = getObjectFromGUID(node.value)\r\n                local miscPowers = card_db[miscCard.getName()].activePowers[\"2\"]\r\n\r\n                if miscPowers then\r\n                    if miscPowers[\"DISCARD_REDUCE\"] then\r\n                        discardTarget = math.max(0, discardTarget - 3)\r\n                    end\r\n                end\r\n\r\n                node = node.next\r\n            end\r\n\r\n            if discarded >= discardTarget then p.canReady = true end\r\n            p.canFlip = true\r\n            setHelpText(playerColor, \"Develop: cost \" .. discardTarget .. \". (discard \" .. discarded .. \"/\" .. discardTarget .. \")\")\r\n        else\r\n            setHelpText(playerColor, \"▼ Develop: may play a development.\")\r\n        end\r\n    elseif currentPhase == 3 then\r\n        local planningTakeover = planningTakeover(playerColor)\r\n\r\n        if p.selectedCard or p.beingTargeted or planningTakeover then\r\n            local card = getObjectFromGUID(p.selectedCard)\r\n            local info = card and card_db[card.getName()] or nil\r\n\r\n            -- Check for special settle power modifiers\r\n            local reduceZero = false\r\n            local reduceZeroName = \"\"\r\n            local doMilitary = info and info.flags[\"MILITARY\"]\r\n            local payMilitary = false\r\n            local payMilitaryStr = 0\r\n            local militaryDiscount = 0\r\n            local node = p.miscSelectedCards\r\n\r\n            while node and node.value do\r\n                local miscCard = getObjectFromGUID(node.value)\r\n                local miscPowers = card_db[miscCard.getName()].activePowers[\"3\"]\r\n                if miscPowers then\r\n                    if miscPowers[\"DISCARD\"] and miscPowers[\"DISCARD\"].codes[\"REDUCE_ZERO\"] then\r\n                        reduceZero = true\r\n                        reduceZeroName = miscCard.getName()\r\n                    elseif miscPowers[\"PAY_MILITARY\"] then\r\n                        payMilitary = true\r\n                        payMilitaryStr = miscPowers[\"PAY_MILITARY\"].strength\r\n                    elseif miscPowers[\"MILITARY_HAND\"] then\r\n                        local discardCount = p.handCountSnapshot - countCardsInHand(playerColor, false)\r\n                        local usedAmount = 0\r\n                        if p.cardsAlreadyUsed[node.value] and p.cardsAlreadyUsed[node.value][node.power.name .. node.power.index] then\r\n                            usedAmount = p.cardsAlreadyUsed[node.value][node.power.name .. node.power.index]\r\n                        end\r\n                        if discarded + usedAmount < miscPowers[\"MILITARY_HAND\"].strength then\r\n                            p.canFlip = true\r\n                        end\r\n\r\n                        setHelpText(playerColor, \"▼ Settle: discard for bonus military. (\" .. discarded + usedAmount .. \"/\" .. miscPowers[\"MILITARY_HAND\"].strength .. \")\")\r\n                        return\r\n                    elseif miscPowers[\"DISCARD_CONQUER_SETTLE\"] then\r\n                        doMilitary = true\r\n                        militaryDiscount = miscPowers[\"DISCARD_CONQUER_SETTLE\"].strength\r\n                    end\r\n                end\r\n                node = node.next\r\n            end\r\n\r\n            if planningTakeover then\r\n                setHelpText(playerColor, \"Settle: takeover. (Military \" .. p.powersSnapshot[\"EXTRA_MILITARY\"] + p.powersSnapshot[\"BONUS_MILITARY\"] + p.tempMilitary .. \")\")\r\n                return\r\n            end\r\n\r\n            if takeoverPhase then\r\n                if p.beingTargeted then\r\n                    setHelpText(playerColor, \"Settle: defend against takeover.\")\r\n                else\r\n                    setHelpText(playerColor, \"Settle: waiting for other players.\")\r\n                end\r\n            elseif doMilitary and not payMilitary then\r\n                local def = info.cost - militaryDiscount\r\n                local specialtyBonus = 0\r\n                if info.goods and p.powersSnapshot[info.goods .. \"_BONUS_MILITARY\"] then\r\n                    specialtyBonus = p.powersSnapshot[info.goods .. \"_BONUS_MILITARY\"]\r\n                elseif info.flags[\"REBEL\"] and p.powersSnapshot[\"AGAINST_REBEL_BONUS_MILITARY\"] then\r\n                    specialtyBonus = p.powersSnapshot[\"AGAINST_REBEL_BONUS_MILITARY\"]\r\n                end\r\n                local totalMil = p.powersSnapshot[\"EXTRA_MILITARY\"] + p.powersSnapshot[\"BONUS_MILITARY\"] + p.tempMilitary + specialtyBonus\r\n                if totalMil >= def then p.canReady = true end\r\n                setHelpText(playerColor, \"Settle: \" .. def .. \" defense. (Military \" .. totalMil .. \"/\" .. def .. \")\")\r\n            else\r\n                if reduceZero then\r\n                    p.canReady = true\r\n                    setHelpText(playerColor, \"Settle: paid w/ \" .. reduceZeroName .. \".\")\r\n                else\r\n                    local payDiscount = 0\r\n                    if payMilitary then\r\n                        payDiscount = payMilitaryStr + (p.powersSnapshot[\"PAY_DISCOUNT\"] or 0)\r\n                    end\r\n                    local discardTarget = math.max(0, info.cost - (powers[\"REDUCE\"] or 0) - payDiscount)\r\n                    if discarded >= discardTarget then p.canReady = true end\r\n                    p.canFlip = true\r\n                    setHelpText(playerColor, \"Settle: cost \" .. discardTarget .. \". (discard \" .. discarded .. \"/\" .. discardTarget .. \")\")\r\n                end\r\n            end\r\n        else\r\n            if placeTwoPhase then\r\n                if not p.powersSnapshot[\"PLACE_TWO\"] then\r\n                    setHelpText(playerColor, \"Settle: waiting for other players.\")\r\n                else\r\n                    setHelpText(playerColor, \"▼ Settle: may play a 2nd world.\")\r\n                end\r\n            else\r\n                setHelpText(playerColor, \"▼ Settle: may play a world.\")\r\n            end\r\n        end\r\n    elseif currentPhase == 4 then\r\n        if p.selectedCard then\r\n            local card = getObjectFromGUID(p.selectedCard)\r\n            local info = card_db[card.getName()]\r\n\r\n            if p.selectedCardPower == \"TRADE_ACTION\" then\r\n                setHelpText(playerColor, \"▲ Consume: select a good to sell.\")\r\n            elseif p.selectedCardPower == \"DISCARD_HAND\" then\r\n                local reward = \"\"\r\n                local power = info.activePowers[\"4\"][p.selectedCardPower]\r\n                if power.codes[\"GET_VP\"] then reward = \"get VP\"\r\n                elseif power.codes[\"GET_CARD\"] then reward = \"draw card\"\r\n                elseif power.codes[\"GET_PRESTIGE\"] then reward = \"get prestige\"\r\n                end\r\n\r\n                local discardCount = p.handCountSnapshot - countCardsInHand(playerColor, false)\r\n                local times = power.times\r\n                if power.codes[\"CONSUME_TWO\"] then\r\n                    times = 2\r\n                end\r\n                local appendStr = \". (\" .. discardCount .. \"/\" .. times .. \")\"\r\n\r\n                if discardCount < times then\r\n                    p.canFlip = true\r\n                    if power.codes[\"CONSUME_TWO\"] then\r\n                        p.canConfirm = false\r\n                    end\r\n                end\r\n\r\n                setHelpText(playerColor, \"▼ Consume: discard to \" .. reward .. appendStr)\r\n            else\r\n                setHelpText(playerColor, \"▲ Consume: select goods to consume.\")\r\n            end\r\n        else\r\n            setHelpText(playerColor, \"▲ Consume: use powers.\")\r\n        end\r\n    elseif currentPhase == 5 then\r\n        if p.selectedCard then\r\n            local card = getObjectFromGUID(p.selectedCard)\r\n            local info = card_db[card.getName()]\r\n            local power = info.activePowers[\"5\"]\r\n            local paidCost = p.paidCost[card.getGUID()]\r\n\r\n            if p.selectedCardPower:sub(1,8) == \"WINDFALL\" or (p.selectedCardPower == \"DISCARD_HAND\" and (power[\"DISCARD_HAND\"].codes[\"WINDFALL_ANY\"] or power[\"DISCARD_HAND\"].codes[\"WINDFALL_ALIEN\"]) and paidCost) then\r\n                setHelpText(playerColor, \"▲ Produce: produce on windfall world.\")\r\n            elseif p.selectedCardPower == \"DISCARD_HAND\" then\r\n                local discardCount = p.handCountSnapshot - countCardsInHand(playerColor, false)\r\n                if discardCount < 1 then\r\n                    p.canFlip = true\r\n                end\r\n                setHelpText(playerColor, \"▼ Produce: discard to use power. (\" .. discardCount .. \"/1)\")\r\n            end\r\n        else\r\n            setHelpText(playerColor, \"▲ Produce: use powers.\")\r\n        end\r\n    elseif currentPhase == 100 then\r\n        local maxHandSize = p.powersSnapshot[\"DISCARD_TO_12\"] and 12 or 10\r\n        local discardTarget = cardsInHand - maxHandSize\r\n        discarded = cardsInHand - countCardsInHand(playerColor, false)\r\n\r\n        if cardsInHand > maxHandSize then\r\n            p.canFlip = true\r\n            if discarded >= discardTarget then p.canReady = true end\r\n            setHelpText(playerColor, \"Enforce hand size. (discard \" .. discarded .. \"/\" .. discardTarget .. \")\")\r\n        else\r\n            p.canReady = true\r\n            setHelpText(playerColor, \"Round End: waiting for other players.\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction endOfPhaseGoalCheck()\r\n    local firstGoals = getObjectsWithTag(\"First Goal\")\r\n\r\n    for _, goal in pairs(firstGoals) do\r\n        goal.call(\"endPhaseCheck\", {getCurrentPhase(), playerData})\r\n    end\r\n\r\n    local mostGoals = getObjectsWithTag(\"Most Goal\")\r\n\r\n    for _, goal in pairs(mostGoals) do\r\n        goal.call(\"endPhaseCheck\", {getCurrentPhase(), playerData})\r\n    end\r\nend\r\n\r\n-- [1] = goal tile, [2] = player\r\nfunction moveGoalToPlayer(params)\r\n    local tile = params[1]\r\n    local player = params[2]\r\n    local i = playerData[player].index\r\n    local tableau = getObjectFromGUID(tableau_GUID[i])\r\n    local sp = tableau.getSnapPoints()\r\n    local spIndexOffset = 5\r\n\r\n    -- find first empty spot\r\n    local spot = sp[#sp-spIndexOffset]\r\n    for i=#sp-spIndexOffset, #sp do\r\n        local pos = tableau.positionToWorld(sp[i].position)\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_direction = 3,\r\n        })\r\n\r\n        if #hits > 0 and hits[1].hit_object == tableau then\r\n            tile.setPosition(add(pos, {0, 0.3, 0}))\r\n            tile.setRotation(tableau.getRotation())\r\n            break\r\n        end\r\n    end\r\nend\r\n\r\nfunction getStartWorldNumber(player)\r\n    local startWorlds = {\r\n        [\"Gateway Station\"] = -6,\r\n        [\"Abandoned Mine Squatters\"] = -5,\r\n        [\"Transforming Colonists\"] = -4,\r\n        [\"Galactic Trade Emissaries\"] = -3,\r\n        [\"Industrial Robots\"] = -2,\r\n        [\"Star Nomad Raiders\"] = -1,\r\n        [\"Old Earth\"] = 0,\r\n        [\"Epsilon Eridani\"] = 1,\r\n        [\"Alpha Centauri\"] = 2,\r\n        [\"New Sparta\"] = 3,\r\n        [\"Earth's Lost Colony\"] = 4,\r\n        [\"Separatist Colony\"] = 5,\r\n        [\"Ancient Race\"] = 6,\r\n        [\"Damaged Alien Factory\"] = 7,\r\n        [\"Doomed World\"] = 8,\r\n        [\"Rebel Cantina\"] = 9,\r\n        [\"Galactic Developers\"] = 10,\r\n        [\"Imperium Warlord\"] = 11,\r\n\r\n    }\r\n    local p = playerData[player]\r\n    local tableau = getObjectFromGUID(tableau_GUID[p.index])\r\n    local sp = tableau.getSnapPoints()[1]\r\n    local hits = Physics.cast({\r\n        origin = add(tableau.positionToWorld(sp.position), {0,1,0}),\r\n        direction = {0,-1,0},\r\n        max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n        local obj = hit.hit_object\r\n        if obj.type == 'Card' and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") and startWorlds[obj.getName()] then\r\n            return startWorlds[obj.getName()]\r\n        end\r\n    end\r\n\r\n    return 1000\r\nend\r\n\r\n-- Find player with lowest start world\r\nfunction getFirstPlayer()\r\n    local players = getSeatedPlayersWithHands()\r\n    local lowest = 100\r\n    local target = nil\r\n    local index = 0\r\n\r\n    for i, player in pairs(players) do\r\n        local n = getStartWorldNumber(player)\r\n        if n < lowest then\r\n            lowest = n\r\n            target = player\r\n            index = i\r\n        end\r\n    end\r\n\r\n    return target, index\r\nend\r\n\r\nfunction resolveTakeovers()\r\n    local takeoverSuccess = false\r\n    local players = getSeatedPlayersWithHands()\r\n    local firstPlayer, firstIndex = getFirstPlayer()\r\n    local taken = {}\r\n\r\n    local i = firstIndex\r\n    while i <= #players do\r\n        local player = players[i]\r\n        local p = playerData[player]\r\n\r\n        if p.takeoverSource and p.takeoverTarget then\r\n            local sourceCard = getObjectFromGUID(p.takeoverSource)\r\n            local sourceInfo = card_db[sourceCard.getName()]\r\n            local targetCard = getObjectFromGUID(p.takeoverTarget)\r\n            local targetInfo = card_db[sourceCard.getName()]\r\n\r\n            local sourceStr = calcStrength(player, targetCard, false)\r\n            local targetStr = calcStrength(getOwner(targetCard), targetCard, true)\r\n\r\n            -- Discard one time use takeover cards\r\n            if p.takeoverPower.name == \"DISCARD\" then\r\n                discardCard(sourceCard)\r\n                wait(0.05)\r\n            end\r\n\r\n            -- Takeover successfull\r\n            if not taken[targetCard.getGUID()] and sourceStr >= targetStr then\r\n                broadcastToAll((Player[player].steam_name or player) .. \"'s takeover of \\\"\" .. targetCard.getName() ..'\" was successful!', player)\r\n                taken[targetCard.getGUID()] = true\r\n                -- Take control of the target card\r\n                attemptPlayCard(targetCard, player, true)\r\n                takeoverSuccess = true\r\n            else\r\n                broadcastToAll((Player[player].steam_name or player) .. \" failed to takeover \\\"\" .. targetCard.getName() .. '.\"', player)\r\n            end\r\n\r\n            p.takeoverSource = nil\r\n            p.takeoverPower = nil\r\n            p.takeoverTarget  = nil\r\n        end\r\n\r\n        i = i + 1\r\n        if i > #players then i = 1 end\r\n        if i == firstIndex then break end\r\n    end\r\n\r\n    return takeoverSuccess\r\nend\nend)\n__bundle_register(\"vpCalculator\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction updateVp(player)\r\n    local p = playerData[player]\r\n    local i = p.index\r\n    local zone = getObjectFromGUID(tableauZone_GUID[i])\r\n\r\n    local vpChipCount = 0\r\n    local prestigeCount = 0\r\n    local flatVp = 0\r\n    local devVp = 0\r\n    local goodsCount = 0\r\n    local uniqueWorldsCount = 0\r\n    local uniqueWorlds = {}\r\n    local baseMilitary = p.powersSnapshot[\"EXTRA_MILITARY\"]\r\n    local sixCostDevs = {}\r\n    local cardNames = {}\r\n\r\n    -- first pass to count certain items\r\n    for _, obj in pairs(zone.getObjects()) do\r\n        if obj.hasTag(\"Ignore Tableau\") then goto skip end\r\n\r\n        if obj.hasTag(\"VP\") then\r\n            if obj.hasTag(\"VP Chip\") then\r\n                vpChipCount = vpChipCount + math.max(1, obj.getQuantity())\r\n            elseif obj.hasTag(\"Most Goal\") then\r\n                flatVp = flatVp + 5\r\n            elseif obj.hasTag(\"First Goal\") or obj.hasTag(\"Tied Chip\")then\r\n                flatVp = flatVp + 3\r\n            elseif obj.hasTag(\"Prestige\") then\r\n                prestigeCount = prestigeCount + math.max(1, obj.getQuantity())\r\n            end\r\n        elseif obj.type == \"Card\" and not obj.hasTag(\"Action Card\") then\r\n            if obj.is_face_down and obj.getDescription() ~= \"\" then -- the card is a good\r\n                goodsCount = goodsCount + 1\r\n            elseif not obj.is_face_down then\r\n                local info = card_db[obj.getName()]\r\n\r\n                cardNames[obj.getName()] = true\r\n                flatVp = flatVp + info.vp\r\n\r\n                if info.goods and not uniqueWorlds[info.goods] then\r\n                    uniqueWorldsCount = uniqueWorldsCount + 1\r\n                    uniqueWorlds[info.goods] = true\r\n                end\r\n\r\n                if info.vpFlags then\r\n                    sixCostDevs[#sixCostDevs + 1] = {obj, info}\r\n                end\r\n            end\r\n        end\r\n\r\n        ::skip::\r\n    end\r\n\r\n    local goodsPrefix = {\"NOVELTY\", \"RARE\", \"GENE\", \"ALIEN\"}\r\n\r\n    -- Calculate score for all 6-cost devs in tableau\r\n    for _, item in pairs(sixCostDevs) do\r\n        local vp = 0\r\n        local dev = item[2]\r\n\r\n        for card in allCardsInTableau(player) do\r\n            local info = card_db[card.getName()]\r\n            local otherAlien = true\r\n            local otherUplift = true\r\n\r\n            -- world types\r\n            local otherWorld = true\r\n            for _, prefix in pairs(goodsPrefix) do\r\n                if dev.vpFlags[prefix .. \"_PRODUCTION\"] and info.goods == prefix and not info.flags[\"WINDFALL\"] then\r\n                    otherWorld = false\r\n                    vp = vp + dev.vpFlags[prefix .. \"_PRODUCTION\"]\r\n                    if prefix == \"ALIEN\" then\r\n                        otherAlien = false\r\n                    end\r\n                end\r\n                if dev.vpFlags[prefix .. \"_WINDFALL\"] and info.goods == prefix and info.flags[\"WINDFALL\"] then\r\n                    otherWorld = false\r\n                    vp = vp + dev.vpFlags[prefix .. \"_WINDFALL\"]\r\n                    if prefix == \"ALIEN\" then\r\n                        otherAlien = false\r\n                    end\r\n                end\r\n            end\r\n\r\n            if dev.vpFlags[\"WORLD_TRADE\"] and info.type == 1 and info.passiveCount[\"4\"] > 0 then\r\n                vp = vp + dev.vpFlags[\"WORLD_TRADE\"]\r\n            end\r\n            if dev.vpFlags[\"WORLD_CONSUME\"] and info.type == 1 and info.activeCount[\"4\"] > 0 then\r\n                vp = vp + dev.vpFlags[\"WORLD_CONSUME\"]\r\n            end\r\n            if dev.vpFlags[\"WORLD_EXPLORE\"] and info.type == 1 and info.passiveCount[\"1\"] > 0 then\r\n                otherWorld = false\r\n                vp = vp + dev.vpFlags[\"WORLD_EXPLORE\"]\r\n            end\r\n            if dev.vpFlags[\"REBEL_MILITARY\"] and info.type == 1 and info.flags[\"REBEL\"] then\r\n                otherWorld = false\r\n                vp = vp + dev.vpFlags[\"REBEL_MILITARY\"]\r\n            end\r\n            if dev.vpFlags[\"TERRAFORMING_FLAG\"] and info.flags[\"TERRAFORMING\"] then\r\n                vp = vp + dev.vpFlags[\"TERRAFORMING_FLAG\"]\r\n            end\r\n            if dev.vpFlags[\"IMPERIUM_FLAG\"] and info.flags[\"IMPERIUM\"] then\r\n                vp = vp + dev.vpFlags[\"IMPERIUM_FLAG\"]\r\n            end\r\n            if dev.vpFlags[\"CHROMO_FLAG\"] and info.flags[\"CHROMO\"] then\r\n                otherUplift = false\r\n                vp = vp + dev.vpFlags[\"CHROMO_FLAG\"]\r\n            end\r\n            if dev.vpFlags[\"REBEL_FLAG\"] and info.flags[\"REBEL\"] then\r\n                otherWorld = false\r\n                vp = vp + dev.vpFlags[\"REBEL_FLAG\"]\r\n            end\r\n            if otherWorld and dev.vpFlags[\"MILITARY\"] and info.type == 1 and info.flags[\"MILITARY\"] then\r\n                vp = vp + dev.vpFlags[\"MILITARY\"]\r\n            end\r\n            if otherWorld and dev.vpFlags[\"WORLD\"] and info.type == 1 then\r\n                vp = vp + dev.vpFlags[\"WORLD\"]\r\n            end\r\n            if otherUplift and dev.vpFlags[\"UPLIFT_FLAG\"] and info.flags[\"UPLIFT\"] then\r\n                vp = vp + dev.vpFlags[\"UPLIFT_FLAG\"]\r\n            end\r\n\r\n            -- development types\r\n            local otherDev = true\r\n\r\n            if dev.vpFlags[\"SIX_DEVEL\"] and info.type == 2 and info.cost == 6 then\r\n                otherDev = false\r\n                vp = vp + dev.vpFlags[\"SIX_DEVEL\"]\r\n            end\r\n            if dev.vpFlags[\"DEVEL_TRADE\"] and info.type == 2 and info.passiveCount[\"4\"] > 0 then\r\n                vp = vp + dev.vpFlags[\"DEVEL_TRADE\"]\r\n            end\r\n            if dev.vpFlags[\"DEVEL_CONSUME\"] and info.type == 2 and info.activeCount[\"4\"] > 0 then\r\n                vp = vp + dev.vpFlags[\"DEVEL_CONSUME\"]\r\n            end\r\n            if dev.vpFlags[\"DEVEL_EXPLORE\"] and info.type == 2 and info.passiveCount[\"1\"] > 0 then\r\n                vp = vp + dev.vpFlags[\"DEVEL_EXPLORE\"]\r\n            end\r\n\r\n            if otherDev and dev.vpFlags[\"DEVEL\"] and info.type == 2 then\r\n                vp = vp + dev.vpFlags[\"DEVEL\"]\r\n            end\r\n\r\n            -- other card tag checks\r\n            if otherAlien and dev.vpFlags[\"ALIEN_FLAG\"] and info.flags[\"ALIEN\"] then\r\n                vp = vp + dev.vpFlags[\"ALIEN_FLAG\"]\r\n            end\r\n        end\r\n\r\n        -- name checks\r\n        if dev.vpFlags[\"NAME\"] then\r\n            for _, entry in pairs(dev.vpFlags[\"NAME\"]) do\r\n                vp = vp + (cardNames[entry.name] and entry.vp or 0)\r\n            end\r\n        end\r\n\r\n        -- other\r\n        if dev.vpFlags[\"PRESTIGE\"] then\r\n            vp = vp + prestigeCount * dev.vpFlags[\"PRESTIGE\"]\r\n        end\r\n        if dev.vpFlags[\"GOODS_REMAINING\"] then\r\n            vp = vp + goodsCount * dev.vpFlags[\"GOODS_REMAINING\"]\r\n        end\r\n        if dev.vpFlags[\"THREE_VP\"] then\r\n            vp = vp + math.floor(vpChipCount / 3) * dev.vpFlags[\"THREE_VP\"]\r\n        end\r\n        if dev.vpFlags[\"TOTAL_MILITARY\"] then\r\n            vp = vp + baseMilitary * dev.vpFlags[\"TOTAL_MILITARY\"]\r\n        end\r\n        if dev.vpFlags[\"NEGATIVE_MILITARY\"] and baseMilitary < 0 then\r\n            vp = vp + math.abs(baseMilitary) * dev.vpFlags[\"NEGATIVE_MILITARY\"]\r\n        end\r\n        if dev.vpFlags[\"KIND_GOOD\"] and uniqueWorldsCount > 0 then\r\n            local amt = {1,3,6,10}\r\n            vp = amt[uniqueWorldsCount]\r\n        end\r\n\r\n        displayVpHexOn(item[1], vp)\r\n\r\n        devVp = devVp + vp\r\n    end\r\n\r\n    local statTracker = getObjectFromGUID(statTracker_GUID[i])\r\n    if statTracker then\r\n         statTracker.call(\"updateLabel\", {\"vp\", flatVp + vpChipCount + prestigeCount + devVp})\r\n    end\r\nend\nend)\n__bundle_register(\"gameUi\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nfunction createSelectButtonOnCard(card)\r\n    card.clearButtons()\r\n    card.createButton({\r\n         click_function = \"cardSelectClick\",\r\n         function_owner = self,\r\n         position = {0, 0.5, 0},\r\n         width = 600,\r\n         height = 1000,\r\n         font_size = 150,\r\n         color = color(0, 1, 1, 0.5),\r\n         tooltip = 'Select \"' .. card.getName() .. '\"'\r\n    })\r\nend\r\n\r\nfunction createCancelButtonOnCard(card)\r\n    card.clearButtons()\r\n    card.createButton({\r\n         click_function = \"cardCancelClick\",\r\n         function_owner = self,\r\n         position = {0, 0.5, 0},\r\n         width = 600,\r\n         height = 1000,\r\n         font_size = 150,\r\n         color = color(1, 0.5, 0.5, 0.5),\r\n         tooltip = 'Cancel \"' .. card.getName() .. '\"'\r\n    })\r\nend\r\n\r\nfunction createCardBottomButton(card, text, func)\r\n    local slot = getCardSlot(card)\r\n    slot.createButton({\r\n        click_function = func,\r\n        function_owner = Global,\r\n        label = text,\r\n        font_size = 150,\r\n        width = 900,\r\n        height = 220,\r\n        position = {0, 0, .63},\r\n        scale = {0.5, 1, 0.4}\r\n    })\r\nend\r\n\r\nfunction createConfirmButton(card)\r\n    local slot = getCardSlot(card)\r\n\r\n    if not slot then return end\r\n\r\n    slot.createButton({\r\n        click_function = \"confirmPowerClick\",\r\n        function_owner = Global,\r\n        label = \"Confirm\",\r\n        font_size = 150,\r\n        width = 900,\r\n        height = 220,\r\n        position = {0, 0, .63},\r\n        scale = {0.5, 1, 0.4}\r\n    })\r\nend\r\n\r\nfunction createUsePowerButton(card, powerIndex, powersCount, tooltip, color)\r\n    local slot = getCardSlot(card)\r\n\r\n    if not slot then return end\r\n\r\n    local w = 900 / powersCount\r\n    local xW = 1\r\n    local offx = xW / powersCount\r\n\r\n    slot.createButton({\r\n        click_function = \"usePowerClick\" .. powerIndex,\r\n        function_owner = Global,\r\n        label = powersCount == 1 and \"Use Power\" or \"Pow \" .. powerIndex,\r\n        font_size = 150,\r\n        height = 220,\r\n        width = w,\r\n        scale = {0.5, 1, 0.4},\r\n        position = {-offx / 2 * (powersCount - 1) + (powerIndex-1) * offx, 0, -0.63},\r\n        tooltip = tooltip,\r\n        color = color or \"White\"\r\n    })\r\nend\r\n\r\nfunction createCancelButton(card)\r\n    local slot = getCardSlot(card)\r\n\r\n    if not slot then return end\r\n\r\n    slot.createButton({\r\n        click_function = \"cancelPowerClick\",\r\n        function_owner = Global,\r\n        label = \"Cancel\",\r\n        font_size = 150,\r\n        width = 900,\r\n        height = 220,\r\n        position = {0, 0, -.63},\r\n        scale = {0.5, 1, 0.4},\r\n        tooltip = \"Cancel power.\",\r\n    })\r\nend\r\n\r\nfunction createGoodsButton(card, label, color)\r\n    local offset = {0.28, 6, 0.13}\r\n    local slot = getCardSlot(card)\r\n\r\n    slot.createButton({\r\n        click_function = \"goodSelectClick\",\r\n        function_owner = Global,\r\n        label = label or \"\",\r\n        font_size = 175,\r\n        color = color or \"White\",\r\n        width = 500,\r\n        height = 750,\r\n        position = offset,\r\n        scale = {0.5, 2, 0.35}\r\n    })\r\nend\r\n\r\nfunction createStrengthLabel(player, card, addDefense)\r\n    local calcCard = card\r\n    if playerData[player].takeoverTarget then\r\n        calcCard = getObjectFromGUID(playerData[player].takeoverTarget)\r\n    end\r\n\r\n    card.createButton({\r\n        click_function = \"none\",\r\n        function_owner = Global,\r\n        width = 0,\r\n        height = 0,\r\n        position = {-1.2, 1, 0},\r\n        rotation = {0, -90, 0},\r\n        font_size = 150,\r\n        label = \"Military +\" .. calcStrength(player, calcCard, addDefense),\r\n        font_color = \"White\",\r\n    })\r\nend\r\n\r\nfunction highlightOn(o, color, player)\r\n    if o.UI.getXml() == '' then\r\n        o.UI.setXml('<Panel id=\"highlight\" color=\"' .. color .. '\" width=\"220\" height=\"314\" visibility=\"Black|' .. player .. '\"/>' ..\r\n[[\r\n<Panel id=\"hex\" width=\"100\" height=\"100\" position=\"45 -113 -30\" scale=\"0.3\" rotation=\"0 0 180\" active=\"false\">\r\n    <Image image=\"hex\" preserveAspect=\"true\"/>\r\n    <Text id=\"vp\" fontSize=\"65\" fontStyle=\"Bold\"></Text>\r\n</Panel>\r\n]])\r\n    else\r\n        o.UI.setAttributes(\"highlight\",{\r\n            active = true,\r\n            visibility = \"Black|\" .. player,\r\n            color = color\r\n        })\r\n    end\r\nend\r\n\r\nfunction highlightOff(o)\r\n    if o.UI.getXml() ~= '' then\r\n        o.UI.setAttribute(\"highlight\", \"active\", false)\r\n    end\r\nend\r\n\r\nfunction displayVpHexOff(o)\r\n    if o.UI.getXml() ~= '' then\r\n        o.UI.setAttribute(\"hex\", \"active\", false)\r\n    end\r\nend\r\n\r\nfunction displayVpHexOn(o, value)\r\n    if o.UI.getXml() == '' then\r\n        o.UI.setXml('<Panel id=\"highlight\" width=\"220\" height=\"314\" active=\"false\"/>' ..\r\n         '<Panel id=\"hex\" width=\"100\" height=\"100\" position=\"45 -113 -30\" scale=\"0.3\" rotation=\"0 0 180\"><Image image=\"hex\" preserveAspect=\"true\"/>'..\r\n         '<Text id=\"vp\" fontSize=\"65\" fontStyle=\"Bold\">' .. value .. '</Text></Panel>')\r\n    else\r\n        o.UI.setAttribute(\"hex\", \"active\", true)\r\n        o.UI.setValue(\"vp\", value)\r\n    end\r\nend\r\n\r\nfunction refreshTakeoverMenu(owner)\r\n    local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n    local op = playerData[owner]\r\n\r\n    if not op.takeoverPower then return end\r\n\r\n    -- The main index value is to determine which of the UI windows to edit, and the player index determines column based on player seating.\r\n    local indexValues = {\r\n        Yellow = {main=3,Red=1,Blue=2,Green=3},\r\n        Red = {main=4,Blue=1,Green=2,Yellow=3},\r\n        Blue = {main=5,Green=1,Yellow=2,Red=3},\r\n        Green = {main=6,Yellow=1,Red=2,Blue=3}\r\n    }\r\n\r\n    local xml = Global.UI.getXmlTable()\r\n    local mainPanelBody = xml[indexValues[owner].main]\r\n    local groupBody = mainPanelBody.children[1].children[3].children[1].children[1].children\r\n    local largestCount = 0\r\n\r\n    for _, player in pairs(players) do\r\n        if player ~= owner then\r\n            local btnCount = 0\r\n            local textElement = mainPanelBody.children[1].children[2].children[1].children[indexValues[owner][player]].children[1]\r\n            textElement.value = Player[player].steam_name or player\r\n            textElement.attributes.color = player\r\n            \r\n            local column = {}\r\n            local p = playerData[player]\r\n            local takeoverPower = isTakeoverPower(op.takeoverPower)\r\n\r\n            if takeoverPower == \"TAKEOVER_MILITARY\" and p.powersSnapshot[\"EXTRA_MILITARY\"] <= 0 or \r\n                takeoverPower == \"TAKEOVER_IMPERIUM\" and not p.powersSnapshot[\"IMPERIUM\"] then\r\n                goto skip_player\r\n            end\r\n\r\n            for card in allCardsInTableau(player) do\r\n                local info = card_db[card.getName()]\r\n\r\n                if takeoverPower == \"TAKEOVER_REBEL\" and not info.flags[\"REBEL\"] then\r\n                    goto skip_card\r\n                end\r\n\r\n                if info.type == 1 and info.flags[\"MILITARY\"] then\r\n                    local yourStrength = calcStrength(owner, card, false, owner)\r\n                    local theirDefense = calcStrength(player, card, true, owner)\r\n                    local canTake = yourStrength >= theirDefense\r\n                    local class = canTake and \"\" or \"disabled\"\r\n                    local reselect = canTake and op.takeoverTarget == card.getGUID()\r\n\r\n                    -- Disable previously selected target if can no longer take it\r\n                    if not canTake and op.takeoverTarget == card.getGUID() then\r\n                        op.takeoverTarget = nil\r\n                    end\r\n\r\n                    local btn = {\r\n                        tag=\"ToggleButton\",\r\n                        attributes = {\r\n                            id=owner .. \"_\" .. card.getGUID(),\r\n                            interactable=canTake,\r\n                            class=reselect and \"selected\" or class,\r\n                            onValueChanged=\"menuValueChanged\",\r\n                            isOn=reselect,\r\n                        },\r\n                        children = {},\r\n                        value = card.getName() .. \" - [\" .. yourStrength .. \"]vs[\" .. theirDefense .. \"]\"\r\n                    }\r\n\r\n                    btnCount = btnCount + 1\r\n                    column[#column + 1] = btn\r\n                end\r\n\r\n                ::skip_card::\r\n            end\r\n\r\n            ::skip_player::\r\n\r\n            groupBody[indexValues[owner][player]].children = column\r\n            if btnCount > largestCount then largestCount = btnCount end\r\n        end\r\n    end\r\n\r\n    -- need to readjust height of the toggle group to fit all the buttons\r\n    --mainPanelBody.children[1].children[3].children[1].attributes.height = 48 * largestCount\r\n\r\n    Global.UI.setXmlTable(xml)\r\nend\r\n\r\nfunction calcStrength(player, card, addDefense, activePlayer)\r\n    local p = playerData[player]\r\n    local info = card_db[card.getName()]\r\n\r\n    local value = p.powersSnapshot[\"EXTRA_MILITARY\"]\r\n    if activePlayer == player or activePlayer == nil then\r\n        value = value + p.powersSnapshot[\"BONUS_MILITARY\"] + p.tempMilitary\r\n    end\r\n\r\n    -- Check for bonus military\r\n    if info.goods then\r\n        local key = info.goods .. \"_BONUS_MILITARY\"\r\n        if p.powersSnapshot[key] then\r\n            value = value + p.powersSnapshot[key]\r\n        end\r\n    end\r\n\r\n    if info.flags[\"REBEL\"] then\r\n        local key = \"AGAINST_REBEL_BONUS_MILITARY\"\r\n        if p.powersSnapshot[key] then\r\n            value = value + p.powersSnapshot[key]\r\n        end\r\n    end\r\n\r\n    if addDefense then\r\n        value = value + info.cost + (p.powersSnapshot[\"TAKEOVER_DEFENSE\"] or 0)\r\n        if activePlayer == nil then\r\n            value = value + p.powersSnapshot[\"BONUS_MILITARY\"] + p.tempMilitary\r\n        end\r\n    elseif p.takeoverPower and p.takeoverPower.name == \"TAKEOVER_IMPERIUM\" then\r\n        value = value + p.powersSnapshot[\"REBEL_MILITARY_WORLD_COUNT\"] * p.takeoverPower.strength\r\n    end\r\n\r\n    return value\r\nend\r\n\r\nfunction menuValueChanged(player, value, id)\r\n    if value == \"True\" then\r\n        Global.UI.setAttribute(id, \"color\", \"rgb(0.4,0.8,1)\")\r\n        playerData[player.color].takeoverTarget = split(id, \"_\")[2]\r\n    else\r\n        Global.UI.setAttribute(id, \"color\", \"White\")\r\n        playerData[player.color].takeoverTarget = nil\r\n    end\r\nend\r\n\r\nfunction drawTakeoverLines()\r\n    local lines = getDefaultVectorLines()\r\n    for player, data in pairs(playerData) do\r\n        if data.takeoverSource and data.takeoverTarget then\r\n            local source = getObjectFromGUID(data.takeoverSource)\r\n            local target = getObjectFromGUID(data.takeoverTarget)\r\n\r\n            local line = {\r\n                points = {source.getPosition(), target.getPosition()},\r\n                color = player,\r\n                thickness = 0.5,\r\n                rotation = {0, 0, 0}\r\n            }\r\n\r\n            lines[#lines + 1] = line\r\n        end\r\n    end\r\n\r\n    Global.setVectorLines(lines)\r\nend\r\n\r\nfunction getDefaultVectorLines()\r\n    return {{\r\n        points={{-2.79, 1.49, -8.34},{2.77, 1.49, -8.34},{2.77, 1.49, -11.66},{-2.79, 1.49, -11.66}},\r\n        color=\"Yellow\", thickness=0.1, loop=true\r\n    },\r\n    {\r\n        points={{8.31, 1.49, -2.79},{8.31, 1.49, 2.78},{11.70, 1.49, 2.78},{11.70, 1.49, -2.79}},\r\n        color=\"Green\", thickness=0.1, loop=true\r\n    },\r\n    {\r\n        points={{2.83, 1.49, 8.27},{-2.78, 1.49, 8.27},{-2.78, 1.49, 11.70},{2.83, 1.49, 11.70},},\r\n        color=\"Blue\", thickness=0.1, loop=true\r\n    },\r\n    {\r\n        points={{-8.31, 1.49, 2.78},{-8.31, 1.49, -2.78},{-11.67, 1.49, -2.78},{-11.67, 1.49, 2.78}},\r\n        color=\"Red\", thickness=0.1, loop=true\r\n    }}\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\n__bundle_register(\"cardtxt\", function(require, _LOADED, __bundle_register, __bundle_modules)\n-- source is from Keldon AI github. Using this instead of making my own database to reduce risk of errors from data entry\r\ncardtxt = [[\r\n# cards.txt\r\n#\r\n# N:card name\r\n# T:type:cost:vp\r\n#   Type is 1: world, 2: development\r\n# E@e0:n0@e1:n1[...]\r\n#   Number of this card introduced at each expansion level\r\n# G:goodtype\r\n#   Only valid for worlds, and optional there\r\n# F:flags\r\n#   START world, MILITARY, WINDFALL, REBEL, ALIEN, IMPERIUM, etc\r\n# P:phase:code:value:times\r\n#   Times is only relevant for certain consume powers\r\n# V:value:type:name\r\n#   Extra victory points for 6-cost developments\r\n\r\n# Action cards\r\n\r\nN:Explore (+5)\r\nT:0:0:0\r\nE@0:1\r\nF:ACTION_CARD\r\nP:1:DRAW:5:0\r\n\r\nN:Explore (+1,+1)\r\nT:0:0:0\r\nE@0:1\r\nF:ACTION_CARD\r\nP:1:DRAW:1:0\r\nP:1:KEEP:1:0\r\n\r\nN:Develop\r\nT:0:0:0\r\nE@0:1\r\nF:ACTION_CARD\r\nP:2:REDUCE:1:0\r\n\r\nN:Settle\r\nT:0:0:0\r\nE@0:1\r\nF:ACTION_CARD\r\nP:3:DRAW_AFTER:1:0\r\n\r\nN:Consume ($)\r\nT:0:0:0\r\nE@0:1\r\nF:ACTION_CARD\r\nP:4:TRADE_ACTION:0:0\r\n\r\nN:Consume (x2)\r\nT:0:0:0\r\nE@0:1\r\nF:ACTION_CARD\r\nP:4:DOUBLE_VP:0:0\r\n\r\nN:Produce\r\nT:0:0:0\r\nE@0:1\r\nF:ACTION_CARD\r\nP:5:WINDFALL_ANY:0:0\r\n\r\n#\r\n# Promo home worlds\r\n#\r\n\r\nN:Gateway Station\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nF:PROMO | START | START_BLUE | WINDFALL\r\nP:4:CONSUME_ANY | CONSUME_TWO | GET_3_CARD | GET_VP:1:1\r\n\r\nN:Abandoned Mine Squatters\r\nT:1:2:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:PROMO | START | START_RED | MILITARY\r\nP:3:EXTRA_MILITARY:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Terraforming Colonists\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:PROMO | START | START_BLUE | TERRAFORMING\r\nP:3:DRAW_AFTER:1:0\r\nP:5:DISCARD_HAND | WINDFALL_ANY:1:0\r\n\r\nN:Galactic Trade Emissaries\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:PROMO | START | START_RED\r\nP:3:PAY_MILITARY:1:0\r\nP:4:DRAW:1:0\r\n\r\nN:Industrial Robots\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:PROMO | START | START_BLUE\r\nP:2:DRAW_AFTER:1:0\r\nP:5:DRAW:1:0\r\n\r\nN:Star Nomad Raiders\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:PROMO | START | START_RED | MILITARY\r\nP:3:EXTRA_MILITARY:1:0\r\nP:4:TRADE_ANY:2:0\r\n\r\n#\r\n# Base game\r\n#\r\n\r\nN:Old Earth\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:START | START_BLUE\r\nP:4:TRADE_ANY:1:0\r\nP:4:CONSUME_ANY | GET_VP:1:2\r\n\r\nN:Epsilon Eridani\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:START | START_RED\r\nP:3:EXTRA_MILITARY:1:0\r\nP:4:CONSUME_ANY | GET_CARD | GET_VP:1:1\r\n\r\nN:Alpha Centauri\r\nT:1:2:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:START | START_BLUE | WINDFALL\r\nP:3:REDUCE | RARE:1:0\r\nP:3:BONUS_MILITARY | RARE:1:0\r\n\r\nN:New Sparta\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:START | START_RED | MILITARY\r\nP:3:EXTRA_MILITARY:2:0\r\n\r\nN:Earth's Lost Colony\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nF:START | START_BLUE\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\nP:5:PRODUCE:0:0\r\n\r\nN:Rebel Fuel Cache\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:WINDFALL | MILITARY | REBEL\r\n\r\nN:Public Works\r\nT:2:1:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:2:DRAW_AFTER:1:0\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\n\r\nN:Gem World\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nP:5:PRODUCE:0:0\r\nP:5:DRAW_IF:1:0\r\n\r\nN:Colony Ship\r\nT:2:2:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:3:DISCARD | REDUCE_ZERO:0:0\r\n\r\nN:Comet Zone\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nP:5:PRODUCE:0:0\r\nP:5:DRAW_IF:1:0\r\n\r\nN:Expedition Force\r\nT:2:1:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:1:DRAW:1:0\r\nP:3:EXTRA_MILITARY:1:0\r\n\r\nN:Mining Robots\r\nT:2:2:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:3:REDUCE | RARE:1:0\r\nP:5:WINDFALL_RARE:0:0\r\n\r\nN:Rebel Miners\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:MILITARY | REBEL\r\nP:5:PRODUCE:0:0\r\n\r\nN:Export Duties\r\nT:2:1:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:4:TRADE_ANY:1:0\r\n\r\nN:Former Penal Colony\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nF:WINDFALL | MILITARY\r\nP:3:EXTRA_MILITARY:1:0\r\n\r\nN:Malevolent Lifeforms\r\nT:1:4:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nF:MILITARY\r\nP:1:DRAW:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:New Military Tactics\r\nT:2:1:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:3:DISCARD | EXTRA_MILITARY:3:0\r\n\r\nN:Space Marines\r\nT:2:2:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:3:EXTRA_MILITARY:2:0\r\n\r\nN:Contact Specialist\r\nT:2:1:1\r\nE@0:2@1:1\r\n#E:2:3:3:3:2\r\nP:3:EXTRA_MILITARY:-1:0\r\nP:3:PAY_MILITARY:1:0\r\n\r\nN:Avian Uplift Race\r\nT:1:2:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nF:WINDFALL | MILITARY | UPLIFT | CHROMO\r\n\r\nN:Spice World\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nP:4:TRADE_NOVELTY:2:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Lost Species Ark World\r\nT:1:5:3\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nP:5:PRODUCE:0:0\r\nP:5:DRAW_IF:2:0\r\n\r\nN:New Vinland\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nP:4:CONSUME_ANY | GET_2_CARD:1:1\r\nP:5:PRODUCE:0:0\r\n\r\nN:Artist Colony\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nP:5:PRODUCE:0:0\r\n\r\nN:Alien Robotic Factory\r\nT:1:6:5\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:ALIEN\r\nF:ALIEN\r\nP:5:PRODUCE:0:0\r\n\r\nN:Plague World\r\nT:1:3:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nP:4:CONSUME_GENE | GET_CARD | GET_VP:1:1\r\nP:5:PRODUCE:0:0\r\n\r\nN:Distant World\r\nT:1:4:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nP:4:TRADE_NOVELTY:3:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Rebel Outpost\r\nT:1:5:5\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:REBEL | MILITARY\r\nP:3:EXTRA_MILITARY:1:0\r\n\r\nN:Rebel Warrior Race\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nF:REBEL | WINDFALL | MILITARY\r\nP:3:EXTRA_MILITARY:1:0\r\n\r\nN:Rebel Underground\r\nT:1:3:4\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:REBEL | MILITARY\r\nP:5:DRAW:1:0\r\n\r\nN:New Survivalists\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nF:MILITARY\r\nP:4:CONSUME_NOVELTY | GET_CARD:1:1\r\nP:5:PRODUCE:0:0\r\n\r\nN:Outlaw World\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:MILITARY\r\nP:3:EXTRA_MILITARY:1:0\r\nP:4:CONSUME_ANY | GET_CARD | GET_VP:1:1\r\n\r\nN:Lost Alien Battle Fleet\r\nT:1:6:4\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:ALIEN\r\nF:ALIEN | MILITARY\r\nP:3:EXTRA_MILITARY:3:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Diversified Economy\r\nT:2:4:2\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:4:CONSUME_3_DIFF | GET_VP:3:1\r\nP:5:DRAW_DIFFERENT:1:0\r\n\r\nN:Consumer Markets\r\nT:2:5:3\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:4:CONSUME_NOVELTY | GET_VP:1:3\r\nP:5:DRAW_EACH_NOVELTY:1:0\r\n\r\nN:Mining Conglomerate\r\nT:2:3:2\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:4:TRADE_RARE:1:0\r\nP:4:CONSUME_RARE | GET_VP:1:2\r\nP:5:DRAW_MOST_RARE:2:0\r\n\r\nN:Research Labs\r\nT:2:4:2\r\nE@0:2@2:1\r\n#E:2:2:3:3:2\r\nP:1:KEEP:1:0\r\nP:4:CONSUME_GENE | GET_VP:1:1\r\nP:5:DRAW_EACH_ALIEN:1:0\r\n\r\nN:Deficit Spending\r\nT:2:2:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:4:DISCARD_HAND | GET_VP:1:2\r\n\r\nN:Investment Credits\r\nT:2:1:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:2:REDUCE:1:0\r\n\r\nN:Pan-Galactic League\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:3:EXTRA_MILITARY:-1:0\r\nP:5:DRAW_WORLD_GENE:1:0\r\nV:2:GENE_PRODUCTION:N/A\r\nV:2:GENE_WINDFALL:N/A\r\nV:1:MILITARY:N/A\r\nV:3:NAME:Contact Specialist\r\n\r\nN:Mining League\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:CONSUME_RARE | CONSUME_TWO | GET_VP:3:1\r\nP:5:WINDFALL_RARE:0:0\r\nV:2:RARE_PRODUCTION:N/A\r\nV:1:RARE_WINDFALL:N/A\r\nV:2:NAME:Mining Robots\r\nV:2:NAME:Mining Conglomerate\r\n\r\nN:Free Trade Association\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:CONSUME_NOVELTY | GET_CARD | GET_VP:1:3\r\nP:5:WINDFALL_NOVELTY:0:0\r\nV:2:NOVELTY_PRODUCTION:N/A\r\nV:1:NOVELTY_WINDFALL:N/A\r\nV:2:NAME:Consumer Markets\r\nV:2:NAME:Expanding Colony\r\n\r\nN:Alien Tech Institute\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:ALIEN\r\nP:3:REDUCE | ALIEN:2:0\r\nP:3:BONUS_MILITARY | ALIEN:2:0\r\nV:3:ALIEN_PRODUCTION:N/A\r\nV:2:ALIEN_WINDFALL:N/A\r\nV:2:ALIEN_FLAG:N/A\r\n\r\nN:Galactic Survey: SETI\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:1:DRAW:2:0\r\nV:1:DEVEL_EXPLORE:N/A\r\nV:2:WORLD_EXPLORE:N/A\r\nV:1:WORLD:N/A\r\n\r\nN:Galactic Federation\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:2:REDUCE:2:0\r\nV:2:SIX_DEVEL:N/A\r\nV:1:DEVEL:N/A\r\n\r\nN:Refugee World\r\nT:1:0:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nF:WINDFALL\r\nP:3:EXTRA_MILITARY:-1:0\r\n\r\nN:Empath World\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nF:WINDFALL\r\nP:3:EXTRA_MILITARY:-1:0\r\n\r\nN:Galactic Resort\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nF:WINDFALL\r\nP:4:CONSUME_ANY | GET_CARD | GET_VP:1:1\r\n\r\nN:Pre-Sentient Race\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nF:WINDFALL\r\n\r\nN:Deserted Alien Outpost\r\nT:1:4:3\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:ALIEN\r\nF:ALIEN | WINDFALL\r\n\r\nN:Deserted Alien Colony\r\nT:1:5:4\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:ALIEN\r\nF:ALIEN | WINDFALL\r\n\r\nN:Galactic Engineers\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:TRADE_ANY:1:0\r\nP:5:WINDFALL_ANY:0:0\r\n\r\nN:Black Market Trading World\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:TRADE_ACTION | TRADE_NO_BONUS:0:0\r\n\r\nN:Merchant World\r\nT:1:4:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:TRADE_ANY:2:0\r\nP:4:DISCARD_HAND | GET_VP:1:2\r\n\r\nN:Tourist World\r\nT:1:4:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:CONSUME_ANY | CONSUME_TWO | GET_VP:3:1\r\n\r\nN:Galactic Trendsetters\r\nT:1:5:3\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:CONSUME_ANY | GET_VP:2:1\r\n\r\nN:Alien Rosetta Stone World\r\nT:1:3:3\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:ALIEN\r\nP:3:REDUCE | ALIEN:2:0\r\nP:3:BONUS_MILITARY | ALIEN:2:0\r\nP:5:WINDFALL_ALIEN:0:0\r\n\r\nN:Star Nomad Lair\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nF:WINDFALL | MILITARY\r\nP:1:DRAW:1:0\r\nP:4:TRADE_THIS:1:0\r\n\r\nN:The Last of the Uplift Gnarssh\r\nT:1:1:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nF:WINDFALL | MILITARY | UPLIFT | CHROMO\r\n\r\nN:Alien Robot Sentry\r\nT:1:2:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:ALIEN\r\nF:WINDFALL | MILITARY | ALIEN\r\n\r\nN:Pirate World\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nF:WINDFALL | MILITARY\r\nP:4:TRADE_THIS:3:0\r\n\r\nN:Reptilian Uplift Race\r\nT:1:2:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nF:WINDFALL | MILITARY | UPLIFT | CHROMO\r\n\r\nN:Lost Alien Warship\r\nT:1:5:3\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:ALIEN\r\nF:WINDFALL | MILITARY | ALIEN\r\nP:3:EXTRA_MILITARY:2:0\r\n\r\nN:Alien Robot Scout Ship\r\nT:1:4:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:ALIEN\r\nF:WINDFALL | MILITARY | ALIEN\r\nP:3:EXTRA_MILITARY:1:0\r\n\r\nN:Runaway Robots\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:WINDFALL | MILITARY\r\nP:5:DRAW_IF:1:0\r\n\r\nN:Interstellar Bank\r\nT:2:2:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:2:DRAW:1:0\r\n\r\nN:Terraforming Robots\r\nT:2:3:2\r\nE@0:2\r\n#E:2:2:2:2:2\r\nF:TERRAFORMING\r\nP:3:DRAW_AFTER:1:0\r\nP:4:CONSUME_RARE | GET_CARD | GET_VP:1:1\r\n\r\nN:Drop Ships\r\nT:2:4:2\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:3:EXTRA_MILITARY:3:0\r\n\r\nN:New Galactic Order\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:3:EXTRA_MILITARY:2:0\r\nV:1:TOTAL_MILITARY:N/A\r\n\r\nN:Asteroid Belt\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:WINDFALL\r\n\r\nN:Merchant Guild\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:5:DRAW:2:0\r\nV:2:NOVELTY_PRODUCTION:N/A\r\nV:2:RARE_PRODUCTION:N/A\r\nV:2:GENE_PRODUCTION:N/A\r\nV:2:ALIEN_PRODUCTION:N/A\r\nV:1:GOODS_REMAINING:N/A\r\n\r\nN:Secluded World\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nP:4:CONSUME_ANY | GET_CARD:1:1\r\nP:5:PRODUCE:0:0\r\n\r\nN:Imperium Armaments World\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:IMPERIUM\r\nP:3:EXTRA_MILITARY:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Terraformed World\r\nT:1:5:5\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\n\r\nN:Replicant Robots\r\nT:2:4:2\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:3:REDUCE:2:0\r\n\r\nN:Pilgrimage World\r\nT:1:0:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:CONSUME_ALL | GET_VP:1:1\r\n\r\nN:Rebel Homeworld\r\nT:1:7:7\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:MILITARY | REBEL\r\n\r\nN:New Economy\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:DRAW:1:0\r\nV:2:DEVEL_CONSUME:N/A\r\nV:1:WORLD_CONSUME:N/A\r\n\r\nN:Radioactive World\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:WINDFALL\r\n\r\nN:Aquatic Uplift Race\r\nT:1:2:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:GENE\r\nF:WINDFALL | MILITARY | UPLIFT | CHROMO\r\n\r\nN:Genetics Lab\r\nT:2:2:1\r\nE@0:2\r\n#E:2:2:2:2:2\r\nP:4:TRADE_GENE:1:0\r\nP:5:WINDFALL_GENE:0:0\r\n\r\nN:Bio-Hazard Mining World\r\nT:1:2:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nP:4:TRADE_GENE:2:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Deserted Alien Library\r\nT:1:6:5\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:ALIEN\r\nF:WINDFALL | ALIEN\r\n\r\nN:Destroyed World\r\nT:1:1:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:WINDFALL\r\n\r\nN:Galactic Renaissance\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:1:DRAW:2:0\r\nP:1:KEEP:1:0\r\nV:1:THREE_VP:N/A\r\nV:3:NAME:Research Labs\r\nV:3:NAME:Galactic Trendsetters\r\nV:3:NAME:Artist Colony\r\n\r\nN:Blaster Gem Mines\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nF:WINDFALL\r\nP:3:EXTRA_MILITARY:1:0\r\n\r\nN:Gambling World\r\nT:1:1:1\r\nE@0:1@2:-1\r\n#E:1:1:0:0:1\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\nP:4:DRAW_LUCKY:0:0\r\n\r\nN:Expanding Colony\r\nT:1:1:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\nP:5:WINDFALL_NOVELTY:0:0\r\n\r\nN:Space Port\r\nT:1:2:1\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nP:4:TRADE_RARE:2:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Prosperous World\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:NOVELTY\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\nP:5:PRODUCE:0:0\r\n\r\nN:New Earth\r\nT:1:5:3\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nP:4:CONSUME_ANY | GET_CARD | GET_VP:1:1\r\nP:5:PRODUCE:0:0\r\n\r\nN:Rebel Base\r\nT:1:6:6\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:MILITARY | REBEL\r\n\r\nN:Galactic Imperium\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nF:IMPERIUM\r\nP:3:BONUS_MILITARY | AGAINST_REBEL:4:0\r\nV:2:REBEL_MILITARY:N/A\r\nV:1:MILITARY:N/A\r\n\r\nN:Trade League\r\nT:2:6:0\r\nE@0:1\r\n#E:1:1:1:1:1\r\nP:4:TRADE_ANY:1:0\r\nP:4:TRADE_ACTION:0:0\r\nV:2:DEVEL_TRADE:N/A\r\nV:1:WORLD_TRADE:N/A\r\n\r\nN:Mining World\r\nT:1:3:2\r\nE@0:1\r\n#E:1:1:1:1:1\r\nG:RARE\r\nP:5:PRODUCE:0:0\r\nP:5:DRAW_IF:1:0\r\n\r\n#\r\n# First expansion: The Gathering Storm\r\n#\r\n\r\nN:Separatist Colony\r\nT:1:2:1\r\nE@1:1\r\n#E:0:1:1:1:0\r\nF:START | START_RED\r\nP:1:DRAW:2:0\r\nP:3:EXTRA_MILITARY:1:0\r\n\r\nN:Ancient Race\r\nT:1:2:1\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:GENE\r\nF:START | START_BLUE | WINDFALL | STARTHAND_3\r\n\r\nN:Damaged Alien Factory\r\nT:1:3:2\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:ALIEN\r\nF:START | START_RED | MILITARY | ALIEN\r\nP:5:DISCARD_HAND | PRODUCE:0:0\r\n\r\nN:Doomed World\r\nT:1:1:-1\r\nE@1:1\r\n#E:0:1:1:1:0\r\nF:START | START_BLUE\r\nP:1:DRAW:1:0\r\nP:3:DISCARD | REDUCE_ZERO:0:0\r\n\r\nN:Terraforming Guild\r\nT:2:6:0\r\nE@1:1\r\n#E:0:1:1:1:0\r\nF:TERRAFORMING\r\nP:3:DRAW_AFTER:1:0\r\nP:5:WINDFALL_ANY:0:0\r\nV:2:NOVELTY_WINDFALL:N/A\r\nV:2:RARE_WINDFALL:N/A\r\nV:2:GENE_WINDFALL:N/A\r\nV:2:ALIEN_WINDFALL:N/A\r\nV:2:TERRAFORMING_FLAG:N/A\r\n\r\nN:Galactic Genome Project\r\nT:2:6:0\r\nE@1:1\r\n#E:0:1:1:1:0\r\nP:4:CONSUME_GENE | CONSUME_TWO | GET_VP:3:1\r\nV:2:GENE_PRODUCTION:N/A\r\nV:2:GENE_WINDFALL:N/A\r\nV:3:NAME:Genetics Lab\r\n\r\nN:Space Mercenaries\r\nT:2:1:0\r\nE@1:2\r\n#E:0:2:2:2:0\r\nP:3:EXTRA_MILITARY:1:0\r\nP:3:MILITARY_HAND:2:0\r\n\r\nN:Improved Logistics\r\nT:2:3:2\r\nE@1:2\r\n#E:0:2:2:2:0\r\nP:3:PLACE_TWO:0:0\r\n\r\nN:Deserted Alien World\r\nT:1:1:2\r\nE@1:1\r\n#E:0:1:1:1:0\r\nF:ALIEN\r\nP:1:DRAW:1:0\r\nP:3:REDUCE | ALIEN:2:0\r\nP:3:BONUS_MILITARY | ALIEN:2:0\r\n\r\nN:Rebel Colony\r\nT:1:4:4\r\nE@1:1\r\n#E:0:1:1:1:0\r\nF:MILITARY | REBEL\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\n\r\nN:Clandestine Uplift Lab\r\nT:1:3:2\r\nE@1:1\r\n#E:0:1:1:1:0\r\nF:MILITARY | UPLIFT | CHROMO\r\nP:1:DRAW:1:0\r\nP:4:TRADE_GENE | TRADE_BONUS_CHROMO:0:0\r\nP:4:CONSUME_ANY | GET_VP | GET_CARD:1:1\r\n\r\nN:Imperium Lords\r\nT:2:6:0\r\nE@1:1\r\n#E:0:1:1:1:0\r\nF:IMPERIUM\r\nP:5:DRAW_MILITARY:1:0\r\nV:2:IMPERIUM_FLAG:N/A\r\nV:1:MILITARY:N/A\r\n\r\nN:Smuggling Lair\r\nT:1:1:1\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:RARE\r\nF:MILITARY | WINDFALL\r\nP:4:CONSUME_ANY | GET_2_CARD:1:1\r\n\r\nN:Volcanic World\r\nT:1:2:1\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:RARE\r\nP:5:PRODUCE:0:0\r\n\r\nN:Rebel Sympathizers\r\nT:1:1:1\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:NOVELTY\r\nF:MILITARY | REBEL | WINDFALL\r\nP:5:DRAW_IF:1:0\r\n\r\nN:Galactic Bazaar\r\nT:1:3:2\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:NOVELTY\r\nF:WINDFALL\r\nP:4:TRADE_NOVELTY:1:0\r\nP:4:DISCARD_HAND | GET_VP:1:1\r\n\r\nN:Galactic Studios\r\nT:1:5:3\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:NOVELTY\r\nP:4:CONSUME_ANY | GET_VP | GET_CARD:1:1\r\nP:5:PRODUCE:0:0\r\nP:5:DRAW_IF:1:0\r\n\r\nN:Alien Toy Shop\r\nT:1:3:1\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:ALIEN\r\nF:WINDFALL | ALIEN\r\nP:4:CONSUME_ALIEN | CONSUME_THIS | GET_VP:2:1\r\n\r\nN:Hive World\r\nT:1:3:2\r\nE@1:1\r\n#E:0:1:1:1:0\r\nG:GENE\r\nF:MILITARY\r\nP:5:PRODUCE:0:0\r\n\r\n#\r\n# Second expansion: Rebel vs Imperium\r\n#\r\n\r\nN:Rebel Cantina\r\nT:1:2:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:START | START_RED | REBEL\r\nP:3:PAY_MILITARY:0:0\r\nP:5:DRAW_REBEL:1:0\r\n\r\nN:Galactic Developers\r\nT:1:2:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:START | START_BLUE\r\nP:2:DRAW:1:0\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\n\r\nN:Imperium Warlord\r\nT:1:2:2\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:START | START_RED | IMPERIUM\r\nP:1:DRAW:1:0\r\nP:3:EXTRA_MILITARY:1:0\r\nP:3:BONUS_MILITARY | AGAINST_REBEL:1:0\r\n\r\nN:Rebel Stronghold\r\nT:1:9:9\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:REBEL | MILITARY | PRESTIGE\r\n\r\nN:Alien Data Repository\r\nT:1:7:6\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:ALIEN\r\nF:ALIEN\r\nP:1:DISCARD_ANY:0:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Alien Monolith\r\nT:1:8:8\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:ALIEN\r\nF:ALIEN | WINDFALL | MILITARY | PRESTIGE\r\n\r\nN:Imperium Blaster Gem Consortium\r\nT:1:6:4\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:RARE\r\nF:IMPERIUM | PRESTIGE\r\nP:3:EXTRA_MILITARY:1:0\r\nP:4:CONSUME_RARE | GET_VP | GET_2_CARD:1:1\r\nP:5:PRODUCE:0:0\r\n\r\nN:Gene Designers\r\nT:1:6:3\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:GENE\r\nP:4:CONSUME_GENE | GET_VP | GET_CARD:1:3\r\nP:5:PRODUCE:0:0\r\n\r\nN:Imperium Seat\r\nT:2:6:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:IMPERIUM\r\nP:3:BONUS_MILITARY | AGAINST_REBEL:1:0\r\nP:3:TAKEOVER_REBEL:0:0\r\nV:2:IMPERIUM_FLAG:N/A\r\nV:2:REBEL_MILITARY:N/A\r\n\r\nN:Rebel Alliance\r\nT:2:6:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:REBEL\r\nP:3:PAY_MILITARY | AGAINST_REBEL:2:0\r\nP:3:TAKEOVER_IMPERIUM:2:0\r\nV:2:REBEL_FLAG:N/A\r\nV:1:MILITARY:N/A\r\n\r\nN:Uplift Code\r\nT:2:6:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:UPLIFT | PRESTIGE\r\nP:5:DRAW_CHROMO:2:0\r\nV:3:CHROMO_FLAG:N/A\r\nV:2:UPLIFT_FLAG:N/A\r\n\r\nN:Galactic Exchange\r\nT:2:6:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nP:4:CONSUME_N_DIFF | GET_VP | GET_CARD:1:1\r\nV:0:KIND_GOOD:N/A\r\nV:3:NAME:Diversified Economy\r\n\r\nN:Galactic Bankers\r\nT:2:6:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:PRESTIGE\r\nP:2:DRAW:1:0\r\nP:4:DISCARD_HAND | GET_VP:1:2\r\nV:2:NAME:Interstellar Bank\r\nV:2:NAME:Investment Credits\r\nV:2:NAME:Gambling World\r\nV:1:DEVEL:N/A\r\n\r\nN:Prospecting Guild\r\nT:2:6:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nP:1:DISCARD_ANY:0:0\r\nP:4:TRADE_ANY:1:0\r\nP:4:CONSUME_RARE | GET_VP | GET_CARD:1:1\r\nV:2:RARE_PRODUCTION:N/A\r\nV:2:RARE_WINDFALL:N/A\r\nV:1:WORLD:N/A\r\nV:1:TERRAFORMING_FLAG:N/A\r\n\r\nN:Pan-Galactic Research\r\nT:2:6:4\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:DISCARD_TO_12\r\nP:1:DRAW:2:0\r\nP:1:KEEP:1:0\r\nP:2:REDUCE:1:0\r\nP:5:DRAW:2:0\r\n\r\nN:Rebel Pact\r\nT:2:1:1\r\nE@2:2\r\n#E:0:0:2:2:0\r\nF:REBEL\r\nP:1:DISCARD_ANY:0:0\r\nP:3:PAY_DISCOUNT:2:0\r\nP:3:TAKEOVER_DEFENSE:0:0\r\n\r\nN:Imperium Cloaking Technology\r\nT:2:1:1\r\nE@2:2\r\n#E:0:0:2:2:0\r\nF:IMPERIUM\r\nP:3:DISCARD_CONQUER_SETTLE | NO_TAKEOVER:2:0\r\nP:3:DISCARD | TAKEOVER_MILITARY:0:0\r\n\r\nN:Imperium Troops\r\nT:2:1:1\r\nE@2:2\r\n#E:0:0:2:2:0\r\nF:IMPERIUM\r\nP:3:EXTRA_MILITARY:1:0\r\nP:3:BONUS_MILITARY | AGAINST_REBEL:1:0\r\n\r\nN:R&D Crash Program\r\nT:2:1:0\r\nE@2:2\r\n#E:0:0:2:2:0\r\nP:2:DISCARD_REDUCE:3:0\r\nP:4:DISCARD_HAND | GET_CARD:1:1\r\n\r\nN:Mercenary Fleet\r\nT:2:3:1\r\nE@2:2\r\n#E:0:0:2:2:0\r\nP:3:EXTRA_MILITARY:2:0\r\nP:3:MILITARY_HAND:2:0\r\n\r\nN:Galactic Advertisers\r\nT:2:3:2\r\nE@2:2\r\n#E:0:0:2:2:0\r\nP:4:TRADE_ANY:1:0\r\nP:4:DRAW:1:0\r\n\r\nN:Galactic Salon\r\nT:2:4:2\r\nE@2:2\r\n#E:0:0:2:2:0\r\nP:4:VP:1:0\r\n\r\nN:Primitive Rebel World\r\nT:1:1:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:NOVELTY\r\nF:REBEL | MILITARY | WINDFALL\r\nP:3:MILITARY_HAND:1:0\r\n\r\nN:Devolved Uplift Race\r\nT:1:1:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:NOVELTY\r\nF:UPLIFT | MILITARY | CHROMO\r\nP:5:PRODUCE:0:0\r\n\r\nN:Smuggling World\r\nT:1:1:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:NOVELTY\r\nP:1:DISCARD_ANY:0:0\r\nP:3:REDUCE | NOVELTY:1:0\r\nP:3:BONUS_MILITARY | NOVELTY:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Dying Colony\r\nT:1:0:0\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:NOVELTY\r\nF:WINDFALL\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\n\r\nN:Insect Uplift Race\r\nT:1:2:2\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:GENE\r\nF:WINDFALL | UPLIFT | MILITARY | CHROMO\r\n\r\nN:Abandoned Alien Uplift Camp\r\nT:1:1:2\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:ALIEN | UPLIFT\r\nP:1:DRAW:1:0\r\nP:3:REDUCE | GENE:2:0\r\nP:3:BONUS_MILITARY | GENE:2:0\r\n\r\nN:Blaster Runners\r\nT:1:1:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:MILITARY\r\nP:1:DISCARD_ANY:0:0\r\nP:3:EXTRA_MILITARY:1:0\r\n\r\nN:Trading Outpost\r\nT:1:1:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nP:1:DISCARD_ANY:0:0\r\nP:4:TRADE_ANY:2:0\r\n\r\nN:Gambling World\r\nT:1:1:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\nP:4:ANTE_CARD:0:0\r\n\r\nN:Alien Uplift Center\r\nT:1:5:4\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:ALIEN\r\nF:ALIEN | UPLIFT | MILITARY | WINDFALL\r\nP:1:DRAW:1:0\r\nP:3:REDUCE | GENE:2:0\r\nP:3:BONUS_MILITARY | GENE:2:0\r\n\r\nN:Universal Symbionts\r\nT:1:3:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:GENE\r\nF:WINDFALL\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\nP:5:WINDFALL_GENE | NOT_THIS:0:0\r\n\r\nN:Interstellar Prospectors\r\nT:1:3:2\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:RARE\r\nP:1:DRAW:1:0\r\nP:5:PRODUCE:0:0\r\nP:5:WINDFALL_RARE:0:0\r\n\r\nN:Rebel Convict Mines\r\nT:1:2:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:RARE\r\nF:MILITARY | WINDFALL | REBEL\r\nP:3:MILITARY_HAND:1:0\r\n\r\nN:Gem Smugglers\r\nT:1:3:1\r\nE@2:1\r\n#E:0:0:1:1:0\r\nG:RARE\r\nF:WINDFALL\r\nP:1:DISCARD_ANY:0:0\r\nP:3:REDUCE | RARE:1:0\r\nP:3:BONUS_MILITARY | RARE:1:0\r\n\r\nN:Hidden Fortress\r\nT:1:5:3\r\nE@2:1\r\n#E:0:0:1:1:0\r\nF:MILITARY | GAME_END_14\r\nP:3:EXTRA_MILITARY | PER_MILITARY:1:0\r\n\r\n#\r\n# Third expansion: The Brink of War\r\n#\r\n\r\nN:Galactic Scavengers\r\nT:1:2:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:NOVELTY\r\nF:WINDFALL | START | START_BLUE | START_SAVE\r\nP:2:SAVE_COST:1:0\r\nP:3:SAVE_COST:1:0\r\nP:5:TAKE_SAVED:0:0\r\n\r\nN:Uplift Mercenary Force\r\nT:1:2:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:START | START_RED | UPLIFT | CHROMO\r\nP:1:DRAW:1:0\r\nP:3:EXTRA_MILITARY | PER_CHROMO:1:0\r\nP:3:MILITARY_HAND:1:0\r\n\r\nN:Alien Research Team\r\nT:1:2:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:START | START_BLUE | ALIEN\r\nP:1:DRAW:2:0\r\nP:3:REDUCE | ALIEN:1:0\r\nP:3:PAY_MILITARY | ALIEN:0:0\r\nP:4:CONSUME_ALIEN | GET_PRESTIGE:1:1\r\n\r\nN:Rebel Freedom Fighters\r\nT:1:3:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:START | START_RED | MILITARY | REBEL\r\nP:1:DRAW:1:0\r\nP:2:PRESTIGE_REBEL:1:0\r\nP:3:EXTRA_MILITARY:1:0\r\nP:3:IMPERIUM_MILITARY:-2:0\r\nP:3:PRESTIGE_REBEL:1:0\r\n\r\nN:Imperium Capital\r\nT:1:6:6\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:IMPERIUM | PRESTIGE\r\nP:3:PRESTIGE_REBEL:1:0\r\nP:4:CONSUME_ANY | CONSUME_TWO | GET_PRESTIGE:2:1\r\n\r\nN:Alien Oort Cloud Refinery\r\nT:1:0:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:ANY\r\nF:ALIEN | WINDFALL\r\nP:4:NO_TRADE:0:0\r\n\r\nN:Golden Age of Terraforming\r\nT:2:6:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:TERRAFORMING | PRESTIGE\r\nP:2:CONSUME_RARE:2:0\r\nP:3:CONSUME_GENE | REDUCE:3:0\r\nP:3:AUTO_PRODUCE:0:0\r\nV:2:TERRAFORMING_FLAG:N/A\r\nV:1:SIX_DEVEL:N/A\r\nV:1:NOVELTY_PRODUCTION:N/A\r\nV:1:RARE_PRODUCTION:N/A\r\nV:1:GENE_PRODUCTION:N/A\r\nV:1:ALIEN_PRODUCTION:N/A\r\n\r\nN:Universal Peace Institute\r\nT:2:6:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:PRESTIGE\r\nP:3:REDUCE:2:0\r\nP:3:EXTRA_MILITARY:-2:0\r\nP:4:CONSUME_ANY | CONSUME_TWO | GET_PRESTIGE | GET_VP | GET_CARD:1:1\r\nV:1:NEGATIVE_MILITARY:N/A\r\nV:1:MILITARY:N/A\r\nV:2:NAME:Pan-Galactic Mediator\r\n\r\nN:Interstellar Casus Belli\r\nT:2:4:0\r\nE@3:2\r\n#E:0:0:0:2:0\r\nP:3:TAKEOVER_PRESTIGE:2:0\r\nP:4:CONSUME_PRESTIGE | GET_VP:3:1\r\n\r\nN:Imperium Fuel Depot\r\nT:1:3:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:RARE\r\nF:MILITARY | IMPERIUM\r\nP:3:EXPLORE_AFTER:2:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Imperium Invasion Fleet\r\nT:2:5:3\r\nE@3:2\r\n#E:0:0:0:2:0\r\nF:IMPERIUM | PRESTIGE\r\nP:3:EXTRA_MILITARY:3:0\r\nP:3:BONUS_MILITARY | AGAINST_REBEL:1:0\r\nP:3:DISCARD | CONQUER_SETTLE | PRESTIGE:0:0\r\n\r\nN:Uplift Gene Breeders\r\nT:1:3:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:GENE\r\nF:UPLIFT\r\nP:5:PRODUCE:0:0\r\nP:5:PRESTIGE_IF:1:0\r\n\r\nN:Pan-Galactic Security Council\r\nT:1:1:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:PRESTIGE\r\nP:1:DRAW:1:0\r\nP:3:PREVENT_TAKEOVER:0:0\r\nP:4:DISCARD_HAND | CONSUME_TWO | GET_PRESTIGE:1:1\r\n\r\nN:Imperium Planet Buster\r\nT:2:9:9\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:IMPERIUM | PRESTIGE\r\nP:3:EXTRA_MILITARY:3:0\r\nP:3:TAKEOVER_MILITARY | DESTROY:2:0\r\n\r\nN:Federation Capital\r\nT:1:3:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nP:2:PRESTIGE_SIX:1:0\r\nP:4:CONSUME_ANY | GET_PRESTIGE:1:1\r\nV:1:PRESTIGE:N/A\r\n\r\nN:Mining Mole Uplift Race\r\nT:1:3:2\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:RARE\r\nF:UPLIFT | CHROMO\r\nP:1:DRAW:1:0\r\nP:3:REDUCE | RARE:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Pan-Galactic Mediator\r\nT:2:1:1\r\nE@3:2\r\n#E:0:0:0:2:0\r\nF:PRESTIGE\r\nP:1:DRAW:1:0\r\nP:3:EXTRA_MILITARY:-1:0\r\nP:3:PAY_PRESTIGE:1:0\r\n\r\nN:Alien Departure Point\r\nT:1:9:9\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:ALIEN\r\nF:ALIEN | PRESTIGE\r\nP:1:DISCARD_PRESTIGE:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Rebel Troops\r\nT:2:2:1\r\nE@3:2\r\n#E:0:0:0:2:0\r\nF:REBEL\r\nP:3:EXTRA_MILITARY:1:0\r\nP:3:MILITARY_HAND:1:0\r\nP:4:CONSUME_ANY | GET_2_CARD:1:1\r\n\r\nN:Retrofit & Salvage, Inc\r\nT:1:2:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:NOVELTY\r\nF:TAKE_DISCARDS\r\nP:2:REDUCE:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Uplift Revolt World\r\nT:1:4:2\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:GENE\r\nF:MILITARY | WINDFALL | UPLIFT | CHROMO\r\nP:3:EXTRA_MILITARY | PER_CHROMO:1:0\r\n\r\nN:Terraforming Engineers\r\nT:2:3:2\r\nE@3:2\r\n#E:0:0:0:2:0\r\nF:TERRAFORMING\r\nP:1:DRAW:1:0\r\nP:3:REDUCE:1:0\r\nP:3:UPGRADE_WORLD:3:0\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\n\r\nN:Alien Tourist Attraction\r\nT:1:5:3\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:NOVELTY\r\nF:ALIEN | WINDFALL | PRESTIGE\r\nP:1:DRAW:1:0\r\nP:4:CONSUME_ANY | GET_VP | GET_2_CARD:1:1\r\n\r\nN:Lifeforms, Inc\r\nT:1:3:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:GENE\r\nP:3:CONSUME_GENE | REDUCE:3:0\r\nP:5:PRODUCE:0:0\r\nP:5:DISCARD_HAND | WINDFALL_GENE:1:0\r\n\r\nN:Rebel Council\r\nT:1:8:8\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:REBEL | MILITARY | PRESTIGE\r\nP:2:PRESTIGE_REBEL:1:0\r\nP:4:CONSUME_ANY | GET_VP:1:1\r\n\r\nN:Galactic Markets\r\nT:2:4:2\r\nE@3:2\r\n#E:0:0:0:2:0\r\nF:PRESTIGE\r\nP:3:DRAW_AFTER:1:0\r\nP:4:CONSUME_ANY | GET_VP:1:3\r\nP:5:DRAW:1:0\r\n\r\nN:Alien Booby Trap\r\nT:1:1:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:MILITARY | ALIEN | PRESTIGE\r\nP:3:CONSUME_PRESTIGE | EXTRA_MILITARY:3:1\r\nP:5:DISCARD_HAND | WINDFALL_ALIEN:1:0\r\n\r\nN:Rebel Sneak Attack\r\nT:2:2:1\r\nE@3:2\r\n#E:0:0:0:2:0\r\nF:REBEL\r\nP:1:DISCARD_ANY:0:0\r\nP:3:DISCARD | PLACE_MILITARY:0:0\r\nP:3:DISCARD | TAKEOVER_IMPERIUM:2:0\r\n\r\nN:Pan-Galactic Hologrid\r\nT:2:6:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nP:1:DISCARD_PRESTIGE:1:0\r\nP:3:DRAW_AFTER:1:0\r\nP:4:TRADE_NOVELTY:2:0\r\nV:2:NOVELTY_PRODUCTION:N/A\r\nV:2:NOVELTY_WINDFALL:N/A\r\nV:2:NAME:Expanding Colony\r\nV:1:WORLD:N/A\r\n\r\nN:Alien Burial Site\r\nT:1:2:1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:NOVELTY\r\nF:ALIEN | PRESTIGE\r\nP:4:TRADE_NOVELTY:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Pan-Galactic Affluence\r\nT:2:6:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:PRESTIGE\r\nP:2:PRESTIGE:1:0\r\nP:4:CONSUME_ANY | CONSUME_TWO | GET_PRESTIGE | GET_VP:1:1\r\nP:5:DRAW_MOST_PRODUCED:1:0\r\nV:1:PRESTIGE:N/A\r\nV:2:NAME:Export Duties\r\nV:2:NAME:Galactic Renaissance\r\nV:2:NAME:Terraformed World\r\n\r\nN:Rebel Fuel Refinery\r\nT:1:4:2\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:RARE\r\nF:REBEL | MILITARY | WINDFALL | PRESTIGE\r\nP:3:CONSUME_RARE | EXTRA_MILITARY:2:0\r\n\r\nN:Psi-Crystal World\r\nT:1:5:3\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:RARE\r\nF:WINDFALL | PRESTIGE | SELECT_LAST\r\nP:1:DRAW:1:0\r\nP:3:EXTRA_MILITARY:-1:0\r\n\r\nN:Ravaged Uplift World\r\nT:1:2:-1\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:GENE\r\nF:WINDFALL | UPLIFT | CHROMO\r\nP:3:PAY_MILITARY | AGAINST_CHROMO:0:0\r\nP:5:PRESTIGE_MOST_CHROMO:1:0\r\n\r\nN:Galactic Power Brokers\r\nT:2:5:3\r\nE@3:2\r\n#E:0:0:0:2:0\r\nF:PRESTIGE\r\nP:2:EXPLORE:2:0\r\nP:4:CONSUME_PRESTIGE | GET_3_CARD:1:1\r\n\r\nN:Alien Cornucopia\r\nT:2:6:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:ALIEN\r\nP:3:PRODUCE_PRESTIGE:1:0\r\nP:5:DRAW:1:0\r\nV:2:ALIEN_FLAG:N/A\r\nV:1:NOVELTY_PRODUCTION:N/A\r\nV:1:RARE_PRODUCTION:N/A\r\nV:1:GENE_PRODUCTION:N/A\r\n\r\nN:Information Hub\r\nT:1:3:2\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:NOVELTY\r\nF:MILITARY | PRESTIGE\r\nP:1:DISCARD_ANY:0:0\r\nP:2:EXPLORE:1:0\r\nP:5:PRODUCE:0:0\r\n\r\nN:Alien Guardian\r\nT:1:9:9\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:ALIEN\r\nF:ALIEN | MILITARY | WINDFALL | PRESTIGE\r\nP:4:DISCARD_HAND | CONSUME_TWO | GET_PRESTIGE:1:1\r\n\r\nN:Universal Exports\r\nT:1:3:2\r\nE@3:1\r\n#E:0:0:0:1:0\r\nG:NOVELTY\r\nP:1:DISCARD_ANY:0:0\r\nP:4:TRADE_ANY:1:0\r\nP:5:PRODUCE:0:0\r\nP:5:DISCARD_HAND | WINDFALL_ANY:1:0\r\n\r\nN:Black Hole Miners\r\nT:1:4:0\r\nE@3:1\r\n#E:0:0:0:1:0\r\nF:PRESTIGE | DISCARD_TO_12\r\nP:5:DRAW:3:0\r\n]]\r\n\r\n-- key: name, value: tooltip\r\nactivePowers = {\r\n     [\"1\"] = {\r\n     },\r\n     [\"2\"] = {\r\n          DISCARD_REDUCE = \"Discard this card to reduce cost.\"\r\n     },\r\n     [\"3\"] = {\r\n          DISCARD = \"Discard from tableau to \",\r\n          DISCARD_CONQUER_SETTLE = \"Discard from tableau to place normal world as military world.\",\r\n          PAY_MILITARY = \"Place military world as normal world.\",\r\n          MILITARY_HAND = \"Discard from hand for bonus military.\",\r\n          TAKEOVER_IMPERIUM = \"Takeover military world from IMPERIUM tableau.\",\r\n          TAKEOVER_REBEL = \"Takeover REBEL military world.\",\r\n          CONSUME_PRESTIGE = \"Discard prestige to \",\r\n          TAKEOVER_PRESTIGE = \"Spend prestige to takeover military world.\"\r\n     },\r\n     [\"4\"] = {\r\n          TRADE_ACTION = \"Sell a good.\",\r\n          CONSUME_ANY = \"Consume any good.\",\r\n          CONSUME_NOVELTY = \"Consume Novelty good.\",\r\n          CONSUME_RARE = \"Consume Rare good.\",\r\n          CONSUME_GENE = \"Consume Genes good.\",\r\n          CONSUME_ALIEN = \"Consume Alien good.\",\r\n          CONSUME_3_DIFF = \"Consume 3 different goods.\",\r\n          CONSUME_N_DIFF = \"Consume different goods.\",\r\n          CONSUME_ALL = \"Consume all goods.\",\r\n          DISCARD_HAND = \"Discard from hand.\",\r\n          DRAW = \"Draw card(s).\",\r\n          ANTE_CARD = \"Gamble draw.\",\r\n          DRAW_LUCKY = \"Gamble draw.\",\r\n          VP = \"Gain VP.\"\r\n     },\r\n     [\"5\"] = {\r\n          DRAW = \"Draw card(s)\",\r\n          DRAW_MILITARY = \"Draw card(s)\",\r\n          WINDFALL_ANY = \"Produce good on any windfall world.\",\r\n          WINDFALL_NOVELTY = \"Produce good on Novelty windfall world.\",\r\n          WINDFALL_RARE = \"Produce good on Rare windfall world.\",\r\n          WINDFALL_GENE = \"Produce good on Genes windfall world.\",\r\n          WINDFALL_ALIEN = \"Produce good on Alien windfall world.\",\r\n          DRAW_WORLD_GENE = \"Draw 1 card for each Genes world in tableau.\",\r\n          DRAW_EACH_NOVELTY = \"Draw 1 card for each Novelty good you produced.\",\r\n          DRAW_EACH_ALIEN = \"Draw 1 card for each Alien good you produced.\",\r\n          DRAW_DIFFERENT = \"Draw 1 card for each kind of good you produced.\",\r\n          DISCARD_HAND = \"Discard from hand to use.\",\r\n          DRAW_CHROMO = \"Draw 2 cards for each Gene world w/ Chromosome in tableau.\",\r\n          DRAW_REBEL = \"Draw 1 card for each Rebel world in tableau.\"\r\n     }\r\n}\r\n\r\nsubtooltip = {\r\n     REDUCE_ZERO = \"settle normal world (non-Alien) for free.\",\r\n     EXTRA_MILITARY = \"gain extra military.\",\r\n     TAKEOVER_MILITARY = \"perform takeover.\"\r\n}\r\n\r\ntakeoverPowers = {\r\n     [\"TAKEOVER_MILITARY\"] = 1,\r\n     [\"TAKEOVER_REBEL\"] = 1,\r\n     [\"TAKEOVER_IMPERIUM\"] = 1,\r\n     [\"TAKEOVER_PRESTIGE\"] = 1\r\n}\r\n\r\nfunction loadData(expansions)\r\n     local tbl = {}\r\n     local cardInfo = {}\r\n\r\n     for line in magiclines(cardtxt) do\r\n\r\n          -- skip comments\r\n          if line:sub(1, 1) == \"#\" or line:len() <= 0 then\r\n               goto endloop\r\n          end\r\n\r\n          do\r\n               local code = line:sub(1,1)\r\n\r\n               -- new card\r\n               if code == \"N\" then\r\n                    cardInfo = {}\r\n                    cardInfo.name = line:sub(3, line:len())\r\n                    cardInfo.passiveCount = {[\"1\"]=0,[\"2\"]=0,[\"3\"]=0,[\"4\"]=0,[\"5\"]=0}\r\n                    cardInfo.passivePowers = {}\r\n                    cardInfo.activeCount = {[\"1\"]=0,[\"2\"]=0,[\"3\"]=0,[\"4\"]=0,[\"5\"]=0}\r\n                    cardInfo.activePowers = {}\r\n                    cardInfo.flags = {}\r\n                    tbl[cardInfo.name] = cardInfo\r\n               -- card type (world or development), cost, and vp\r\n               elseif code == \"T\" then\r\n                    local tokens = split(line, \":\")\r\n                    cardInfo.type = tonumber(tokens[2])\r\n                    cardInfo.cost = tonumber(tokens[3])\r\n                    cardInfo.vp = tonumber(tokens[4])\r\n               -- expansion (need only the first value)\r\n               elseif code == \"E\" then\r\n                    cardInfo.expansion = line:sub(3,3)\r\n               -- flags\r\n               elseif code == \"F\" then\r\n                    local tokens = split(all_trim(line:sub(3, line:len())),\"|\")\r\n                    local flags = {}\r\n                    for i=1, #tokens do\r\n                         flags[tokens[i]] = true\r\n                    end\r\n                    cardInfo.flags = flags\r\n               -- goodtype\r\n               elseif code == \"G\" then\r\n                    cardInfo.goods = line:sub(3, line:len())\r\n               -- powers\r\n               elseif code == \"P\" then\r\n                    local tokens = split(line,\":\")\r\n                    local power = {}\r\n                    local phase = tokens[2]\r\n\r\n                    if not cardInfo.activePowers[phase] then\r\n                         cardInfo.activePowers[phase] = {}\r\n                    end\r\n                    if not cardInfo.passivePowers[phase] then\r\n                         cardInfo.passivePowers[phase] = {}\r\n                    end\r\n\r\n                    power.codes = split(all_trim(tokens[3]),\"|\")\r\n                    power.name = power.codes[1]\r\n                    power.strength = tonumber(tokens[4])\r\n                    power.times = tonumber(tokens[5])\r\n\r\n                    local newCodes = {}\r\n                    for i=2, #power.codes do\r\n                         newCodes[power.codes[i]] = true\r\n                    end\r\n\r\n                    power.codes = newCodes\r\n\r\n                    if activePowers[phase][power.name] then\r\n                         cardInfo.activePowers[tokens[2]][power.name] = power\r\n                         cardInfo.activeCount[phase] = cardInfo.activeCount[phase] + 1\r\n                         power.index = cardInfo.activeCount[phase]\r\n                    else\r\n                         cardInfo.passivePowers[tokens[2]][power.name] = power\r\n                         cardInfo.passiveCount[phase] = cardInfo.passiveCount[phase] + 1\r\n                         power.index = cardInfo.passiveCount[phase]\r\n                    end\r\n               -- vp flags\r\n               elseif code == \"V\" then\r\n                    local tokens = split(line,\":\")\r\n                    local vpFlags = {}\r\n                    local type = tokens[3]\r\n                    local value = tonumber(tokens[2])\r\n                    local matchName = tokens[4]\r\n\r\n                    if cardInfo.vpFlags == nil then\r\n                         cardInfo.vpFlags = {}\r\n                    end\r\n\r\n                    if type == \"NAME\" then\r\n                         if not cardInfo.vpFlags[type] then\r\n                              cardInfo.vpFlags[type] = {}\r\n                         end\r\n\r\n                         cardInfo.vpFlags[type][#cardInfo.vpFlags[type] + 1] = {name = matchName, vp = value}\r\n                    else\r\n                         cardInfo.vpFlags[type] = value\r\n                    end\r\n               end\r\n          end\r\n\r\n          ::endloop::\r\n     end\r\n\r\n     return tbl\r\nend\nend)\nreturn __bundle_require(\"Global.-1.lua\")",
  "LuaScriptState": "{\"advanced2p\":false,\"currentPhaseIndex\":-1,\"drawDeck_GUID\":\"\",\"enforceRules\":true,\"gameStarted\":false,\"placeTwoPhase\":false,\"playerData\":{\"Blue\":{\"canConfirm\":true,\"canFlip\":false,\"canReady\":false,\"cardsAlreadyUsed\":[],\"forcedReady\":false,\"handCountSnapshot\":0,\"incomingGood\":false,\"index\":3,\"miscSelectedCards\":[],\"mustConsumeCount\":0,\"paidCost\":[],\"powersSnapshot\":{\"DISCARD\":2},\"prestigeChips\":[],\"prestigeCount\":0,\"produceCount\":[],\"recordedCards\":[],\"roundEndDiscardCount\":0,\"selectedCardPower\":\"\",\"selectedGoods\":[],\"tempMilitary\":0,\"usedPower\":false},\"Green\":{\"canConfirm\":true,\"canFlip\":false,\"canReady\":false,\"cardsAlreadyUsed\":[],\"forcedReady\":false,\"handCountSnapshot\":0,\"incomingGood\":false,\"index\":4,\"miscSelectedCards\":[],\"mustConsumeCount\":0,\"paidCost\":[],\"powersSnapshot\":{\"DISCARD\":2},\"prestigeChips\":[],\"prestigeCount\":0,\"produceCount\":[],\"recordedCards\":[],\"roundEndDiscardCount\":0,\"selectedCardPower\":\"\",\"selectedGoods\":[],\"tempMilitary\":0,\"usedPower\":false},\"Red\":{\"canConfirm\":true,\"canFlip\":false,\"canReady\":false,\"cardsAlreadyUsed\":[],\"forcedReady\":false,\"handCountSnapshot\":0,\"incomingGood\":false,\"index\":2,\"miscSelectedCards\":[],\"mustConsumeCount\":0,\"paidCost\":[],\"powersSnapshot\":{\"DISCARD\":2},\"prestigeChips\":[],\"prestigeCount\":0,\"produceCount\":[],\"recordedCards\":[],\"roundEndDiscardCount\":0,\"selectedCardPower\":\"\",\"selectedGoods\":[],\"tempMilitary\":0,\"usedPower\":false},\"Yellow\":{\"canConfirm\":true,\"canFlip\":false,\"canReady\":false,\"cardsAlreadyUsed\":[],\"forcedReady\":false,\"handCountSnapshot\":0,\"incomingGood\":false,\"index\":1,\"miscSelectedCards\":[],\"mustConsumeCount\":0,\"paidCost\":[],\"powersSnapshot\":{\"DISCARD\":2},\"prestigeChips\":[],\"prestigeCount\":0,\"produceCount\":[],\"recordedCards\":[],\"roundEndDiscardCount\":0,\"selectedCardPower\":\"\",\"selectedGoods\":[],\"tempMilitary\":0,\"usedPower\":false}},\"queuePlaceTwoPhase\":false,\"selectedPhases\":[],\"takeoverPhase\":false,\"useTakeovers\":true}",
  "XmlUI": "<Defaults>\r\n    <Panel class=\"main\" width=\"500\" height=\"500\" color=\"rgba(0,0,0,0.9)\" rectAlignment=\"MiddleRight\" offsetXY=\"-20 0\" padding=\"8 8 10 20\"\r\n        allowDragging=\"true\" returnToOriginalPositionWhenReleased=\"false\"/>\r\n    <Panel class=\"namebox\" preferredHeight=\"56\"/>\r\n    <Text class=\"title\" color=\"White\" fontSize=\"16\" />\r\n    <Text class=\"label\" color=\"White\" />\r\n    <Text class=\"name\" fontSize=\"16\"/>\r\n    <Text class=\"header\" color=\"White\" fontSize=\"16\" alignment=\"MiddleLeft\"/>\r\n    <ToggleGroup allowSwitchOff=\"true\" height=\"480\"/>\r\n    <ToggleButton preferredHeight=\"48\"/>\r\n    <ToggleButton class=\"selected\" color=\"rgb(0.4,0.8,1)\"/>\r\n    <ToggleButton class=\"disabled\" color=\"Red\" />\r\n    <VerticalLayout childForceExpandHeight=\"false\"/>\r\n    <Image preserveAspect=\"true\" rectAlignment=\"MiddleLeft\"/>\r\n    <Button class=\"prestigeAction\" preferredHeight=\"50\" color=\"#FFFFFF33\"/>\r\n    <Button tooltipPosition=\"Left\" tooltipBackgroundColor=\"rgb(0,0.05,0.1)\" tooltipFontSize=\"20\" tooltipWidth=\"300\" tooltipPadding=\"10\"/> \r\n</Defaults>\r\n<Image image=\"hex\" active=\"false\" />\r\n\r\n<Panel class=\"main\" visibility=\"Yellow\" id=\"takeoverMenu_Yellow\" active=\"false\">\r\n    <VerticalLayout>\r\n      <Panel preferredHeight=\"40\">\r\n        <Text class=\"title\" alignment=\"UpperCenter\">Potential Takeover Targets</Text>\r\n        <Text class=\"label\" alignment=\"LowerCenter\" color=\"Gray\">Target Name - [Your Military]vs[Target Military+Defense]</Text>\r\n      </Panel>\r\n      <Panel preferredHeight=\"50\">\r\n        <HorizontalLayout padding=\"0 20 0 0\">\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n        </HorizontalLayout>\r\n      </Panel>\r\n      <VerticalScrollView preferredHeight=\"400\" color=\"rgba(0,0,0,0)\">\r\n        <ToggleGroup>\r\n          <HorizontalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n          </HorizontalLayout>\r\n        </ToggleGroup>\r\n      </VerticalScrollView>\r\n    </VerticalLayout>\r\n</Panel>\r\n\r\n<Panel class=\"main\" visibility=\"Red\" id=\"takeoverMenu_Red\" active=\"false\">\r\n    <VerticalLayout>\r\n      <Panel preferredHeight=\"40\">\r\n        <Text class=\"title\" alignment=\"UpperCenter\">Potential Takeover Targets</Text>\r\n        <Text class=\"label\" alignment=\"LowerCenter\" color=\"Gray\">Target Name - [Your Military]vs[Target Military+Defense]</Text>\r\n      </Panel>\r\n      <Panel preferredHeight=\"50\">\r\n        <HorizontalLayout padding=\"0 20 0 0\">\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n        </HorizontalLayout>\r\n      </Panel>\r\n      <VerticalScrollView preferredHeight=\"400\" color=\"rgba(0,0,0,0)\">\r\n        <ToggleGroup>\r\n          <HorizontalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n          </HorizontalLayout>\r\n        </ToggleGroup>\r\n      </VerticalScrollView>\r\n    </VerticalLayout>\r\n</Panel>\r\n\r\n<Panel class=\"main\" visibility=\"Blue\" id=\"takeoverMenu_Blue\" active=\"false\">\r\n    <VerticalLayout>\r\n      <Panel preferredHeight=\"40\">\r\n        <Text class=\"title\" alignment=\"UpperCenter\">Potential Takeover Targets</Text>\r\n        <Text class=\"label\" alignment=\"LowerCenter\" color=\"Gray\">Target Name - [Your Military]vs[Target Military+Defense]</Text>\r\n      </Panel>\r\n      <Panel preferredHeight=\"50\">\r\n        <HorizontalLayout padding=\"0 20 0 0\">\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n        </HorizontalLayout>\r\n      </Panel>\r\n      <VerticalScrollView preferredHeight=\"400\" color=\"rgba(0,0,0,0)\">\r\n        <ToggleGroup>\r\n          <HorizontalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n          </HorizontalLayout>\r\n        </ToggleGroup>\r\n      </VerticalScrollView>\r\n    </VerticalLayout>\r\n</Panel>\r\n\r\n<Panel class=\"main\" visibility=\"Green\" id=\"takeoverMenu_Green\" active=\"false\">\r\n    <VerticalLayout>\r\n      <Panel preferredHeight=\"40\">\r\n        <Text class=\"title\" alignment=\"UpperCenter\">Potential Takeover Targets</Text>\r\n        <Text class=\"label\" alignment=\"LowerCenter\" color=\"Gray\">Target Name - [Your Military]vs[Target Military+Defense]</Text>\r\n      </Panel>\r\n      <Panel preferredHeight=\"50\">\r\n        <HorizontalLayout padding=\"0 20 0 0\">\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n          <Panel class=\"namebox\"><Text class=\"name\"></Text></Panel>\r\n        </HorizontalLayout>\r\n      </Panel>\r\n      <VerticalScrollView preferredHeight=\"400\" color=\"rgba(0,0,0,0)\">\r\n        <ToggleGroup>\r\n          <HorizontalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n            <VerticalLayout>\r\n            </VerticalLayout>\r\n          </HorizontalLayout>\r\n        </ToggleGroup>\r\n      </VerticalScrollView>\r\n    </VerticalLayout>\r\n</Panel>\r\n\r\n<Panel id=\"prestigeSearchMenu\" class=\"main\" width=\"340\" height=\"890\" visibility=\"Brown\">\r\n  <VerticalLayout spacing=\"5\">\r\n    <Text class=\"title\">Prestige / Search Menu</Text>\r\n    <Text class=\"header\">Prestige Actions</Text>\r\n    <VerticalLayout>\r\n    <Button class=\"prestigeAction\" tooltip=\"Prestige Explore +5: draw 13, keep 2, combine draws with your hand then discard (assuming no other powers).\"><Image image=\"prestige explore 5\"/></Button>\r\n    <Button class=\"prestigeAction\" tooltip=\"Prestige Explore +1,+1: draw 9, keep 3, combine draws with your hand then discard (assuming no other powers).\"><Image image=\"prestige explore 1\"/></Button>\r\n    <Button class=\"prestigeAction\" tooltip=\"Prestige Develop: -3 cost to place a development.\"><Image image=\"prestige dev\"/></Button>\r\n    <Button class=\"prestigeAction\" tooltip=\"Prestige Settle: -3 cost to play worlds and +2 Military until end of phase. Draw a card if you settle.\"><Image image=\"prestige settle\"/></Button>\r\n    <Button class=\"prestigeAction\" tooltip=\"Prestige Consume ($): +3 trade bonus, x2 VP gain, then optionally discard up to 2 cards for 1 VP apiece.\" preferredHeight=\"100\"><Image image=\"prestige consume trade\"/></Button>\r\n    <Button class=\"prestigeAction\" tooltip=\"Prestige Consume (x2): x3 VP gain.\"><Image image=\"prestige consume x2\"/></Button>\r\n    <Button class=\"prestigeAction\" tooltip=\"Prestige Produce: draw 3 cards and produce goods on up to two windfall worlds.\"><Image image=\"prestige produce\"/></Button>\r\n    </VerticalLayout>\r\n    <Text class=\"header\">Search Actions</Text>\r\n    <GridLayout cellSize=\"160 75\" spacing=\"2\">\r\n      <Button tooltip=\"Developments that provide +1 or +2 Military. (Ignores specialized Military)\"><Image image=\"search mil dev\"/></Button>\r\n      <Button tooltip=\"1 or 2 defense military windfall worlds.\"><Image image=\"search military windfall\"/></Button>\r\n      <Button tooltip=\"1 or 2 (printed) cost windfall worlds.\"><Image image=\"search windfall\"/></Button>\r\n      <Button tooltip=\"Worlds (of any type) with a Chromosome symbol.\"><Image image=\"search chromo world\"/></Button>\r\n      <Button tooltip=\"Alien windfall or Alien production worlds.\"><Image image=\"search alien\"/></Button>\r\n      <Button tooltip=\"Cards with Consume powers that consume two or more goods.\"><Image image=\"search consume\"/></Button>\r\n      <Button tooltip=\"Military worlds with 5 or more defense.\"><Image image=\"search mil5 world\"/></Button>\r\n      <Button tooltip=\"6-cost developments.\"><Image image=\"search 6 dev\"/></Button>\r\n      <Button tooltip=\"Cards with Settle takeover powers or defense powers. (This category can be chosen is takeovers is on)\"><Image image=\"search takeover\"/></Button>\r\n    </GridLayout>\r\n  </VerticalLayout>\r\n</Panel>",
  "CustomUIAssets": [
    {
      "Name": "logo",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1843672500561185044/07046A0B4B53E52FCA44C45F7D3AEF2BA40E672D/"
    },
    {
      "Name": "title splash",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1843673153256618800/B2FE235A70C0EFA5A9F039F62ED35402312CAAC6/"
    },
    {
      "Name": "hex",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1867318528555934122/18304D146B5E1E065747DEE4BA3D9E7CD73539A4/"
    },
    {
      "Name": "search takeover",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075444996/FCE412D5CA59404EBB76B85295D014008CBFDCF3/"
    },
    {
      "Name": "search alien",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075444649/AFBF2A6496B170C719371F6CA208F6CB8FB6D359/"
    },
    {
      "Name": "search consume",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075444753/74D1FE82AC02664720079C4F7A65D9C9AECC7E5C/"
    },
    {
      "Name": "search mil dev",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075429068/A91119C9B41427FC1B50086A1C595B22C10E99FA/"
    },
    {
      "Name": "search 6 dev",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075444864/C0A68AF8B5AD8EE9401E99CB5AF44FD4702B3E98/"
    },
    {
      "Name": "search mil5 world",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075444928/DA7E053FAE54F3BCD6C661760855E563B593CB94/"
    },
    {
      "Name": "search windfall",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075445061/897B38E84C0770D7257FE171F34CBDA8973FC3A5/"
    },
    {
      "Name": "search military windfall",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075445125/AB0017081F93AB9610BE0C69544454901F563EAB/"
    },
    {
      "Name": "search chromo world",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075445210/5C4E2C59462089824566CBDB531ED8C618982459/"
    },
    {
      "Name": "prestige explore 5",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075634888/B859C72CE8055EC1BB3ADE450993604A254BDF3D/"
    },
    {
      "Name": "prestige explore 1",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075634840/14C8DF08C621E0925E6157FD21093CC2F0D48CAA/"
    },
    {
      "Name": "prestige dev",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075634791/19C39EADAA9488E823F5B2DC908FA9D733D00188/"
    },
    {
      "Name": "prestige settle",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075634975/8FDC73789880D9E88DFF93375E96831618D478EA/"
    },
    {
      "Name": "prestige consume trade",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075634725/F0EC9DE542EB7AC5EE5C72D88697CE737C464585/"
    },
    {
      "Name": "prestige consume x2",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075634652/B1AA7A44CCD0A016C88638116D097B235E66346F/"
    },
    {
      "Name": "prestige produce",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1930373612075634929/AAFC6CAB2696FFF892BA197FA21CE291257A30B8/"
    }
  ],
  "VectorLines": [
    {
      "points3": [
        {
          "x": -2.79,
          "y": 1.49,
          "z": -8.34
        },
        {
          "x": 2.77,
          "y": 1.49,
          "z": -8.34
        },
        {
          "x": 2.77,
          "y": 1.49,
          "z": -11.66
        },
        {
          "x": -2.79,
          "y": 1.49,
          "z": -11.66
        }
      ],
      "color": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": 8.31,
          "y": 1.49,
          "z": -2.79
        },
        {
          "x": 8.31,
          "y": 1.49,
          "z": 2.78
        },
        {
          "x": 11.7,
          "y": 1.49,
          "z": 2.78
        },
        {
          "x": 11.7,
          "y": 1.49,
          "z": -2.79
        }
      ],
      "color": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": 2.83,
          "y": 1.49,
          "z": 8.27
        },
        {
          "x": -2.78,
          "y": 1.49,
          "z": 8.27
        },
        {
          "x": -2.78,
          "y": 1.49,
          "z": 11.7
        },
        {
          "x": 2.83,
          "y": 1.49,
          "z": 11.7
        }
      ],
      "color": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": -8.31,
          "y": 1.49,
          "z": 2.78
        },
        {
          "x": -8.31,
          "y": 1.49,
          "z": -2.78
        },
        {
          "x": -11.67,
          "y": 1.49,
          "z": -2.78
        },
        {
          "x": -11.67,
          "y": 1.49,
          "z": 2.78
        }
      ],
      "color": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "thickness": 0.1,
      "loop": true
    }
  ],
  "ObjectStates": [
    {
      "GUID": "7556a6",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 5.0,
        "posZ": -29.43154,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 25.0,
        "scaleY": 7.002465,
        "scaleZ": 4.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2a2c18",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -29.43,
        "posY": 5.0,
        "posZ": -2.13220815E-07,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 25.0,
        "scaleY": 7.0,
        "scaleZ": 4.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "84db02",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 29.43,
        "posY": 5.0,
        "posZ": -4.805836E-07,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 25.0,
        "scaleY": 7.0,
        "scaleZ": 4.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0180e0",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -4.02862753E-07,
        "posY": 5.0,
        "posZ": 29.43,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 25.0,
        "scaleY": 7.0,
        "scaleZ": 4.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "afc863",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -12.6,
        "posY": -9.0,
        "posZ": -12.6,
        "rotX": 6.536436E-07,
        "rotY": -2.39176334E-05,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978795929/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c8edca",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -12.6,
        "posY": -9.0,
        "posZ": 12.6,
        "rotX": 6.536436E-07,
        "rotY": 90.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978795929/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "393bf7",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 12.6,
        "posY": -9.0,
        "posZ": 12.6,
        "rotX": 6.536436E-07,
        "rotY": 180.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978795929/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "12c65e",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 12.6,
        "posY": -9.0,
        "posZ": -12.6,
        "rotX": 6.536436E-07,
        "rotY": 270.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978795929/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "bd69bd",
      "Name": "Chinese_Checkers_Piece",
      "Transform": {
        "posX": 31.760004,
        "posY": -0.259998322,
        "posZ": -34.72,
        "rotX": 0.00190076465,
        "rotY": 180.0,
        "rotZ": 0.000379891542,
        "scaleX": 1.6499995,
        "scaleY": 1.6499995,
        "scaleZ": 1.6499995
      },
      "Nickname": "Flex Table Control",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 1,
      "LuaScript": "tableHeightOffset = -9\n\nfunction onSave()\n    saved_data = JSON.encode({tid=tableImageData, cd=checkData})\n    --saved_data = \"\"\n    return saved_data\nend\n\nfunction onload(saved_data)\n    --Loads the tracking for if the game has started yet\n    if saved_data ~= \"\" then\n         local loaded_data = JSON.decode(saved_data)\n         tableImageData = loaded_data.tid\n         checkData = loaded_data.cd\n    else\n        tableImageData = {}\n        checkData = {move=false, scale=false}\n    end\n\n    --Disables interactable status of objects with GUID in list\n    for _, guid in ipairs(ref_noninteractable) do\n        local obj = getObjectFromGUID(guid)\n        if obj then obj.interactable = false end\n    end\n\n    --Establish references to table parts\n    obj_leg1 = getObjectFromGUID(\"afc863\")\n    obj_leg2 = getObjectFromGUID(\"c8edca\")\n    obj_leg3 = getObjectFromGUID(\"393bf7\")\n    obj_leg4 = getObjectFromGUID(\"12c65e\")\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\n    obj_side_top = getObjectFromGUID(\"35b95f\")\n    obj_side_bot = getObjectFromGUID(\"f938a2\")\n    obj_side_lef = getObjectFromGUID(\"9f95fd\")\n    obj_side_rig = getObjectFromGUID(\"5af8f2\")\n\n    controlActive = false\n    --self.interactable = false\n    createOpenCloseButton()\nend\n\n\n\n--Activation/deactivation of control panel\n\n\n\n--Activated by clicking on\nfunction click_toggleControl(_, color)\n    if permissionCheck(color) then\n        if not controlActive then\n            --Activate control panel\n            controlActive = true\n            self.clearButtons()\n            createOpenCloseButton()\n            createSurfaceInput()\n            createSurfaceButtons()\n            createScaleInput()\n            createScaleButtons()\n        else\n            --Deactivate control panel\n            controlActive = false\n            self.clearButtons()\n            self.clearInputs()\n            createOpenCloseButton()\n\n        end\n    end\nend\n\n\n\n\n--Table surface control\n\n\n\n--Changes table surface\nfunction click_applySurface(_, color)\n    if permissionCheck(color) then\n        updateSurface()\n        broadcastToAll(\"New Table Image Applied\", {0.2,0.9,0.2})\n    end\nend\n\n--Saves table surface\nfunction click_saveSurface(_, color)\n    if permissionCheck(color) then\n        local nickname = self.getInputs()[1].value\n        local url = self.getInputs()[2].value\n        if nickname == \"\" then\n            --No nickname\n            broadcastToAll(\"Please supply a nickname for this save.\", {0.9,0.2,0.2})\n        else\n            --Nickname exists\n\n            if findInImageDataIndex(url, nickname) == nil then\n                --Save doesn't exist already\n                table.insert(tableImageData, {url=url, name=nickname})\n                broadcastToAll(\"Image URL saved to memory.\", {0.2,0.9,0.2})\n                --Refresh buttons\n                self.clearButtons()\n                createOpenCloseButton()\n                createSurfaceButtons()\n                createScaleButtons()\n            else\n                --Save exists already\n                broadcastToAll(\"Memory already contains a save with this Name or URL. Delete it first.\", {0.9,0.2,0.2})\n            end\n        end\n    end\nend\n\n--Loads table surface\nfunction click_loadMemory(_, color, index)\n    if permissionCheck(color) then\n        self.editInput({index=0, value=tableImageData[index].name})\n        self.editInput({index=1, value=tableImageData[index].url})\n        updateSurface()\n        broadcastToAll(\"Table Image Loaded\", {0.2,0.9,0.2})\n    end\nend\n\n--Deletes table surface\nfunction click_deleteMemory(_, color, index)\n    if permissionCheck(color) then\n        table.remove(tableImageData, index)\n        self.clearButtons()\n        createOpenCloseButton()\n        createSurfaceButtons()\n        createScaleButtons()\n        broadcastToAll(\"Element Removed from Memory\", {0.2,0.9,0.2})\n    end\nend\n\n--Updates surface from the values in the input field\nfunction updateSurface()\n    local customInfo = obj_surface.getCustomObject()\n    customInfo.diffuse = self.getInputs()[2].value\n    obj_surface.setCustomObject(customInfo)\n    obj_surface = obj_surface.reload()\nend\n\n\n\n--Table Scale control\n\n\n\n--Applies Scale to table pieces\nfunction click_applyScale(_, color)\n    if permissionCheck(color) then\n        local newWidth = tonumber(self.getInputs()[3].value)\n        local newDepth = tonumber(self.getInputs()[4].value)\n        if type(newWidth) ~= \"number\" then\n            broadcastToAll(\"Invalid Width\", {0.9,0.2,0.2})\n            return\n        elseif type(newDepth) ~= \"number\" then\n            broadcastToAll(\"Invalid Depth\", {0.9,0.2,0.2})\n            return\n        elseif newWidth<0.1 or newDepth<0.1 then\n            broadcastToAll(\"Scale cannot go below 0.1\", {0.9,0.2,0.2})\n            return\n        elseif newWidth>12 or newDepth>12 then\n            broadcastToAll(\"Scale should not go over 12 (world size limitation)\", {0.9,0.2,0.2})\n            return\n        else\n            changeTableScale(math.abs(newWidth), math.abs(newDepth))\n            broadcastToAll(\"Scale applied.\", {0.2,0.9,0.2})\n        end\n    end\nend\n\n--Checks/unchecks move box for hands\nfunction click_checkMove(_, color)\n    if permissionCheck(color) then\n        local find_func = function(o) return o.click_function==\"click_checkMove\" end\n        if checkData.move == true then\n            checkData.move = false\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=\"\"})\n        else\n            checkData.move = true\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=string.char(10008)})\n        end\n    end\nend\n\n--Checks/unchecks scale box for hands\n--This button was disabled for technical reasons\n--[[\nfunction click_checkScale(_, color)\n    if permissionCheck(color) then\n        local find_func = function(o) return o.click_function==\"click_checkScale\" end\n        if checkData.scale == true then\n            checkData.scale = false\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=\"\"})\n        else\n            checkData.scale = true\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=string.char(10008)})\n        end\n    end\nend\n]]\n\n--Alters scale of elements and moves them\nfunction changeTableScale(width, depth)\n    --Scaling factors used to translate scale to position offset\n    local width2pos = (width-1) * 18\n    local depth2pos = (depth-1) * 18\n\n    --Hand zone movement\n    if checkData.move == true then\n        for _, pc in ipairs(ref_playerColor) do\n            if Player[pc].getHandCount() > 0 then\n                moveHandZone(Player[pc], width2pos, depth2pos)\n            end\n        end\n    end\n    --Hand zone scaling\n    --The button to enable this was disabled for technical reasons\n    if checkData.scale == true then\n        for _, pc in ipairs(ref_playerColor) do\n            if Player[pc].getHandCount() > 0 then\n                scaleHandZone(Player[pc], width, depth)\n            end\n        end\n    end\n\n    --Resizing table elements\n    obj_side_top.setScale({width, 1, 1})\n    obj_side_bot.setScale({width, 1, 1})\n    obj_side_lef.setScale({depth, 1, 1})\n    obj_side_rig.setScale({depth, 1, 1})\n    obj_surface.setScale({width, 1, depth})\n\n    --Moving table elements to accomodate new scale\n    obj_side_lef.setPosition({-width2pos,tableHeightOffset,0})\n    obj_side_rig.setPosition({ width2pos,tableHeightOffset,0})\n    obj_side_top.setPosition({0,tableHeightOffset, depth2pos})\n    obj_side_bot.setPosition({0,tableHeightOffset,-depth2pos})\n    obj_leg1.setPosition({-width2pos,tableHeightOffset,-depth2pos})\n    obj_leg2.setPosition({-width2pos,tableHeightOffset, depth2pos})\n    obj_leg3.setPosition({ width2pos,tableHeightOffset, depth2pos})\n    obj_leg4.setPosition({ width2pos,tableHeightOffset,-depth2pos})\n    self.setPosition(obj_leg4.positionToWorld({-22.12, 8.74,-19.16}))\n    --Only enabled when changing tableHeightOffset\n    --obj_surface.setPosition({0,tableHeightOffset,0})\nend\n\n--Move hand zone, p=player reference, facts are scaling factors\nfunction moveHandZone(p, width2pos, depth2pos)\n    local widthX = obj_side_rig.getPosition().x\n    local depthZ = obj_side_top.getPosition().z\n    for i=1, p.getHandCount() do\n        local handT = p.getHandTransform()\n        local pos = handT.position\n        local y = handT.rotation.y\n\n        if y<45 or y>320 or y>135 and y<225 then\n            if pos.z > 0 then\n                pos.z = pos.z + depth2pos - depthZ\n            else\n                pos.z = pos.z - depth2pos + depthZ\n            end\n        else\n            if pos.x > 0 then\n                pos.x = pos.x + width2pos - widthX\n            else\n                pos.x = pos.x - width2pos + widthX\n            end\n        end\n\n        --Only enabled when changing tableHeightOffset\n        --pos.y = tableHeightOffset + 14\n\n        handT.position = pos\n        p.setHandTransform(handT, i)\n    end\nend\n\n\n---Scales hand zones, p=player reference, facts are scaling factors\nfunction scaleHandZone(p, width, depth)\n    local widthFact = width / obj_side_top.getScale().x\n    local depthFact = depth / obj_side_lef.getScale().x\n    for i=1, p.getHandCount() do\n        local handT = p.getHandTransform()\n        local scale = handT.scale\n        local y = handT.rotation.y\n        if y<45 or y>320 or y>135 and y<225 then\n            scale.x = scale.x * widthFact\n        else\n            scale.x = scale.x * depthFact\n        end\n        handT.scale = scale\n        p.setHandTransform(handT, i)\n    end\nend\n\n\n\n--Information gathering\n\n\n\n--Checks if a color is promoted or host\nfunction permissionCheck(color)\n    if Player[color].host==true or Player[color].promoted==true then\n        return true\n    else\n        return false\n    end\nend\n\n--Locates a string saved within memory file\nfunction findInImageDataIndex(...)\n    for _, str in ipairs({...}) do\n        for i, v in ipairs(tableImageData) do\n            if v.url == str or v.name == str then\n                return i\n            end\n        end\n    end\n    return nil\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n\n--Locates a button with a helper function\nfunction findButton(obj, func)\n    if func==nil then error(\"No func supplied to findButton\") end\n    for _, v in ipairs(obj.getButtons()) do\n        if func(v) then\n            return v\n        end\n    end\n    return nil\nend\n\n\n\n--Creation of buttons/inputs\n\n\n\nfunction createOpenCloseButton()\n    local tooltip = \"Open Table Control Panel\"\n    if controlActive then\n        tooltip = \"Close Table Control Panel\"\n    end\n    self.createButton({\n        click_function=\"click_toggleControl\", function_owner=self,\n        position={0,0,0}, rotation={-45,0,0}, height=400, width=400,\n        color={1,1,1,0}, tooltip=tooltip\n    })\nend\n\nfunction createSurfaceInput()\n    local currentURL = obj_surface.getCustomObject().diffuse\n    local nickname = \"\"\n    if findInImageDataIndex(currentURL) ~= nil then\n        nickname = tableImageData[findInImageDataIndex(currentURL)].name\n    end\n    self.createInput({\n        label=\"Nickname\", input_function=\"none\", function_owner=self,\n        alignment=3, position={0,0,2}, height=224, width=4000,\n        font_size=200, tooltip=\"Enter nickname for table image (only used for save)\",\n        value=nickname\n    })\n    self.createInput({\n        label=\"URL\", input_function=\"none\", function_owner=self,\n        alignment=3, position={0,0,3}, height=224, width=4000,\n        font_size=200, tooltip=\"Enter URL for tabletop image\",\n        value=currentURL\n    })\nend\n\nfunction createSurfaceButtons()\n    --Label\n    self.createButton({\n        label=\"Tabletop Surface Image\", click_function=\"none\",\n        position={0,0,1}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    --Functional\n    self.createButton({\n        label=\"Apply Image\\nTo Table\", click_function=\"click_applySurface\",\n        function_owner=self, tooltip=\"Apply URL as table image\",\n        position={2,0,4}, height=440, width=1400, font_size=200,\n    })\n    self.createButton({\n        label=\"Save Image\\nTo Memory\", click_function=\"click_saveSurface\",\n        function_owner=self, tooltip=\"Record URL into memory (requires nickname)\",\n        position={-2,0,4}, height=440, width=1400, font_size=200,\n    })\n    --Label\n    self.createButton({\n        label=\"Load From Memory\", click_function=\"none\",\n        position={0,0,5.5}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    --Saves, created dynamically from memory file\n    for i, memoryEntry in ipairs(tableImageData) do\n        --Load\n        local funcName = i..\"loadMemory\"\n        local func = function(x,y) click_loadMemory(x,y,i) end\n        self.setVar(funcName, func)\n        self.createButton({\n            label=memoryEntry.name, click_function=funcName,\n            function_owner=self, tooltip=memoryEntry.url, font_size=200,\n            position={-0.6,0,6.5+0.5*(i-1)}, height=240, width=3300,\n        })\n        --Delete\n        local funcName = i..\"deleteMemory\"\n        local func = function(x,y) click_deleteMemory(x,y,i) end\n        self.setVar(funcName, func)\n        self.createButton({\n            label=\"DELETE\", click_function=funcName,\n            function_owner=self, tooltip=\"\",\n            position={3.6,0,6.5+0.5*(i-1)}, height=240, width=600,\n            font_size=160, font_color={1,0,0}, color={0.8,0.8,0.8}\n        })\n    end\nend\n\nfunction createScaleInput()\n    self.createInput({\n        label=string.char(8644), input_function=\"none\", function_owner=self,\n        alignment=3, position={-8.5,0,2}, height=224, width=400,\n        font_size=200, tooltip=\"Table Width\",\n        value=round(obj_side_top.getScale().x, 1)\n    })\n    self.createInput({\n        label=string.char(8645), input_function=\"none\", function_owner=self,\n        alignment=3, position={-7.5,0,2}, height=224, width=400,\n        font_size=200, tooltip=\"Table Depth\",\n        value=round(obj_side_lef.getScale().x, 1)\n    })\nend\n\nfunction createScaleButtons()\n    --Labels\n    self.createButton({\n        label=\"Table Scale\", click_function=\"none\",\n        position={-8,0,1}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    self.createButton({\n        label=string.char(8644)..\"            \"..string.char(8645),\n        click_function=\"none\",\n        position={-8,0,2}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Move Hands:\", click_function=\"none\",\n        position={-8.3,0,3}, height=0, width=0, font_size=200, font_color={1,1,1}\n    })\n    --Disabled due to me removing the feature for technical reasons\n    --[[\n    self.createButton({\n        label=\"Scale Hands:\", click_function=\"none\",\n        position={-8.3,0,4}, height=0, width=0, font_size=200, font_color={1,1,1}\n    })\n    ]]\n    --Checkboxes\n    local label = \"\"\n    if checkData.move == true then label = string.char(10008) end\n    self.createButton({\n        label=label, click_function=\"click_checkMove\",\n        function_owner=self, tooltip=\"Check to move hands when table is rescaled\",\n        position={-6.8,0,3}, height=224, width=224, font_size=200,\n    })\n    --[[\n    local label = \"\"\n    if checkData.scale == true then label = string.char(10008) end\n    self.createButton({\n        label=label, click_function=\"click_checkScale\",\n        function_owner=self, tooltip=\"Check to scale the width of hands when table is rescaled\",\n        position={-6.8,0,4}, height=224, width=224, font_size=200,\n    })\n    ]]\n    --Apply button\n    self.createButton({\n        label=\"Apply Scale\", click_function=\"click_applyScale\",\n        function_owner=self, tooltip=\"Apply width/depth to table\",\n        position={-8,0,4}, height=440, width=1400, font_size=200,\n    })\nend\n\n\n\n\n\n--Data tables\n\n\n\n\nref_noninteractable = {\n    \"afc863\",\"c8edca\",\"393bf7\",\"12c65e\",\"f938a2\",\"9f95fd\",\"35b95f\",\n    \"5af8f2\",\"4ee1f2\",\"bd69bd\"\n}\n\nref_playerColor = {\n    \"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\",\n    \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\"\n}\n\n--Dummy function, absorbs unwanted triggers\nfunction none() end",
      "LuaScriptState": "{\"cd\":{\"move\":true,\"scale\":false},\"tid\":[{\"name\":\"Felt - Green\",\"url\":\"https://i.imgur.com/eHXDjyy.jpg\"},{\"name\":\"Felt - Red\",\"url\":\"https://i.imgur.com/DbPelDi.jpg\"},{\"name\":\"Felt - Grey\",\"url\":\"https://i.imgur.com/N0O6aqj.jpg\"}]}",
      "XmlUI": ""
    },
    {
      "GUID": "f938a2",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": -12.6,
        "rotX": -1.01777751E-13,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.7,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "9f95fd",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -12.6,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 1.7,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "35b95f",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": 12.6,
        "rotX": -1.01777751E-13,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.7,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5af8f2",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 12.6,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.7,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "4c1650",
      "Name": "Bag",
      "Transform": {
        "posX": -32.47262,
        "posY": 1.81509519,
        "posZ": 33.2264442,
        "rotX": -2.79844553E-05,
        "rotY": 0.000125678169,
        "rotZ": 1.81176474E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Components",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.231195331,
        "g": 0.23067525,
        "b": 0.235182434
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "021362",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -31.1673851,
            "posY": 4.047256,
            "posZ": 32.46688,
            "rotX": 0.6575221,
            "rotY": 180.0064,
            "rotZ": 1.10966754,
            "scaleX": 3.90700245,
            "scaleY": 1.0,
            "scaleZ": 3.90700245
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843672500561239357/84490CE678BF7904D1F7E96AD97A5656B3218BA8/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 2,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.444406331,
                "y": 0.09999989,
                "z": -1.19455365E-06
              },
              "Rotation": {
                "x": 4.77726E-08,
                "y": 359.972321,
                "z": -3.2250103E-08
              }
            },
            {
              "Position": {
                "x": -0.4446126,
                "y": 0.100000367,
                "z": 1.28327986E-06
              },
              "Rotation": {
                "x": -2.65790536E-08,
                "y": 179.999985,
                "z": 1.64282064E-08
              }
            }
          ]
        },
        {
          "GUID": "e536e3",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -38.86636,
            "posY": 4.03424835,
            "posZ": 32.5626564,
            "rotX": 4.77328058E-07,
            "rotY": 180.000809,
            "rotZ": 3.01357829E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933194/CEAEC0C8A033E1A3A1FA7CBC25AA62AAF0ED05A8/",
            "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933282/3A77955CAC8082DF0715D3A865D628587B4B6F39/",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.2,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "<Panel id=\"highlight\" color=\"rgb(0.8,0.2,1)\" width=\"240\" height=\"240\" position=\"0 0 0\" active=\"false\"></Panel>\r\n"
        },
        {
          "GUID": "6c0780",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -36.7663651,
            "posY": 4.03424835,
            "posZ": 32.562664,
            "rotX": -1.90456987E-07,
            "rotY": 179.980423,
            "rotZ": 4.39475116E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933328/86347A54B6A8340DD76D369ECEA8BCF2D397B265/",
            "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933282/3A77955CAC8082DF0715D3A865D628587B4B6F39/",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.2,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "<Panel id=\"highlight\" color=\"rgb(0.8,0.2,1)\" width=\"240\" height=\"240\" position=\"0 0 0\" active=\"false\"></Panel>\r\n"
        },
        {
          "GUID": "842722",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -34.6663666,
            "posY": 4.03435135,
            "posZ": 32.562664,
            "rotX": 2.91041182E-08,
            "rotY": 179.978729,
            "rotZ": 1.45111485E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933011/B30BB04DF0B052C4B60B4D6BA091381741919444/",
            "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933282/3A77955CAC8082DF0715D3A865D628587B4B6F39/",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.2,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "<Panel id=\"highlight\" color=\"rgb(0.8,0.2,1)\" width=\"240\" height=\"240\" position=\"0 0 0\" active=\"false\"></Panel>\r\n"
        },
        {
          "GUID": "34d2e8",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -32.0268669,
            "posY": 4.04231167,
            "posZ": 32.2964821,
            "rotX": 2.328422,
            "rotY": 180.018723,
            "rotZ": 1.14202273,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933126/8AF0879152E122F291D7EE7084DDDF0230CFB20C/",
            "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933282/3A77955CAC8082DF0715D3A865D628587B4B6F39/",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.2,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "<Panel id=\"highlight\" color=\"rgb(0.8,0.2,1)\" width=\"240\" height=\"240\" position=\"0 0 0\" active=\"false\"></Panel>\r\n"
        },
        {
          "GUID": "8df356",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -29.9248753,
            "posY": 4.026681,
            "posZ": 32.29242,
            "rotX": -1.91421759E-06,
            "rotY": 180.0307,
            "rotZ": 2.89556328E-06,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933400/98BF2EEF42299C4E538EC832EB3CA7DD2A81773A/",
            "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933282/3A77955CAC8082DF0715D3A865D628587B4B6F39/",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.2,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "<Panel id=\"highlight\" color=\"rgb(0.8,0.2,1)\" width=\"240\" height=\"240\" position=\"0 0 0\" active=\"false\"></Panel>\r\n"
        },
        {
          "GUID": "e80c84",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -32.4512138,
            "posY": 4.04001474,
            "posZ": 32.5597076,
            "rotX": 3.84867287,
            "rotY": 179.99971,
            "rotZ": 0.125099555,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Adv2p"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933126/8AF0879152E122F291D7EE7084DDDF0230CFB20C/",
            "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933282/3A77955CAC8082DF0715D3A865D628587B4B6F39/",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.2,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "<Panel id=\"highlight\" color=\"rgb(0.8,0.2,1)\" width=\"240\" height=\"240\" position=\"0 0 0\" active=\"false\"></Panel>\r\n"
        },
        {
          "GUID": "33a1c8",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -30.35095,
            "posY": 4.005659,
            "posZ": 32.5529938,
            "rotX": -2.26201723E-06,
            "rotY": 180.030655,
            "rotZ": -4.256646E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Adv2p"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933400/98BF2EEF42299C4E538EC832EB3CA7DD2A81773A/",
            "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153250933282/3A77955CAC8082DF0715D3A865D628587B4B6F39/",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.2,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "<Panel id=\"highlight\" color=\"rgb(0.8,0.2,1)\" width=\"240\" height=\"240\" position=\"0 0 0\" active=\"false\"></Panel>\r\n"
        },
        {
          "GUID": "b2cf34",
          "Name": "Deck",
          "Transform": {
            "posX": -32.52112,
            "posY": 4.67222929,
            "posZ": 32.5786171,
            "rotX": 1.468967,
            "rotY": 179.997986,
            "rotZ": 179.798309,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            9613,
            8207,
            9636,
            9603,
            9642,
            9646,
            8105,
            8212,
            8220,
            9659,
            8602,
            9630,
            9635,
            9634,
            9654,
            9611,
            9602,
            9622,
            8217,
            8204,
            9620,
            8205,
            8210,
            8208,
            9648,
            8206,
            8215,
            9668,
            8203,
            9627,
            9667,
            9665,
            9666,
            8100,
            8207,
            8201,
            9647,
            9621,
            8601,
            9624,
            9651,
            9633,
            8220,
            9605,
            9660,
            8215,
            8214,
            9606,
            9616,
            9662,
            8213,
            8216,
            8217,
            8223,
            9641,
            9601,
            9625,
            8219,
            9632,
            8214,
            8205,
            9638,
            8224,
            8210,
            8104,
            9608,
            9629,
            9607,
            8218,
            9656,
            9614,
            9609,
            9639,
            9652,
            8209,
            9661,
            8101,
            9643,
            8204,
            9618,
            8219,
            9644,
            8211,
            9655,
            9604,
            8600,
            9615,
            8103,
            8209,
            8102,
            9619,
            9617,
            8213,
            9623,
            9649,
            8208,
            9628,
            8603,
            8211,
            8202,
            8216,
            9650,
            9612,
            9663,
            8604,
            8200,
            9631,
            8212,
            9664,
            9626,
            8225,
            8202,
            8206,
            8203,
            8222,
            8221,
            9658,
            9600,
            8218,
            9610
          ],
          "CustomDeck": {
            "96": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "82": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "81": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557166257/A5FE4E22CB857049C4100BE0C1723C6657A0B41F/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
              "NumWidth": 3,
              "NumHeight": 2,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557213584/0555A636404D892ACD5381D6A081D99D6ABE3133/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
              "NumWidth": 3,
              "NumHeight": 2,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "63da12",
              "Name": "Card",
              "Transform": {
                "posX": 26.8444576,
                "posY": 1.49510384,
                "posZ": -20.8816032,
                "rotX": -3.43303874E-08,
                "rotY": 180.0,
                "rotZ": 3.872262E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Empath World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9613,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "42f06b",
              "Name": "Card",
              "Transform": {
                "posX": 27.5801086,
                "posY": 1.81044257,
                "posZ": -18.5376682,
                "rotX": 4.033418,
                "rotY": 179.752029,
                "rotZ": 180.175919,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Research Labs",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8207,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8a7b95",
              "Name": "Card",
              "Transform": {
                "posX": 23.1380024,
                "posY": 1.51093543,
                "posZ": -19.9640751,
                "rotX": -3.04968544E-05,
                "rotY": 179.999176,
                "rotZ": 0.8276763,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Star Nomad Lair",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9636,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1aa174",
              "Name": "Card",
              "Transform": {
                "posX": 23.20684,
                "posY": 1.49510384,
                "posZ": -21.6945286,
                "rotX": 8.602339E-09,
                "rotY": 180.0,
                "rotZ": -2.29755077E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "New Earth",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9603,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0293ca",
              "Name": "Card",
              "Transform": {
                "posX": 21.8775959,
                "posY": 1.52224922,
                "posZ": -21.4327984,
                "rotX": 359.9904,
                "rotY": 179.983826,
                "rotZ": 0.03798654,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lost Alien Battle Fleet",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9642,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "670b86",
              "Name": "Card",
              "Transform": {
                "posX": 21.5627632,
                "posY": 1.52209115,
                "posZ": -25.3740826,
                "rotX": -0.0009035601,
                "rotY": 179.998016,
                "rotZ": 0.0146147273,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Engineers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9646,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "cd4538",
              "Name": "Card",
              "Transform": {
                "posX": -20.37038,
                "posY": 1.495104,
                "posZ": 25.4633217,
                "rotX": -1.1326254E-05,
                "rotY": 179.936966,
                "rotZ": 7.430072E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Gateway Station",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8105,
              "SidewaysCard": false,
              "CustomDeck": {
                "81": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557166257/A5FE4E22CB857049C4100BE0C1723C6657A0B41F/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3a130d",
              "Name": "Card",
              "Transform": {
                "posX": 26.4391212,
                "posY": 1.74516165,
                "posZ": -21.4463272,
                "rotX": 3.92974639,
                "rotY": 179.845291,
                "rotZ": 182.554688,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Drop Ships",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8212,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "19b73a",
              "Name": "Card",
              "Transform": {
                "posX": 26.8088474,
                "posY": 1.793086,
                "posZ": -20.5326347,
                "rotX": 3.90946364,
                "rotY": 180.26889,
                "rotZ": 182.5862,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Contact Specialist",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8220,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "58ed66",
              "Name": "Card",
              "Transform": {
                "posX": -22.1840363,
                "posY": 1.60546339,
                "posZ": -19.8506165,
                "rotX": 0.0005008717,
                "rotY": 180.0086,
                "rotZ": 359.527466,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mining League",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9659,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a09767",
              "Name": "Card",
              "Transform": {
                "posX": -22.23879,
                "posY": 1.586812,
                "posZ": -20.3107185,
                "rotX": 5.029616E-05,
                "rotY": 180.0,
                "rotZ": -0.00155617273,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Armaments World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8602,
              "SidewaysCard": false,
              "CustomDeck": {
                "86": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557213584/0555A636404D892ACD5381D6A081D99D6ABE3133/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "37ea1a",
              "Name": "Card",
              "Transform": {
                "posX": 21.2557373,
                "posY": 1.49510384,
                "posZ": -15.99333,
                "rotX": -2.27550316E-07,
                "rotY": 180.0,
                "rotZ": 2.25576642E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Gem World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9630,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a16182",
              "Name": "Card",
              "Transform": {
                "posX": 18.0037689,
                "posY": 1.64453113,
                "posZ": -17.5842113,
                "rotX": 0.00203466578,
                "rotY": 180.0,
                "rotZ": -0.002349089,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Expanding Colony",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9635,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ecadfd",
              "Name": "Card",
              "Transform": {
                "posX": 21.2557716,
                "posY": 1.495099,
                "posZ": -19.1557789,
                "rotX": 5.95345664E-05,
                "rotY": 179.999344,
                "rotZ": -0.000185602155,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Robot Scout Ship",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9634,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ffb12f",
              "Name": "Card",
              "Transform": {
                "posX": -22.1508713,
                "posY": 1.6497649,
                "posZ": -19.9777985,
                "rotX": 359.452148,
                "rotY": 179.9998,
                "rotZ": 0.009925442,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Homeworld",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9654,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "36f753",
              "Name": "Card",
              "Transform": {
                "posX": 19.9717846,
                "posY": 1.49510384,
                "posZ": -17.71913,
                "rotX": 9.66509E-08,
                "rotY": 180.0,
                "rotZ": 3.73473569E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "New Vinland",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9611,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1cc9b5",
              "Name": "Card",
              "Transform": {
                "posX": 20.91595,
                "posY": 1.49510384,
                "posZ": -18.5320549,
                "rotX": -5.053905E-08,
                "rotY": 180.0,
                "rotZ": -7.07784764E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Fuel Cache",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9602,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2a8d7d",
              "Name": "Card",
              "Transform": {
                "posX": 19.9717846,
                "posY": 1.49510384,
                "posZ": -24.044075,
                "rotX": 1.22483286E-08,
                "rotY": 180.0,
                "rotZ": 5.171528E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mining World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9622,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "7be48f",
              "Name": "Card",
              "Transform": {
                "posX": 0.6002388,
                "posY": 4.513605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Terraforming Robots",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8217,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "70a38f",
              "Name": "Card",
              "Transform": {
                "posX": 27.2399731,
                "posY": 1.66134989,
                "posZ": -18.3822441,
                "rotX": 1.7412219,
                "rotY": 179.7503,
                "rotZ": 181.9402,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Expedition Force",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8204,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f8cd93",
              "Name": "Card",
              "Transform": {
                "posX": 24.5535679,
                "posY": 1.49510384,
                "posZ": -24.044075,
                "rotX": 3.90160437E-08,
                "rotY": 180.0,
                "rotZ": 4.57864019E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Radioactive World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9620,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3e3816",
              "Name": "Card",
              "Transform": {
                "posX": 26.7861729,
                "posY": 1.706739,
                "posZ": -18.8888378,
                "rotX": 2.22934747,
                "rotY": 180.237762,
                "rotZ": 183.201385,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Space Marines",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8205,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "37c8b1",
              "Name": "Card",
              "Transform": {
                "posX": 28.4487,
                "posY": 1.7117883,
                "posZ": -19.609129,
                "rotX": 4.909976,
                "rotY": 180.000671,
                "rotZ": 184.3999,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Export Duties",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8210,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0e3e9a",
              "Name": "Card",
              "Transform": {
                "posX": 28.3547211,
                "posY": 1.86271954,
                "posZ": -19.5292358,
                "rotX": 4.73329973,
                "rotY": 180.186783,
                "rotZ": 184.346771,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mining Robots",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8208,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "666646",
              "Name": "Card",
              "Transform": {
                "posX": -16.4902325,
                "posY": 1.67416656,
                "posZ": -16.9197636,
                "rotX": 359.630341,
                "rotY": 179.995758,
                "rotZ": 0.114773043,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pan-Galactic League",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9648,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e4cb3f",
              "Name": "Card",
              "Transform": {
                "posX": 28.5429955,
                "posY": 1.7146399,
                "posZ": -19.485548,
                "rotX": 4.92856073,
                "rotY": 180.03418,
                "rotZ": 184.572968,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Genetics Lab",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8206,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "de9a46",
              "Name": "Card",
              "Transform": {
                "posX": -7.80311775,
                "posY": 3.81360483,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Colony Ship",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8215,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d3020e",
              "Name": "Card",
              "Transform": {
                "posX": -17.0750179,
                "posY": 1.73123336,
                "posZ": -16.9620132,
                "rotX": 2.88729643E-05,
                "rotY": 179.989243,
                "rotZ": -0.0008622703,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Destroyed World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9668,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "82f381",
              "Name": "Card",
              "Transform": {
                "posX": 26.91654,
                "posY": 1.60867989,
                "posZ": -18.4776859,
                "rotX": 1.44436371,
                "rotY": 180.158554,
                "rotZ": 181.38797,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Interstellar Bank",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8203,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4e24fe",
              "Name": "Card",
              "Transform": {
                "posX": 17.8734875,
                "posY": 1.63490057,
                "posZ": -17.8131123,
                "rotX": -0.00136956666,
                "rotY": 180.0,
                "rotZ": -0.00103064592,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Spice World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9627,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "80c97a",
              "Name": "Card",
              "Transform": {
                "posX": -16.51001,
                "posY": 1.72153282,
                "posZ": -16.6535587,
                "rotX": 0.0009831933,
                "rotY": 179.989212,
                "rotZ": -0.000105525447,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "New Survivalists",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9667,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "108e49",
              "Name": "Card",
              "Transform": {
                "posX": -16.4646645,
                "posY": 1.65410316,
                "posZ": -16.16882,
                "rotX": -7.31802E-05,
                "rotY": 179.995377,
                "rotZ": -0.000657130149,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Rosetta Stone World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9665,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b6b238",
              "Name": "Card",
              "Transform": {
                "posX": -14.3038349,
                "posY": 1.49510384,
                "posZ": -18.7619667,
                "rotX": 3.088252E-07,
                "rotY": 179.813248,
                "rotZ": 3.383242E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Free Trade Association",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9666,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "c57e34",
              "Name": "Card",
              "Transform": {
                "posX": -17.9723377,
                "posY": 1.495077,
                "posZ": 25.795887,
                "rotX": 0.000321604137,
                "rotY": 180.0055,
                "rotZ": -0.00183730992,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Star Nomad Raiders",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8100,
              "SidewaysCard": false,
              "CustomDeck": {
                "81": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557166257/A5FE4E22CB857049C4100BE0C1723C6657A0B41F/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "874661",
              "Name": "Card",
              "Transform": {
                "posX": 4.20167732,
                "posY": 4.81360531,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Research Labs",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8207,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "cb97a7",
              "Name": "Card",
              "Transform": {
                "posX": 26.700943,
                "posY": 1.523748,
                "posZ": -19.0463982,
                "rotX": 0.187453315,
                "rotY": 180.074127,
                "rotZ": 181.23732,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Federation",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8201,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d0bf7d",
              "Name": "Card",
              "Transform": {
                "posX": -22.2910271,
                "posY": 1.49510384,
                "posZ": -19.407589,
                "rotX": -2.18312366E-07,
                "rotY": 179.999908,
                "rotZ": 1.06777179E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Refugee World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9647,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "7db10f",
              "Name": "Card",
              "Transform": {
                "posX": 22.2626762,
                "posY": 1.49510384,
                "posZ": -24.044075,
                "rotX": 3.90160437E-08,
                "rotY": 180.0,
                "rotZ": 4.57864019E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Distant World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9621,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "25a0c0",
              "Name": "Card",
              "Transform": {
                "posX": 23.61774,
                "posY": 1.49508572,
                "posZ": -26.6253033,
                "rotX": 0.000184490142,
                "rotY": 179.975784,
                "rotZ": 180.001373,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Black Market Trading World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8601,
              "SidewaysCard": false,
              "CustomDeck": {
                "86": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557213584/0555A636404D892ACD5381D6A081D99D6ABE3133/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4169ef",
              "Name": "Card",
              "Transform": {
                "posX": 26.8444576,
                "posY": 1.49510384,
                "posZ": -27.2065487,
                "rotX": 4.67834838E-08,
                "rotY": 180.0,
                "rotZ": 4.328901E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Runaway Robots",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9624,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "cea5a2",
              "Name": "Card",
              "Transform": {
                "posX": -29.1637,
                "posY": 1.49510384,
                "posZ": -19.407589,
                "rotX": -3.52184E-07,
                "rotY": 179.999908,
                "rotZ": -1.02034653E-06,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Outpost",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9651,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "cc67a3",
              "Name": "Card",
              "Transform": {
                "posX": 16.40051,
                "posY": 1.4949857,
                "posZ": -17.7866058,
                "rotX": 0.00115320366,
                "rotY": 179.999084,
                "rotZ": 359.9922,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "The Last of the Uplift Gnarssh",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9633,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0c32a6",
              "Name": "Card",
              "Transform": {
                "posX": 25.7430172,
                "posY": 1.68855739,
                "posZ": -20.278574,
                "rotX": 2.588892,
                "rotY": 179.277588,
                "rotZ": 182.541336,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Contact Specialist",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8220,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1f3e11",
              "Name": "Card",
              "Transform": {
                "posX": 20.91595,
                "posY": 1.49510384,
                "posZ": -24.8570023,
                "rotX": -2.976453E-08,
                "rotY": 180.0,
                "rotZ": -4.47769928E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Terraformed World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9605,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3d3daa",
              "Name": "Card",
              "Transform": {
                "posX": -16.7261162,
                "posY": 1.71214306,
                "posZ": -16.6051769,
                "rotX": 0.0008316808,
                "rotY": 179.999924,
                "rotZ": -0.0008042734,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Survey: SETI",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9660,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "733142",
              "Name": "Card",
              "Transform": {
                "posX": 28.2506065,
                "posY": 2.092343,
                "posZ": -18.8726444,
                "rotX": 0.0532621965,
                "rotY": 179.976776,
                "rotZ": 181.5472,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Colony Ship",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8215,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "5b8402",
              "Name": "Card",
              "Transform": {
                "posX": 25.6944523,
                "posY": 2.24903154,
                "posZ": -19.127142,
                "rotX": 2.35584116,
                "rotY": 179.687134,
                "rotZ": 182.5897,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "New Military Tactics",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8214,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d24129",
              "Name": "Card",
              "Transform": {
                "posX": 23.20684,
                "posY": 1.49510384,
                "posZ": -24.8570023,
                "rotX": -3.508993E-08,
                "rotY": 180.0,
                "rotZ": -2.99357872E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pre-Sentient Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9606,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "63abc1",
              "Name": "Card",
              "Transform": {
                "posX": 22.2626762,
                "posY": 1.49510384,
                "posZ": -20.8816032,
                "rotX": -3.43303874E-08,
                "rotY": 180.0,
                "rotZ": 3.872262E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Aquatic Uplift Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9616,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e91a84",
              "Name": "Card",
              "Transform": {
                "posX": -16.5993862,
                "posY": 1.7023474,
                "posZ": -16.7849236,
                "rotX": -0.0002872138,
                "rotY": 180.000092,
                "rotZ": -0.00165818864,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Renaissance",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9662,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "99473b",
              "Name": "Card",
              "Transform": {
                "posX": -6.60263824,
                "posY": 3.913605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mining Conglomerate",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8213,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "15cf20",
              "Name": "Card",
              "Transform": {
                "posX": 27.2352467,
                "posY": 1.81805992,
                "posZ": -19.2817364,
                "rotX": 3.185426,
                "rotY": 180.072144,
                "rotZ": 182.297272,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Replicant Robots",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8216,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "5655d2",
              "Name": "Card",
              "Transform": {
                "posX": -3.00119972,
                "posY": 4.213605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Terraforming Robots",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8217,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d7f012",
              "Name": "Card",
              "Transform": {
                "posX": 27.5667248,
                "posY": 1.95665014,
                "posZ": -20.2270489,
                "rotX": 10.5294514,
                "rotY": 179.981186,
                "rotZ": 180.427612,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Epsilon Eridani",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8223,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "96a880",
              "Name": "Card",
              "Transform": {
                "posX": -16.8044567,
                "posY": 2.6071744,
                "posZ": 17.13065,
                "rotX": 359.822357,
                "rotY": 270.282074,
                "rotZ": 179.978867,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Prosperous World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9641,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4e5111",
              "Name": "Card",
              "Transform": {
                "posX": 23.20684,
                "posY": 1.49510384,
                "posZ": -18.5320549,
                "rotX": -3.480973E-08,
                "rotY": 180.0,
                "rotZ": -7.46033848E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Robotic Factory",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9601,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "5e4570",
              "Name": "Card",
              "Transform": {
                "posX": 24.5535679,
                "posY": 1.49510384,
                "posZ": -27.2065487,
                "rotX": 4.67834838E-08,
                "rotY": 180.0,
                "rotZ": 4.328901E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Deserted Alien Library",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9625,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e52e8e",
              "Name": "Card",
              "Transform": {
                "posX": -5.40215874,
                "posY": 4.013605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Consumer Markets",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8219,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "fcc59f",
              "Name": "Card",
              "Transform": {
                "posX": 17.8689442,
                "posY": 1.515057,
                "posZ": -18.0836964,
                "rotX": 0.000136127361,
                "rotY": 179.9985,
                "rotZ": 1.04364908,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pilgrimage World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9632,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d302c6",
              "Name": "Card",
              "Transform": {
                "posX": -9.003597,
                "posY": 3.713605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "New Military Tactics",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8214,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "07c36a",
              "Name": "Card",
              "Transform": {
                "posX": 5.402157,
                "posY": 4.91360474,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Space Marines",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8205,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "310a0e",
              "Name": "Card",
              "Transform": {
                "posX": 17.9465,
                "posY": 1.623343,
                "posZ": -17.6165333,
                "rotX": 359.99292,
                "rotY": 180.00145,
                "rotZ": 1.02958214,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Resort",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9638,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "af52b7",
              "Name": "Card",
              "Transform": {
                "posX": -10.2040768,
                "posY": 3.61360478,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Old Earth",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8224,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "dea30c",
              "Name": "Card",
              "Transform": {
                "posX": 28.6567383,
                "posY": 1.72313619,
                "posZ": -20.1822643,
                "rotX": 4.768962,
                "rotY": 180.234863,
                "rotZ": 184.550629,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Export Duties",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8210,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "53eb9a",
              "Name": "Card",
              "Transform": {
                "posX": -18.0671673,
                "posY": 1.50849688,
                "posZ": 28.83628,
                "rotX": 359.499664,
                "rotY": 180.006,
                "rotZ": 0.0011496892,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Abandoned Mine Squatters",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8104,
              "SidewaysCard": false,
              "CustomDeck": {
                "81": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557166257/A5FE4E22CB857049C4100BE0C1723C6657A0B41F/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "c7c80d",
              "Name": "Card",
              "Transform": {
                "posX": 26.8444576,
                "posY": 1.49510384,
                "posZ": -17.71913,
                "rotX": 1.0031092E-07,
                "rotY": 180.0,
                "rotZ": 3.89303324E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Deserted Alien Colony",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9608,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "613cc1",
              "Name": "Card",
              "Transform": {
                "posX": 23.546629,
                "posY": 1.49510384,
                "posZ": -15.99333,
                "rotX": 4.112292E-08,
                "rotY": 180.0,
                "rotZ": -6.03240039E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lost Alien Warship",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9629,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1da6eb",
              "Name": "Card",
              "Transform": {
                "posX": 29.13535,
                "posY": 1.49510384,
                "posZ": -17.71913,
                "rotX": 9.35689854E-08,
                "rotY": 180.0,
                "rotZ": 3.59810656E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Former Penal Colony",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9607,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "087a30",
              "Name": "Card",
              "Transform": {
                "posX": 7.803116,
                "posY": 5.11360455,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Diversified Economy",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8218,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "30a745",
              "Name": "Card",
              "Transform": {
                "posX": -22.1727943,
                "posY": 1.63046384,
                "posZ": -19.8855667,
                "rotX": 359.4561,
                "rotY": 180.003632,
                "rotZ": 0.0105985673,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Plague World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9656,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "fa538c",
              "Name": "Card",
              "Transform": {
                "posX": 24.5535679,
                "posY": 1.49510384,
                "posZ": -20.8816032,
                "rotX": -1.74703256E-08,
                "rotY": 180.0,
                "rotZ": 3.65742949E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Underground",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9614,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ec780d",
              "Name": "Card",
              "Transform": {
                "posX": 24.5535679,
                "posY": 1.49510384,
                "posZ": -17.71913,
                "rotX": 1.0031092E-07,
                "rotY": 180.0,
                "rotZ": 3.89303324E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Miners",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9609,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3ec220",
              "Name": "Card",
              "Transform": {
                "posX": 20.5151672,
                "posY": 1.49504864,
                "posZ": -26.2159843,
                "rotX": 0.000548260054,
                "rotY": 180.000031,
                "rotZ": -0.003658004,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "New Galactic Order",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9639,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1c7d15",
              "Name": "Card",
              "Transform": {
                "posX": -31.45457,
                "posY": 1.51359856,
                "posZ": -19.4076328,
                "rotX": -8.15950352E-06,
                "rotY": 180.000412,
                "rotZ": 0.000163484088,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "New Economy",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9652,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "75024b",
              "Name": "Card",
              "Transform": {
                "posX": 3.00119781,
                "posY": 4.713605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Deficit Spending",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8209,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "43ff08",
              "Name": "Card",
              "Transform": {
                "posX": -16.742384,
                "posY": 1.69277978,
                "posZ": -16.7440414,
                "rotX": 0.00124501425,
                "rotY": 180.001862,
                "rotZ": -0.000950935937,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Reptilian Uplift Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9661,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "461574",
              "Name": "Card",
              "Transform": {
                "posX": -16.5382652,
                "posY": 1.5368011,
                "posZ": 27.7972984,
                "rotX": 359.49646,
                "rotY": 180.003845,
                "rotZ": 1.04438412,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Industrial Robots",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8101,
              "SidewaysCard": false,
              "CustomDeck": {
                "81": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557166257/A5FE4E22CB857049C4100BE0C1723C6657A0B41F/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a32078",
              "Name": "Card",
              "Transform": {
                "posX": 21.23055,
                "posY": 1.49508393,
                "posZ": -20.2754326,
                "rotX": 0.00217683846,
                "rotY": 179.999863,
                "rotZ": -0.004067687,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Merchant World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9643,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e27e8f",
              "Name": "Card",
              "Transform": {
                "posX": 26.5746632,
                "posY": 1.64398193,
                "posZ": -18.5860424,
                "rotX": 1.13529956,
                "rotY": 179.940384,
                "rotZ": 181.923126,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Expedition Force",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8204,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8a5368",
              "Name": "Card",
              "Transform": {
                "posX": 29.13535,
                "posY": 1.49510384,
                "posZ": -24.044075,
                "rotX": 4.67834838E-08,
                "rotY": 180.0,
                "rotZ": 4.328901E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Avian Uplift Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9618,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "83edd1",
              "Name": "Card",
              "Transform": {
                "posX": -4.201679,
                "posY": 4.11360455,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Consumer Markets",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8219,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1a31e8",
              "Name": "Card",
              "Transform": {
                "posX": 25.2362251,
                "posY": 1.49510384,
                "posZ": -26.2962132,
                "rotX": -3.3156E-08,
                "rotY": 180.0,
                "rotZ": -8.416967E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Trendsetters",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9644,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ed4423",
              "Name": "Card",
              "Transform": {
                "posX": 27.28429,
                "posY": 1.77258384,
                "posZ": -17.2047615,
                "rotX": 2.97468328,
                "rotY": 167.564941,
                "rotZ": 182.489624,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Public Works",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8211,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3927c5",
              "Name": "Card",
              "Transform": {
                "posX": -22.4313641,
                "posY": 1.64823878,
                "posZ": -18.4266682,
                "rotX": 358.46936,
                "rotY": 180.017731,
                "rotZ": -0.000429242849,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Tourist World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9655,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "14a3a6",
              "Name": "Card",
              "Transform": {
                "posX": 20.91595,
                "posY": 1.49510384,
                "posZ": -21.6945286,
                "rotX": -6.698446E-08,
                "rotY": 180.0,
                "rotZ": -5.64321638E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lost Species Ark World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9604,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b1c020",
              "Name": "Card",
              "Transform": {
                "posX": 20.25509,
                "posY": 1.521523,
                "posZ": -26.58513,
                "rotX": 0.00130286708,
                "rotY": 179.985138,
                "rotZ": 180.003815,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Outlaw World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8600,
              "SidewaysCard": false,
              "CustomDeck": {
                "86": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557213584/0555A636404D892ACD5381D6A081D99D6ABE3133/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "09c965",
              "Name": "Card",
              "Transform": {
                "posX": 20.0325584,
                "posY": 1.73131156,
                "posZ": -20.9332714,
                "rotX": -0.000100322912,
                "rotY": 180.0,
                "rotZ": -0.0009813105,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Robot Sentry",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9615,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "6f6270",
              "Name": "Card",
              "Transform": {
                "posX": -15.625761,
                "posY": 1.49510336,
                "posZ": 25.631506,
                "rotX": 6.519705E-06,
                "rotY": 180.006119,
                "rotZ": -2.470157E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Terraforming Colonists",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8103,
              "SidewaysCard": false,
              "CustomDeck": {
                "81": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557166257/A5FE4E22CB857049C4100BE0C1723C6657A0B41F/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0f8dd3",
              "Name": "Card",
              "Transform": {
                "posX": 9.003595,
                "posY": 5.213605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Deficit Spending",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8209,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f979f3",
              "Name": "Card",
              "Transform": {
                "posX": -20.4962425,
                "posY": 1.86549091,
                "posZ": 25.46564,
                "rotX": 347.74118,
                "rotY": 179.999954,
                "rotZ": 0.00503307255,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Trade Emissaries",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8102,
              "SidewaysCard": false,
              "CustomDeck": {
                "81": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557166257/A5FE4E22CB857049C4100BE0C1723C6657A0B41F/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "7e8e5a",
              "Name": "Card",
              "Transform": {
                "posX": 26.8444576,
                "posY": 1.49510384,
                "posZ": -24.044075,
                "rotX": 3.892983E-08,
                "rotY": 180.0,
                "rotZ": 4.579638E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Blaster Gem Mines",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9619,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "6bdae7",
              "Name": "Card",
              "Transform": {
                "posX": 19.9717846,
                "posY": 1.49510384,
                "posZ": -20.8816032,
                "rotX": -2.22305356E-08,
                "rotY": 180.0,
                "rotZ": 3.87284615E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Comet Zone",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9617,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "01d4b2",
              "Name": "Card",
              "Transform": {
                "posX": 28.70186,
                "posY": 2.06080317,
                "posZ": -19.8069019,
                "rotX": 0.273889154,
                "rotY": 179.980057,
                "rotZ": 180.382767,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mining Conglomerate",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8213,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "c6c19f",
              "Name": "Card",
              "Transform": {
                "posX": 29.13535,
                "posY": 1.49510384,
                "posZ": -27.2065487,
                "rotX": 4.54547653E-08,
                "rotY": 180.0,
                "rotZ": 4.10937531E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Deserted Alien Outpost",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9623,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "7703d0",
              "Name": "Card",
              "Transform": {
                "posX": -16.8208866,
                "posY": 2.6175065,
                "posZ": 17.128046,
                "rotX": 0.06911664,
                "rotY": 269.629761,
                "rotZ": 180.038483,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Imperium",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9649,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b10894",
              "Name": "Card",
              "Transform": {
                "posX": -1.80072021,
                "posY": 4.31360531,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mining Robots",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8208,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e13079",
              "Name": "Card",
              "Transform": {
                "posX": 25.83752,
                "posY": 1.49510384,
                "posZ": -15.99333,
                "rotX": 2.211372E-07,
                "rotY": 180.0,
                "rotZ": 5.96364146E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Artist Colony",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9628,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "61f9ca",
              "Name": "Card",
              "Transform": {
                "posX": 21.690403,
                "posY": 1.58320642,
                "posZ": -26.71321,
                "rotX": 0.05857315,
                "rotY": 179.976288,
                "rotZ": 180.487564,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Bio-Hazard Mining World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8603,
              "SidewaysCard": false,
              "CustomDeck": {
                "86": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557213584/0555A636404D892ACD5381D6A081D99D6ABE3133/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "234025",
              "Name": "Card",
              "Transform": {
                "posX": 27.1525574,
                "posY": 1.67731154,
                "posZ": -20.0625553,
                "rotX": 3.56485271,
                "rotY": 179.680023,
                "rotZ": 183.004318,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Public Works",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8211,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f2da72",
              "Name": "Card",
              "Transform": {
                "posX": 6.60263634,
                "posY": 5.013605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Investment Credits",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8202,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "606663",
              "Name": "Card",
              "Transform": {
                "posX": 11.4045553,
                "posY": 5.413605,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Replicant Robots",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8216,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "862896",
              "Name": "Card",
              "Transform": {
                "posX": -26.8728123,
                "posY": 1.49510384,
                "posZ": -19.407589,
                "rotX": -2.30334578E-07,
                "rotY": 179.999908,
                "rotZ": 1.44394946E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Space Port",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9650,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "10f66c",
              "Name": "Card",
              "Transform": {
                "posX": 29.13535,
                "posY": 1.49510384,
                "posZ": -20.8816032,
                "rotX": -2.22305356E-08,
                "rotY": 180.0,
                "rotZ": 3.87284615E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Base",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9612,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ae4b39",
              "Name": "Card",
              "Transform": {
                "posX": -16.8084373,
                "posY": 1.683086,
                "posZ": -17.1389313,
                "rotX": 0.000262969261,
                "rotY": 180.007584,
                "rotZ": -0.00125690107,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Tech Institute",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9663,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "af270b",
              "Name": "Card",
              "Transform": {
                "posX": 21.386879,
                "posY": 1.49507749,
                "posZ": -26.4477768,
                "rotX": 0.0003141299,
                "rotY": 180.002,
                "rotZ": -0.00202515512,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Merchant Guild",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8604,
              "SidewaysCard": false,
              "CustomDeck": {
                "86": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557213584/0555A636404D892ACD5381D6A081D99D6ABE3133/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 3,
                  "NumHeight": 2,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a71fa3",
              "Name": "Card",
              "Transform": {
                "posX": 26.39535,
                "posY": 1.49457192,
                "posZ": -18.3171635,
                "rotX": 0.006906837,
                "rotY": 179.971649,
                "rotZ": 180.0339,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pirate World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8200,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "084427",
              "Name": "Card",
              "Transform": {
                "posX": 18.3951836,
                "posY": 1.56306088,
                "posZ": -18.2227,
                "rotX": 359.99295,
                "rotY": 180.00029,
                "rotZ": 1.02957368,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Warrior Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9631,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1a70b2",
              "Name": "Card",
              "Transform": {
                "posX": 27.1268139,
                "posY": 1.67765474,
                "posZ": -20.9046783,
                "rotX": 3.425252,
                "rotY": 179.556961,
                "rotZ": 183.184464,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Drop Ships",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8212,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "efbdc5",
              "Name": "Card",
              "Transform": {
                "posX": -17.9028168,
                "posY": 1.67332768,
                "posZ": -16.4064274,
                "rotX": -0.00127233739,
                "rotY": 179.998581,
                "rotZ": 359.993683,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Trade League",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9664,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f36a24",
              "Name": "Card",
              "Transform": {
                "posX": 22.2626762,
                "posY": 1.49510384,
                "posZ": -27.2065487,
                "rotX": 4.67834838E-08,
                "rotY": 180.0,
                "rotZ": 4.328901E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Asteroid Belt",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9626,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3a1ad7",
              "Name": "Card",
              "Transform": {
                "posX": -16.8134232,
                "posY": 2.6421473,
                "posZ": 17.1208439,
                "rotX": 0.0293511041,
                "rotY": 270.084137,
                "rotZ": 179.845673,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "New Sparta",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8225,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "34e611",
              "Name": "Card",
              "Transform": {
                "posX": 1.80071831,
                "posY": 4.61360455,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Investment Credits",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8202,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "791814",
              "Name": "Card",
              "Transform": {
                "posX": -0.6002407,
                "posY": 4.41360474,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Genetics Lab",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8206,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b5d8c4",
              "Name": "Card",
              "Transform": {
                "posX": 27.0972176,
                "posY": 1.56817567,
                "posZ": -19.0353413,
                "rotX": 0.6555311,
                "rotY": 180.091965,
                "rotZ": 180.771088,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Interstellar Bank",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8203,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "66fa52",
              "Name": "Card",
              "Transform": {
                "posX": -11.4045563,
                "posY": 3.51360488,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Earth's Lost Colony",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8222,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2105e4",
              "Name": "Card",
              "Transform": {
                "posX": 10.2040749,
                "posY": 5.31360531,
                "posZ": -33.6,
                "rotX": 0.0,
                "rotY": 180.0,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alpha Centauri",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8221,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a581bc",
              "Name": "Card",
              "Transform": {
                "posX": -22.29516,
                "posY": 1.62422252,
                "posZ": -19.0067787,
                "rotX": 359.267975,
                "rotY": 180.000122,
                "rotZ": 9.583278E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Gambling World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9658,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "22920b",
              "Name": "Card",
              "Transform": {
                "posX": 20.66694,
                "posY": 1.49510384,
                "posZ": -15.380743,
                "rotX": -5.267607E-07,
                "rotY": 180.0,
                "rotZ": -8.56675456E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Secluded World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9600,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "89d299",
              "Name": "Card",
              "Transform": {
                "posX": 26.0420742,
                "posY": 2.39913845,
                "posZ": -20.0004025,
                "rotX": 3.81325245,
                "rotY": 180.127441,
                "rotZ": 181.964584,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Diversified Economy",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 8218,
              "SidewaysCard": false,
              "CustomDeck": {
                "82": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557179270/C9D2E371D8FB958993105236CC8498117A336329/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8e28da",
              "Name": "Card",
              "Transform": {
                "posX": 22.2626762,
                "posY": 1.49510384,
                "posZ": -17.71913,
                "rotX": 1.0031092E-07,
                "rotY": 180.0,
                "rotZ": 3.89303324E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Malevolent Lifeforms",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9610,
              "SidewaysCard": false,
              "CustomDeck": {
                "96": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1867318528556038627/21778F232C5D1487D52C63DB2DAC8D09AEF71366/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "d95c9e",
          "Name": "Infinite_Bag",
          "Transform": {
            "posX": -32.0902824,
            "posY": 4.052652,
            "posZ": 32.8213959,
            "rotX": 358.5251,
            "rotY": 0.0188644417,
            "rotZ": 358.526917,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Tied Goals VP",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9111498,
            "g": 0.4223106,
            "b": 0.046033524
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "9f1437",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -21.2730637,
                "posY": 3.54390883,
                "posZ": 18.5614681,
                "rotX": 4.096207,
                "rotY": 179.951126,
                "rotZ": 359.498749,
                "scaleX": 0.800449252,
                "scaleY": 1.0,
                "scaleZ": 0.800449252
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Tags": [
                "Tied Chip",
                "VP"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1910106289014972649/E718EFD0970EE6F6E4D0F8E95801253FF2FB69F4/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 1,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "owner = nil\r\ntiedGoal = \"\"\r\n\r\nfunction onsave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedGoal = tiedGoal\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= '' then\r\n        local data = JSON.decode(saved_data)\r\n    end\r\nend",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "bfc713",
          "Name": "Deck",
          "Transform": {
            "posX": -32.94329,
            "posY": 4.19817829,
            "posZ": 33.16607,
            "rotX": 0.118719853,
            "rotY": 179.981171,
            "rotZ": 177.729263,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            9803,
            9814,
            9814,
            9817,
            9810,
            9816,
            9812,
            9811,
            9800,
            9808,
            9819,
            9813,
            9801,
            9804,
            9805,
            9806,
            9807,
            9818,
            9802,
            9809,
            9815,
            9815
          ],
          "CustomDeck": {
            "98": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "736e52",
              "Name": "Card",
              "Transform": {
                "posX": -19.8845253,
                "posY": 1.758127,
                "posZ": 23.01738,
                "rotX": 0.003946628,
                "rotY": 179.999969,
                "rotZ": 179.801392,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Toy Shop",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9803,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "bbb875",
              "Name": "Card",
              "Transform": {
                "posX": 21.9821625,
                "posY": 1.49506521,
                "posZ": -17.3551865,
                "rotX": 0.0003980781,
                "rotY": 180.010788,
                "rotZ": -0.00258030859,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Improved Logistics",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9814,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "6eef79",
              "Name": "Card",
              "Transform": {
                "posX": 21.9888229,
                "posY": 1.54445314,
                "posZ": -17.3133278,
                "rotX": 0.01249279,
                "rotY": 180.010788,
                "rotZ": 359.983276,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Improved Logistics",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9814,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "95fe90",
              "Name": "Card",
              "Transform": {
                "posX": 19.69127,
                "posY": 1.49510384,
                "posZ": -17.3551865,
                "rotX": -1.18017205E-07,
                "rotY": 179.9914,
                "rotZ": -5.37571736E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Doomed World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9817,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "dd0c39",
              "Name": "Card",
              "Transform": {
                "posX": 19.69127,
                "posY": 1.49510384,
                "posZ": -20.51766,
                "rotX": -6.032694E-08,
                "rotY": 180.02034,
                "rotZ": -4.72473943E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Genome Project",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9810,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8a76a9",
              "Name": "Card",
              "Transform": {
                "posX": 21.9142761,
                "posY": 1.50957811,
                "posZ": -20.804184,
                "rotX": 359.458374,
                "rotY": 180.019669,
                "rotZ": 7.73987E-06,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Separatist Colony",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9816,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "75b447",
              "Name": "Card",
              "Transform": {
                "posX": 24.2730541,
                "posY": 1.49510384,
                "posZ": -20.51766,
                "rotX": 1.3727929E-08,
                "rotY": 180.0381,
                "rotZ": -4.01367117E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Volcanic World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9812,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "bacc4a",
              "Name": "Card",
              "Transform": {
                "posX": 24.2730541,
                "posY": 1.49510407,
                "posZ": -17.3551865,
                "rotX": -1.38057473E-07,
                "rotY": 180.045166,
                "rotZ": -1.19404191E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Contact Specialist",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9811,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "16e9a8",
              "Name": "Card",
              "Transform": {
                "posX": 21.9821625,
                "posY": 1.49510157,
                "posZ": -23.6801319,
                "rotX": 2.50391186E-05,
                "rotY": 179.981934,
                "rotZ": -0.000156701979,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Studios",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9800,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "542bc4",
              "Name": "Card",
              "Transform": {
                "posX": 24.2730541,
                "posY": 1.49510384,
                "posZ": -23.6801319,
                "rotX": -2.18584034E-07,
                "rotY": 179.9677,
                "rotZ": -1.02982717E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Clandestine Uplift Lab",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9808,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e66069",
              "Name": "Card",
              "Transform": {
                "posX": 26.5639439,
                "posY": 1.49510384,
                "posZ": -20.51766,
                "rotX": 5.319926E-08,
                "rotY": 179.979767,
                "rotZ": 2.36288038E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ancient Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9819,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d009dd",
              "Name": "Card",
              "Transform": {
                "posX": 26.5639439,
                "posY": 1.49510384,
                "posZ": -17.3551865,
                "rotX": -8.148573E-09,
                "rotY": 180.0261,
                "rotZ": -5.67822767E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Lords",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9813,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d02686",
              "Name": "Card",
              "Transform": {
                "posX": 19.69127,
                "posY": 1.49510384,
                "posZ": -26.8426056,
                "rotX": -2.054288E-07,
                "rotY": 180.015488,
                "rotZ": -4.79755954E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Deserted Alien World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9801,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "bce504",
              "Name": "Card",
              "Transform": {
                "posX": 21.9821625,
                "posY": 1.49510384,
                "posZ": -26.8426056,
                "rotX": 3.688183E-08,
                "rotY": 179.9914,
                "rotZ": -7.810409E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Smuggling Lair",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9804,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "7e2029",
              "Name": "Card",
              "Transform": {
                "posX": 24.2730522,
                "posY": 1.49510384,
                "posZ": -26.8426056,
                "rotX": -2.58497241E-08,
                "rotY": 180.044128,
                "rotZ": -4.55458036E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Sympathizers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9805,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "9c749c",
              "Name": "Card",
              "Transform": {
                "posX": 26.563942,
                "posY": 1.49510384,
                "posZ": -26.84284,
                "rotX": -3.20761529E-07,
                "rotY": 180.004959,
                "rotZ": 6.746106E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Hive World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9806,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1b73bc",
              "Name": "Card",
              "Transform": {
                "posX": 26.5639458,
                "posY": 1.49510384,
                "posZ": -23.6801319,
                "rotX": 4.22493173E-07,
                "rotY": 180.023117,
                "rotZ": -7.07412937E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Bazaar",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9807,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "67c572",
              "Name": "Card",
              "Transform": {
                "posX": 28.8548355,
                "posY": 1.49510384,
                "posZ": -20.51766,
                "rotX": 1.22128787E-08,
                "rotY": 179.98175,
                "rotZ": -2.396602E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Damaged Alien Factory",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9818,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "fa967b",
              "Name": "Card",
              "Transform": {
                "posX": 28.8548355,
                "posY": 1.49510384,
                "posZ": -26.8426056,
                "rotX": -1.0561395E-07,
                "rotY": 180.012955,
                "rotZ": -4.46892983E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Terraforming Guild",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9802,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "fd985b",
              "Name": "Card",
              "Transform": {
                "posX": 28.8548355,
                "posY": 1.49510384,
                "posZ": -23.6801319,
                "rotX": -2.03819948E-08,
                "rotY": 180.0431,
                "rotZ": -3.4743303E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Colony",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9809,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "bea775",
              "Name": "Card",
              "Transform": {
                "posX": 28.8548355,
                "posY": 1.49507689,
                "posZ": -17.3551865,
                "rotX": 0.000277836254,
                "rotY": 179.991425,
                "rotZ": -0.00179691508,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Space Mercenaries",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9815,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d089a4",
              "Name": "Card",
              "Transform": {
                "posX": 29.1189671,
                "posY": 1.54463935,
                "posZ": -17.4594517,
                "rotX": -0.00185741647,
                "rotY": 179.991425,
                "rotZ": -0.00210148771,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Space Mercenaries",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9815,
              "SidewaysCard": false,
              "CustomDeck": {
                "98": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1861691839688244359/B5086534AD30B6003E34CD3A629B6B9BFBDB9363/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "d7de72",
          "Name": "Deck",
          "Transform": {
            "posX": -31.7145176,
            "posY": 4.29710627,
            "posZ": 32.86488,
            "rotX": 0.508060932,
            "rotY": 180.013779,
            "rotZ": 182.107727,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            9921,
            9912,
            9924,
            9917,
            9934,
            9932,
            9930,
            9932,
            9922,
            9914,
            9927,
            9930,
            9904,
            9928,
            9931,
            9929,
            9906,
            9901,
            9923,
            9936,
            9929,
            9918,
            9915,
            9913,
            9920,
            9919,
            9911,
            9910,
            9927,
            9935,
            9905,
            9928,
            9903,
            9902,
            9925,
            9926,
            9916,
            9933,
            9907,
            9900,
            9909,
            9933,
            9937,
            9931,
            9908
          ],
          "CustomDeck": {
            "99": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "b2b9b8",
              "Name": "Card",
              "Transform": {
                "posX": -25.1075249,
                "posY": 2.218868,
                "posZ": 23.0276432,
                "rotX": 0.005668361,
                "rotY": 180.001785,
                "rotZ": 197.011368,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Bankers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9921,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0b867c",
              "Name": "Card",
              "Transform": {
                "posX": 18.1067142,
                "posY": 1.49510384,
                "posZ": -23.7106667,
                "rotX": -2.96310869E-08,
                "rotY": 180.0,
                "rotZ": -1.35354085E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Stronghold",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9912,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "5f9942",
              "Name": "Card",
              "Transform": {
                "posX": 22.6884956,
                "posY": 1.49510384,
                "posZ": -20.5481949,
                "rotX": -8.509123E-08,
                "rotY": 180.0,
                "rotZ": -1.31139572E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Smuggling World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9924,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e06c2c",
              "Name": "Card",
              "Transform": {
                "posX": 18.10673,
                "posY": 1.50862348,
                "posZ": -30.03566,
                "rotX": 359.49408,
                "rotY": 180.000412,
                "rotZ": -6.026488E-06,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Interstellar Prospectors",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9917,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0a720c",
              "Name": "Card",
              "Transform": {
                "posX": 29.56117,
                "posY": 1.50461757,
                "posZ": -17.38574,
                "rotX": -0.000105282292,
                "rotY": 179.999069,
                "rotZ": 359.502869,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Developers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9934,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "6172ed",
              "Name": "Card",
              "Transform": {
                "posX": -25.7206554,
                "posY": 1.49527574,
                "posZ": 21.0933952,
                "rotX": -0.0008418445,
                "rotY": 179.9899,
                "rotZ": 0.0101663,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Cloaking Technology",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9932,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "93f03b",
              "Name": "Card",
              "Transform": {
                "posX": -22.7381649,
                "posY": 1.54463577,
                "posZ": 20.05505,
                "rotX": 0.00180730107,
                "rotY": 179.998215,
                "rotZ": 359.9908,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "R&D Crash Program",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9930,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2a338a",
              "Name": "Card",
              "Transform": {
                "posX": -26.025732,
                "posY": 1.53135169,
                "posZ": 20.6423817,
                "rotX": 359.799255,
                "rotY": 179.990784,
                "rotZ": 359.488861,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Cloaking Technology",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9932,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3b23a1",
              "Name": "Card",
              "Transform": {
                "posX": 31.8521156,
                "posY": 1.51360285,
                "posZ": -23.7106724,
                "rotX": 6.56138627E-06,
                "rotY": 180.000031,
                "rotZ": -3.149931E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Alliance",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9922,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "9a1346",
              "Name": "Card",
              "Transform": {
                "posX": 22.6884975,
                "posY": 1.49510384,
                "posZ": -23.7106667,
                "rotX": 4.24082849E-08,
                "rotY": 180.0,
                "rotZ": -5.766336E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Convict Mines",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9914,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "633556",
              "Name": "Card",
              "Transform": {
                "posX": -17.9781227,
                "posY": 1.56530046,
                "posZ": 16.5141773,
                "rotX": 0.00260836468,
                "rotY": 180.000092,
                "rotZ": 1.21304762,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mercenary Fleet",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9927,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "46bb96",
              "Name": "Card",
              "Transform": {
                "posX": -23.0421238,
                "posY": 1.49507606,
                "posZ": 20.3330231,
                "rotX": 0.000283205416,
                "rotY": 179.998215,
                "rotZ": -0.00184773025,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "R&D Crash Program",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9930,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "07ef32",
              "Name": "Card",
              "Transform": {
                "posX": 24.9794083,
                "posY": 1.50862467,
                "posZ": -30.0355511,
                "rotX": 359.494446,
                "rotY": 179.999512,
                "rotZ": -3.120381E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Seat",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9904,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ced345",
              "Name": "Card",
              "Transform": {
                "posX": -29.7199116,
                "posY": 1.55113721,
                "posZ": 20.9237,
                "rotX": 0.0355051868,
                "rotY": 180.0041,
                "rotZ": 359.8151,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Troops",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9928,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d09cc2",
              "Name": "Card",
              "Transform": {
                "posX": -27.7161331,
                "posY": 1.56810689,
                "posZ": 17.82897,
                "rotX": 0.760148466,
                "rotY": 179.9992,
                "rotZ": 359.9442,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Pact",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9931,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "20e7e8",
              "Name": "Card",
              "Transform": {
                "posX": -20.2318058,
                "posY": 1.49508464,
                "posZ": 17.6023178,
                "rotX": 0.000210438331,
                "rotY": 180.000061,
                "rotZ": -0.0012986064,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Salon",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9929,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "004149",
              "Name": "Card",
              "Transform": {
                "posX": 20.397625,
                "posY": 1.50862408,
                "posZ": -30.0355473,
                "rotX": 359.494415,
                "rotY": 179.999542,
                "rotZ": -3.458537E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Universal Symbionts",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9906,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4f4bdd",
              "Name": "Card",
              "Transform": {
                "posX": 31.85207,
                "posY": 1.88024545,
                "posZ": -30.044117,
                "rotX": 346.137543,
                "rotY": 180.003586,
                "rotZ": -0.000371418748,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Monolith",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9901,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "90b41c",
              "Name": "Card",
              "Transform": {
                "posX": 24.97939,
                "posY": 1.49510384,
                "posZ": -20.5481949,
                "rotX": 1.57415521E-08,
                "rotY": 180.0,
                "rotZ": -4.95459E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Abandoned Alien Uplift Camp",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9923,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "5e5622",
              "Name": "Card",
              "Transform": {
                "posX": 20.3976059,
                "posY": 1.49510384,
                "posZ": -14.2232819,
                "rotX": 1.84613512E-07,
                "rotY": 180.0,
                "rotZ": 1.35754624E-06,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Warlord",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9936,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "17cb4b",
              "Name": "Card",
              "Transform": {
                "posX": -20.4372215,
                "posY": 1.54456973,
                "posZ": 17.82193,
                "rotX": 0.004325902,
                "rotY": 180.000061,
                "rotZ": 359.994,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Salon",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9929,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3bd011",
              "Name": "Card",
              "Transform": {
                "posX": 29.5612488,
                "posY": 1.504601,
                "posZ": -23.71067,
                "rotX": 0.0001255169,
                "rotY": 179.999222,
                "rotZ": 359.503448,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Gem Smugglers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9918,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b61438",
              "Name": "Card",
              "Transform": {
                "posX": 20.3976059,
                "posY": 1.49510384,
                "posZ": -23.7106667,
                "rotX": -9.60146E-08,
                "rotY": 180.0,
                "rotZ": -1.08293207E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Uplift Code",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9915,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ae2661",
              "Name": "Card",
              "Transform": {
                "posX": 31.8521137,
                "posY": 1.513602,
                "posZ": -26.873148,
                "rotX": 5.434124E-06,
                "rotY": 180.0,
                "rotZ": 3.5527612E-06,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Devolved Uplift Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9913,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "91c191",
              "Name": "Card",
              "Transform": {
                "posX": 20.3976078,
                "posY": 1.49510384,
                "posZ": -20.5481949,
                "rotX": 4.17669845E-08,
                "rotY": 180.0,
                "rotZ": -3.71096078E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dying Colony",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9920,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "775abe",
              "Name": "Card",
              "Transform": {
                "posX": 27.2702789,
                "posY": 1.49510384,
                "posZ": -23.7106667,
                "rotX": -1.951223E-07,
                "rotY": 180.0,
                "rotZ": -7.405792E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Hidden Fortress",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9919,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "14a5a5",
              "Name": "Card",
              "Transform": {
                "posX": -21.5039959,
                "posY": 1.97889042,
                "posZ": 25.7448368,
                "rotX": 0.000200741852,
                "rotY": 179.999191,
                "rotZ": -0.000172058222,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pan-Galactic Research",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9911,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e19d0d",
              "Name": "Card",
              "Transform": {
                "posX": 27.2702789,
                "posY": 1.49510384,
                "posZ": -26.87314,
                "rotX": -5.36711475E-08,
                "rotY": 180.0,
                "rotZ": -1.04060952E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Research Labs",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9910,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "21d36f",
              "Name": "Card",
              "Transform": {
                "posX": -18.0917454,
                "posY": 1.52566934,
                "posZ": 16.6647434,
                "rotX": 0.002639033,
                "rotY": 179.994476,
                "rotZ": 1.59491241,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mercenary Fleet",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9927,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "dbb222",
              "Name": "Card",
              "Transform": {
                "posX": 22.6884975,
                "posY": 1.49510384,
                "posZ": -14.2232819,
                "rotX": -5.26623367E-09,
                "rotY": 180.000015,
                "rotZ": 3.001051E-09,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Cantina",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9935,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "42c62f",
              "Name": "Card",
              "Transform": {
                "posX": 22.6885166,
                "posY": 1.50862491,
                "posZ": -30.0355511,
                "rotX": 359.494415,
                "rotY": 179.999542,
                "rotZ": -3.205924E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Gene Designers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9905,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "689a37",
              "Name": "Card",
              "Transform": {
                "posX": -29.2739925,
                "posY": 1.49529517,
                "posZ": 21.16987,
                "rotX": -0.00154100417,
                "rotY": 180.004166,
                "rotZ": 0.0121616581,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Troops",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9928,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "021553",
              "Name": "Card",
              "Transform": {
                "posX": 27.2703,
                "posY": 1.50862455,
                "posZ": -30.0355511,
                "rotX": 359.494446,
                "rotY": 179.999481,
                "rotZ": -3.611997E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Trading Outpost",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9903,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3249b9",
              "Name": "Card",
              "Transform": {
                "posX": 29.5732574,
                "posY": 1.76516676,
                "posZ": -30.0378189,
                "rotX": 359.481873,
                "rotY": 179.90979,
                "rotZ": 346.451965,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Data Repository",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9902,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2c491d",
              "Name": "Card",
              "Transform": {
                "posX": 29.5612488,
                "posY": 1.50460064,
                "posZ": -20.5481968,
                "rotX": 3.18099433E-06,
                "rotY": 179.999222,
                "rotZ": 359.503265,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Exchange",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9925,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "442247",
              "Name": "Card",
              "Transform": {
                "posX": 27.2702789,
                "posY": 1.49510384,
                "posZ": -20.5481949,
                "rotX": -8.642839E-08,
                "rotY": 180.0,
                "rotZ": -1.74249777E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Primitive Rebel World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9926,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2090eb",
              "Name": "Card",
              "Transform": {
                "posX": 24.9793873,
                "posY": 1.49510384,
                "posZ": -23.7106667,
                "rotX": -4.11550474E-08,
                "rotY": 180.0,
                "rotZ": -1.235358E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Blaster Runners",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9916,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0eb941",
              "Name": "Card",
              "Transform": {
                "posX": -17.44412,
                "posY": 1.52174652,
                "posZ": 20.2461014,
                "rotX": 0.02333044,
                "rotY": 180.009384,
                "rotZ": 359.2059,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Advertisers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9933,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "bcedf6",
              "Name": "Card",
              "Transform": {
                "posX": 22.6884956,
                "posY": 1.49510384,
                "posZ": -26.87314,
                "rotX": -9.546877E-08,
                "rotY": 180.0,
                "rotZ": 5.57955353E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Uplift Center",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9907,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a20102",
              "Name": "Card",
              "Transform": {
                "posX": 18.1067142,
                "posY": 1.49510384,
                "posZ": -26.87314,
                "rotX": -1.00806858E-07,
                "rotY": 180.0,
                "rotZ": -6.16057E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Insect Uplift Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9900,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ced109",
              "Name": "Card",
              "Transform": {
                "posX": 29.5612488,
                "posY": 1.504619,
                "posZ": -26.87317,
                "rotX": -0.000878475,
                "rotY": 180.000656,
                "rotZ": 359.50296,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Blaster Gem Consortium",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9909,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "bb0f9c",
              "Name": "Card",
              "Transform": {
                "posX": -17.48051,
                "posY": 1.49453616,
                "posZ": 20.5362835,
                "rotX": 0.00640792632,
                "rotY": 180.0088,
                "rotZ": 359.961456,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Advertisers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9933,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8302f2",
              "Name": "Card",
              "Transform": {
                "posX": 18.1067162,
                "posY": 1.49510372,
                "posZ": -14.2232819,
                "rotX": 9.316642E-08,
                "rotY": 180.000015,
                "rotZ": 1.80783036E-06,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Gambling World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9937,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "32ea09",
              "Name": "Card",
              "Transform": {
                "posX": -27.4245663,
                "posY": 1.52374637,
                "posZ": 18.0592213,
                "rotX": 1.03179479,
                "rotY": 179.974686,
                "rotZ": 359.943878,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Pact",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9931,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "c8a94c",
              "Name": "Card",
              "Transform": {
                "posX": 20.3976078,
                "posY": 1.49510384,
                "posZ": -26.87314,
                "rotX": -3.79428178E-09,
                "rotY": 180.0,
                "rotZ": -9.543204E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Prospecting Guild",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 9908,
              "SidewaysCard": false,
              "CustomDeck": {
                "99": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1910106289019316805/84D3757D819880B42B79869795378FD0E36FD2A0/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "c2e459",
          "Name": "Bag",
          "Transform": {
            "posX": -31.924612,
            "posY": 3.912302,
            "posZ": 32.4831657,
            "rotX": 358.100372,
            "rotY": -0.00299011613,
            "rotZ": 358.403961,
            "scaleX": 0.750000238,
            "scaleY": 0.750000238,
            "scaleZ": 0.750000238
          },
          "Nickname": "VP Pool",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.230975062,
            "g": 0.148735285,
            "b": 0.862369359
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "Number": 0,
          "Bag": {
            "Order": 0
          },
          "LuaScript": "function onObjectLeaveContainer(container, leave_object)\r\n     if container == self and #self.getObjects() <= 0 and not Global.getVar(\"gameEndMessage\") then\r\n          broadcastToAll(\"VP pool has been emptied! This will be the final round.\", \"Purple\")\r\n          Global.setVar(\"gameEndMessage\", true)\r\n          Global.call(\"replaceVpBag\")\r\n     end\r\nend",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "17753d",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -15.6979942,
            "posY": 3.59322643,
            "posZ": 37.43695,
            "rotX": -3.68661773E-07,
            "rotY": 180.001968,
            "rotZ": -6.37808853E-07,
            "scaleX": 1.1523807,
            "scaleY": 1.0,
            "scaleZ": 1.1523807
          },
          "Nickname": "Prestige Leader",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "PrestigeLeader",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1930373378498445746/E6865C8D6898CB0B77E4A8C632356D4BF6A349C4/",
            "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1930373378498445691/496A825E6B7ADEDE01F169374D051B958C836167/",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5719f7",
          "Name": "Infinite_Bag",
          "Transform": {
            "posX": -32.4616547,
            "posY": 4.07000971,
            "posZ": 33.1072159,
            "rotX": 0.766180456,
            "rotY": 180.038071,
            "rotZ": 0.0812625,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "VP Chips",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.3058885,
            "g": 0.372555166,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "96e9bc",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -18.1589756,
                "posY": 3.60860562,
                "posZ": 27.1297226,
                "rotX": 351.729462,
                "rotY": 0.320196629,
                "rotZ": 177.952515,
                "scaleX": 0.628697336,
                "scaleY": 1.0,
                "scaleZ": 0.628697336
              },
              "Nickname": "VP",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Tags": [
                "VP",
                "VP Chip"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843672021690778648/5E34206EE964C04E455D4B75D9A38670607BA51E/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 1,
                  "Thickness": 0.1,
                  "Stackable": true,
                  "Stretch": false
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "77721b",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -33.05746,
            "posY": 4.0466876,
            "posZ": 32.9945221,
            "rotX": 1.76498783,
            "rotY": 179.885452,
            "rotZ": 356.220764,
            "scaleX": 0.499943346,
            "scaleY": 1.0,
            "scaleZ": 0.499943346
          },
          "Nickname": "Prestige Search Button",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1930373378497212608/06AD7ABCDAAC8FBBCD53D674631C624D18E34D6D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 0,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Prestige Search Button.77721b.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Prestige Search Button.77721b.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/actionSelectMenu\")\r\n\r\nplayer = \"Green\"\r\n\r\nactionZone_GUID = Global.getVar(\"actionZone_GUID\")[4]\r\nselectedActionCardTile_GUID = \"2c39a5\"\r\nselectedActionCardZone_GUID = \"326786\"\nend)\n__bundle_register(\"RftG/actionSelectMenu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nprestigeButton_GUID = {['b5027c']=1,['77721b']=1,['a276bc']=1,['09bbe0']=1}\r\ntargetActionCardName = \"\"\r\nselectedActions = {}\r\nbtnIndexOffset = 7\r\nadv2pBtnIndexOffset = 9\r\n\r\nfunction onload()\r\n     actionZone = getObjectFromGUID(actionZone_GUID)\r\n     selectedActionCardTile = getObjectFromGUID(selectedActionCardTile_GUID)\r\n     selectedActionCardZone = getObjectFromGUID(selectedActionCardZone_GUID)\r\n\r\n     buttonIndex = {}\r\n     adv2pButtonIndex = {}\r\n\r\n     if prestigeButton_GUID[self.getGUID()] then prestigeSearch = true end\r\n\r\n     if prestigeSearch then\r\n          btnIndexOffset = 1\r\n          adv2pBtnIndexOffset = 2\r\n          buttonIndex[\"Prestige / Search\"] = 0\r\n          adv2pButtonIndex[\"Prestige / Search\"] = 1\r\n     else\r\n          local i = 0\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNames\")) do\r\n               buttonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n\r\n          local i = 14\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNamesAdv2p\")) do\r\n               adv2pButtonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n     end\r\n\r\n     createButtons()\r\n\r\n     refreshButtonHighlights()\r\n\r\n     local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local hideFrom = {}\r\n     for _, target in pairs(players) do\r\n          if target ~= player then\r\n               hideFrom[#hideFrom + 1] = target\r\n          end\r\n     end\r\n\r\n     self.setInvisibleTo(hideFrom)\r\nend\r\n\r\nfunction createButtons()\r\n     local tooltips = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local tooltips2pAdv = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local clickFunc = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"settleClick\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local clickFunc2pAdv = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"develop2Click\",\r\n          \"settleClick\",\r\n          \"settle2Click\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local startx = -5.73\r\n     local startx2p = 7.63\r\n\r\n     if prestigeSearch then\r\n          tooltips = {\"Prestige / Search\"}\r\n          tooltips2pAdv = tooltips\r\n          clickFunc = {\"prestigeSearchClick\"}\r\n          clickFunc2pAdv = clickFunc\r\n          startx = 0\r\n          startx2p = 0\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = clickFunc[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx + (i-1) * 1.905, 0.11, 0},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips[i]\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx + (i-1) * 1.905, 0.11, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = clickFunc2pAdv[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx2p - (i-1) * 1.895, 0, 0},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips2pAdv[i]\r\n          })\r\n     end\r\n\r\n     -- these extra set of buttons are for highlighting selected actions\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx2p - (i-1) * 1.895, 0, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\nend\r\n\r\nfunction explore5Click()\r\n     targetActionCardName = \"Explore (+5)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction explore11Click()\r\n     targetActionCardName = \"Explore (+1,+1)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction developClick()\r\n     targetActionCardName = \"Develop\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction develop2Click()\r\n     targetActionCardName = \"DevelopAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settleClick()\r\n     targetActionCardName = \"Settle\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settle2Click()\r\n     targetActionCardName = \"SettleAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumeTradeClick()\r\n     targetActionCardName = \"Consume ($)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumex2Click()\r\n     targetActionCardName = \"Consume (x2)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction produceClick()\r\n     targetActionCardName = \"Produce\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction prestigeSearchClick()\r\n     targetActionCardName = \"Prestige / Search\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction selectPhaseCo()\r\n     if Global.getVar(\"gameStarted\") == false or Global.getVar(\"currentPhaseIndex\") ~= 0 then\r\n          return 1\r\n     end\r\n\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n     local targetName = targetActionCardName\r\n\r\n     if adv2p then\r\n          -- Check to see if action was already selected. If so, just return it back to selection area\r\n          if checkIfSelected(targetName) then\r\n               returnSelectedActionCard(targetName)\r\n               return 1\r\n          end\r\n     else\r\n          returnSelectedActionCard()\r\n     end\r\n\r\n     wait(0.01)\r\n\r\n     local sp = selectedActionCardTile.getSnapPoints()\r\n     local rot = self.getRotation()\r\n     local objs = actionZone.getObjects()\r\n     local targetSnapIndex = 1\r\n\r\n     if adv2p then\r\n          local cardN = countSelectedActionCards()\r\n\r\n          -- too many selected cards\r\n          if cardN >= 2 then\r\n               return 1\r\n          elseif cardN == 1 then\r\n               -- move the other card into the correct spot just in case\r\n               for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n                    if obj.hasTag(\"Action Card\") then\r\n                         obj.setPositionSmooth(selectedActionCardTile.positionToWorld(sp[2].position))\r\n                         break\r\n                    end\r\n               end\r\n          end\r\n\r\n          targetSnapIndex = targetSnapIndex + 1 + cardN\r\n     end\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.type == \"Card\" and getName(obj) == targetName then\r\n               local pos = selectedActionCardTile.positionToWorld(sp[targetSnapIndex].position)\r\n\r\n               obj.setPosition({pos[1], pos[2] + 1, pos[3]})\r\n               obj.setRotation({rot[1], rot[2], 180})\r\n               return 1\r\n          end\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction returnSelectedActionCard(name)\r\n     local objs = selectedActionCardZone.getObjects()\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               if not name or name == getName(obj) then\r\n                    obj.setPosition(actionZone.getPosition())\r\n                    obj.setRotationSmooth({obj.getRotation()[1],obj.getRotation()[2], 0})\r\n                    if name then return end\r\n               end\r\n          end\r\n     end\r\nend\r\n\r\nfunction placeCardAtSnapPoint(card, spOwner, sp, faceDown)\r\n     local rot = spOwner.getRotation()\r\n\r\n     for i=1, 3 do\r\n          rot[i] = rot[i] + sp.rotation[i]\r\n     end\r\n\r\n     if faceDown then rot[3] = 180 end\r\n\r\n     local pos = spOwner.positionToWorld(sp.position)\r\n     card.setPositionSmooth({pos[1], pos[2] + 0.15, pos[3]})\r\n     card.setRotationSmooth(rot)\r\nend\r\n\r\nfunction checkIfSelected(actionName)\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.type == 'Card' and obj.hasTag(\"Action Card\") and getName(obj) == actionName then\r\n               return true\r\n          end\r\n     end\r\n\r\n     return false\r\nend\r\n\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction countSelectedActionCards()\r\n     local n = 0\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               n = n + 1\r\n          end\r\n     end\r\n\r\n     return n\r\nend\r\n\r\nfunction onObjectEnterZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, true)\r\n          end\r\n     end\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction refreshButtonHighlights()\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     local startInd = btnIndexOffset\r\n     local endInd = btnIndexOffset * 2 - 1\r\n\r\n     if adv2p then\r\n          startInd = btnIndexOffset * 2 + adv2pBtnIndexOffset\r\n          endInd = (btnIndexOffset + adv2pBtnIndexOffset) * 2 - 1\r\n     end\r\n\r\n     if prestigeSearch then \r\n          startInd = 1\r\n          endInd = 1\r\n     end\r\n\r\n     for i=startInd, endInd do\r\n          self.editButton({\r\n               index = i,\r\n               color = color(0,0,0,0)\r\n          })\r\n     end\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               local ind = adv2pButtonIndex[getName(obj)]\r\n\r\n               if ind then\r\n                    local name = getName(obj)\r\n                    local index = adv2p and adv2pButtonIndex[name] + adv2pBtnIndexOffset or buttonIndex[name] + btnIndexOffset\r\n\r\n                    if prestigeSearch and obj.hasTag(\"PrestigeSearch\") then\r\n                         index = 1\r\n                    end\r\n\r\n                    self.editButton({\r\n                         index = index,\r\n                         color = color(0,0,0,0.8)\r\n                    })\r\n               end\r\n          end\r\n     end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Prestige Search Button.77721b.lua\")",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "b5027c",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -31.927721,
            "posY": 4.033994,
            "posZ": 31.8930969,
            "rotX": 3.64380469E-07,
            "rotY": 180.007263,
            "rotZ": -4.0849153E-07,
            "scaleX": 0.499943346,
            "scaleY": 1.0,
            "scaleZ": 0.499943346
          },
          "Nickname": "Prestige Search Button",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1930373378497212608/06AD7ABCDAAC8FBBCD53D674631C624D18E34D6D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 0,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Prestige Search Button.b5027c.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Prestige Search Button.b5027c.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/actionSelectMenu\")\r\n\r\nplayer = \"Red\"\r\n\r\nactionZone_GUID = Global.getVar(\"actionZone_GUID\")[2]\r\nselectedActionCardTile_GUID = \"3e3772\"\r\nselectedActionCardZone_GUID = \"820d9e\"\nend)\n__bundle_register(\"RftG/actionSelectMenu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nprestigeButton_GUID = {['b5027c']=1,['77721b']=1,['a276bc']=1,['09bbe0']=1}\r\ntargetActionCardName = \"\"\r\nselectedActions = {}\r\nbtnIndexOffset = 7\r\nadv2pBtnIndexOffset = 9\r\n\r\nfunction onload()\r\n     actionZone = getObjectFromGUID(actionZone_GUID)\r\n     selectedActionCardTile = getObjectFromGUID(selectedActionCardTile_GUID)\r\n     selectedActionCardZone = getObjectFromGUID(selectedActionCardZone_GUID)\r\n\r\n     buttonIndex = {}\r\n     adv2pButtonIndex = {}\r\n\r\n     if prestigeButton_GUID[self.getGUID()] then prestigeSearch = true end\r\n\r\n     if prestigeSearch then\r\n          btnIndexOffset = 1\r\n          adv2pBtnIndexOffset = 2\r\n          buttonIndex[\"Prestige / Search\"] = 0\r\n          adv2pButtonIndex[\"Prestige / Search\"] = 1\r\n     else\r\n          local i = 0\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNames\")) do\r\n               buttonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n\r\n          local i = 14\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNamesAdv2p\")) do\r\n               adv2pButtonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n     end\r\n\r\n     createButtons()\r\n\r\n     refreshButtonHighlights()\r\n\r\n     local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local hideFrom = {}\r\n     for _, target in pairs(players) do\r\n          if target ~= player then\r\n               hideFrom[#hideFrom + 1] = target\r\n          end\r\n     end\r\n\r\n     self.setInvisibleTo(hideFrom)\r\nend\r\n\r\nfunction createButtons()\r\n     local tooltips = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local tooltips2pAdv = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local clickFunc = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"settleClick\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local clickFunc2pAdv = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"develop2Click\",\r\n          \"settleClick\",\r\n          \"settle2Click\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local startx = -5.73\r\n     local startx2p = 7.63\r\n\r\n     if prestigeSearch then\r\n          tooltips = {\"Prestige / Search\"}\r\n          tooltips2pAdv = tooltips\r\n          clickFunc = {\"prestigeSearchClick\"}\r\n          clickFunc2pAdv = clickFunc\r\n          startx = 0\r\n          startx2p = 0\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = clickFunc[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx + (i-1) * 1.905, 0.11, 0},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips[i]\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx + (i-1) * 1.905, 0.11, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = clickFunc2pAdv[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx2p - (i-1) * 1.895, 0, 0},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips2pAdv[i]\r\n          })\r\n     end\r\n\r\n     -- these extra set of buttons are for highlighting selected actions\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx2p - (i-1) * 1.895, 0, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\nend\r\n\r\nfunction explore5Click()\r\n     targetActionCardName = \"Explore (+5)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction explore11Click()\r\n     targetActionCardName = \"Explore (+1,+1)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction developClick()\r\n     targetActionCardName = \"Develop\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction develop2Click()\r\n     targetActionCardName = \"DevelopAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settleClick()\r\n     targetActionCardName = \"Settle\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settle2Click()\r\n     targetActionCardName = \"SettleAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumeTradeClick()\r\n     targetActionCardName = \"Consume ($)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumex2Click()\r\n     targetActionCardName = \"Consume (x2)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction produceClick()\r\n     targetActionCardName = \"Produce\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction prestigeSearchClick()\r\n     targetActionCardName = \"Prestige / Search\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction selectPhaseCo()\r\n     if Global.getVar(\"gameStarted\") == false or Global.getVar(\"currentPhaseIndex\") ~= 0 then\r\n          return 1\r\n     end\r\n\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n     local targetName = targetActionCardName\r\n\r\n     if adv2p then\r\n          -- Check to see if action was already selected. If so, just return it back to selection area\r\n          if checkIfSelected(targetName) then\r\n               returnSelectedActionCard(targetName)\r\n               return 1\r\n          end\r\n     else\r\n          returnSelectedActionCard()\r\n     end\r\n\r\n     wait(0.01)\r\n\r\n     local sp = selectedActionCardTile.getSnapPoints()\r\n     local rot = self.getRotation()\r\n     local objs = actionZone.getObjects()\r\n     local targetSnapIndex = 1\r\n\r\n     if adv2p then\r\n          local cardN = countSelectedActionCards()\r\n\r\n          -- too many selected cards\r\n          if cardN >= 2 then\r\n               return 1\r\n          elseif cardN == 1 then\r\n               -- move the other card into the correct spot just in case\r\n               for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n                    if obj.hasTag(\"Action Card\") then\r\n                         obj.setPositionSmooth(selectedActionCardTile.positionToWorld(sp[2].position))\r\n                         break\r\n                    end\r\n               end\r\n          end\r\n\r\n          targetSnapIndex = targetSnapIndex + 1 + cardN\r\n     end\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.type == \"Card\" and getName(obj) == targetName then\r\n               local pos = selectedActionCardTile.positionToWorld(sp[targetSnapIndex].position)\r\n\r\n               obj.setPosition({pos[1], pos[2] + 1, pos[3]})\r\n               obj.setRotation({rot[1], rot[2], 180})\r\n               return 1\r\n          end\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction returnSelectedActionCard(name)\r\n     local objs = selectedActionCardZone.getObjects()\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               if not name or name == getName(obj) then\r\n                    obj.setPosition(actionZone.getPosition())\r\n                    obj.setRotationSmooth({obj.getRotation()[1],obj.getRotation()[2], 0})\r\n                    if name then return end\r\n               end\r\n          end\r\n     end\r\nend\r\n\r\nfunction placeCardAtSnapPoint(card, spOwner, sp, faceDown)\r\n     local rot = spOwner.getRotation()\r\n\r\n     for i=1, 3 do\r\n          rot[i] = rot[i] + sp.rotation[i]\r\n     end\r\n\r\n     if faceDown then rot[3] = 180 end\r\n\r\n     local pos = spOwner.positionToWorld(sp.position)\r\n     card.setPositionSmooth({pos[1], pos[2] + 0.15, pos[3]})\r\n     card.setRotationSmooth(rot)\r\nend\r\n\r\nfunction checkIfSelected(actionName)\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.type == 'Card' and obj.hasTag(\"Action Card\") and getName(obj) == actionName then\r\n               return true\r\n          end\r\n     end\r\n\r\n     return false\r\nend\r\n\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction countSelectedActionCards()\r\n     local n = 0\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               n = n + 1\r\n          end\r\n     end\r\n\r\n     return n\r\nend\r\n\r\nfunction onObjectEnterZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, true)\r\n          end\r\n     end\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction refreshButtonHighlights()\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     local startInd = btnIndexOffset\r\n     local endInd = btnIndexOffset * 2 - 1\r\n\r\n     if adv2p then\r\n          startInd = btnIndexOffset * 2 + adv2pBtnIndexOffset\r\n          endInd = (btnIndexOffset + adv2pBtnIndexOffset) * 2 - 1\r\n     end\r\n\r\n     if prestigeSearch then \r\n          startInd = 1\r\n          endInd = 1\r\n     end\r\n\r\n     for i=startInd, endInd do\r\n          self.editButton({\r\n               index = i,\r\n               color = color(0,0,0,0)\r\n          })\r\n     end\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               local ind = adv2pButtonIndex[getName(obj)]\r\n\r\n               if ind then\r\n                    local name = getName(obj)\r\n                    local index = adv2p and adv2pButtonIndex[name] + adv2pBtnIndexOffset or buttonIndex[name] + btnIndexOffset\r\n\r\n                    if prestigeSearch and obj.hasTag(\"PrestigeSearch\") then\r\n                         index = 1\r\n                    end\r\n\r\n                    self.editButton({\r\n                         index = index,\r\n                         color = color(0,0,0,0.8)\r\n                    })\r\n               end\r\n          end\r\n     end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Prestige Search Button.b5027c.lua\")",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "a276bc",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -33.0599442,
            "posY": 4.035029,
            "posZ": 31.8930969,
            "rotX": 6.253921E-07,
            "rotY": 179.983566,
            "rotZ": -2.42016768E-06,
            "scaleX": 0.499943346,
            "scaleY": 1.0,
            "scaleZ": 0.499943346
          },
          "Nickname": "Prestige Search Button",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1930373378497212608/06AD7ABCDAAC8FBBCD53D674631C624D18E34D6D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 0,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Prestige Search Button.a276bc.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Prestige Search Button.a276bc.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/actionSelectMenu\")\r\n\r\nplayer = \"Yellow\"\r\n\r\nactionZone_GUID = Global.getVar(\"actionZone_GUID\")[1]\r\nselectedActionCardTile_GUID = \"082406\"\r\nselectedActionCardZone_GUID = \"d507c0\"\nend)\n__bundle_register(\"RftG/actionSelectMenu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nprestigeButton_GUID = {['b5027c']=1,['77721b']=1,['a276bc']=1,['09bbe0']=1}\r\ntargetActionCardName = \"\"\r\nselectedActions = {}\r\nbtnIndexOffset = 7\r\nadv2pBtnIndexOffset = 9\r\n\r\nfunction onload()\r\n     actionZone = getObjectFromGUID(actionZone_GUID)\r\n     selectedActionCardTile = getObjectFromGUID(selectedActionCardTile_GUID)\r\n     selectedActionCardZone = getObjectFromGUID(selectedActionCardZone_GUID)\r\n\r\n     buttonIndex = {}\r\n     adv2pButtonIndex = {}\r\n\r\n     if prestigeButton_GUID[self.getGUID()] then prestigeSearch = true end\r\n\r\n     if prestigeSearch then\r\n          btnIndexOffset = 1\r\n          adv2pBtnIndexOffset = 2\r\n          buttonIndex[\"Prestige / Search\"] = 0\r\n          adv2pButtonIndex[\"Prestige / Search\"] = 1\r\n     else\r\n          local i = 0\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNames\")) do\r\n               buttonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n\r\n          local i = 14\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNamesAdv2p\")) do\r\n               adv2pButtonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n     end\r\n\r\n     createButtons()\r\n\r\n     refreshButtonHighlights()\r\n\r\n     local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local hideFrom = {}\r\n     for _, target in pairs(players) do\r\n          if target ~= player then\r\n               hideFrom[#hideFrom + 1] = target\r\n          end\r\n     end\r\n\r\n     self.setInvisibleTo(hideFrom)\r\nend\r\n\r\nfunction createButtons()\r\n     local tooltips = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local tooltips2pAdv = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local clickFunc = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"settleClick\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local clickFunc2pAdv = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"develop2Click\",\r\n          \"settleClick\",\r\n          \"settle2Click\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local startx = -5.73\r\n     local startx2p = 7.63\r\n\r\n     if prestigeSearch then\r\n          tooltips = {\"Prestige / Search\"}\r\n          tooltips2pAdv = tooltips\r\n          clickFunc = {\"prestigeSearchClick\"}\r\n          clickFunc2pAdv = clickFunc\r\n          startx = 0\r\n          startx2p = 0\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = clickFunc[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx + (i-1) * 1.905, 0.11, 0},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips[i]\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx + (i-1) * 1.905, 0.11, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = clickFunc2pAdv[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx2p - (i-1) * 1.895, 0, 0},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips2pAdv[i]\r\n          })\r\n     end\r\n\r\n     -- these extra set of buttons are for highlighting selected actions\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx2p - (i-1) * 1.895, 0, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\nend\r\n\r\nfunction explore5Click()\r\n     targetActionCardName = \"Explore (+5)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction explore11Click()\r\n     targetActionCardName = \"Explore (+1,+1)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction developClick()\r\n     targetActionCardName = \"Develop\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction develop2Click()\r\n     targetActionCardName = \"DevelopAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settleClick()\r\n     targetActionCardName = \"Settle\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settle2Click()\r\n     targetActionCardName = \"SettleAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumeTradeClick()\r\n     targetActionCardName = \"Consume ($)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumex2Click()\r\n     targetActionCardName = \"Consume (x2)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction produceClick()\r\n     targetActionCardName = \"Produce\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction prestigeSearchClick()\r\n     targetActionCardName = \"Prestige / Search\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction selectPhaseCo()\r\n     if Global.getVar(\"gameStarted\") == false or Global.getVar(\"currentPhaseIndex\") ~= 0 then\r\n          return 1\r\n     end\r\n\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n     local targetName = targetActionCardName\r\n\r\n     if adv2p then\r\n          -- Check to see if action was already selected. If so, just return it back to selection area\r\n          if checkIfSelected(targetName) then\r\n               returnSelectedActionCard(targetName)\r\n               return 1\r\n          end\r\n     else\r\n          returnSelectedActionCard()\r\n     end\r\n\r\n     wait(0.01)\r\n\r\n     local sp = selectedActionCardTile.getSnapPoints()\r\n     local rot = self.getRotation()\r\n     local objs = actionZone.getObjects()\r\n     local targetSnapIndex = 1\r\n\r\n     if adv2p then\r\n          local cardN = countSelectedActionCards()\r\n\r\n          -- too many selected cards\r\n          if cardN >= 2 then\r\n               return 1\r\n          elseif cardN == 1 then\r\n               -- move the other card into the correct spot just in case\r\n               for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n                    if obj.hasTag(\"Action Card\") then\r\n                         obj.setPositionSmooth(selectedActionCardTile.positionToWorld(sp[2].position))\r\n                         break\r\n                    end\r\n               end\r\n          end\r\n\r\n          targetSnapIndex = targetSnapIndex + 1 + cardN\r\n     end\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.type == \"Card\" and getName(obj) == targetName then\r\n               local pos = selectedActionCardTile.positionToWorld(sp[targetSnapIndex].position)\r\n\r\n               obj.setPosition({pos[1], pos[2] + 1, pos[3]})\r\n               obj.setRotation({rot[1], rot[2], 180})\r\n               return 1\r\n          end\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction returnSelectedActionCard(name)\r\n     local objs = selectedActionCardZone.getObjects()\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               if not name or name == getName(obj) then\r\n                    obj.setPosition(actionZone.getPosition())\r\n                    obj.setRotationSmooth({obj.getRotation()[1],obj.getRotation()[2], 0})\r\n                    if name then return end\r\n               end\r\n          end\r\n     end\r\nend\r\n\r\nfunction placeCardAtSnapPoint(card, spOwner, sp, faceDown)\r\n     local rot = spOwner.getRotation()\r\n\r\n     for i=1, 3 do\r\n          rot[i] = rot[i] + sp.rotation[i]\r\n     end\r\n\r\n     if faceDown then rot[3] = 180 end\r\n\r\n     local pos = spOwner.positionToWorld(sp.position)\r\n     card.setPositionSmooth({pos[1], pos[2] + 0.15, pos[3]})\r\n     card.setRotationSmooth(rot)\r\nend\r\n\r\nfunction checkIfSelected(actionName)\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.type == 'Card' and obj.hasTag(\"Action Card\") and getName(obj) == actionName then\r\n               return true\r\n          end\r\n     end\r\n\r\n     return false\r\nend\r\n\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction countSelectedActionCards()\r\n     local n = 0\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               n = n + 1\r\n          end\r\n     end\r\n\r\n     return n\r\nend\r\n\r\nfunction onObjectEnterZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, true)\r\n          end\r\n     end\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction refreshButtonHighlights()\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     local startInd = btnIndexOffset\r\n     local endInd = btnIndexOffset * 2 - 1\r\n\r\n     if adv2p then\r\n          startInd = btnIndexOffset * 2 + adv2pBtnIndexOffset\r\n          endInd = (btnIndexOffset + adv2pBtnIndexOffset) * 2 - 1\r\n     end\r\n\r\n     if prestigeSearch then \r\n          startInd = 1\r\n          endInd = 1\r\n     end\r\n\r\n     for i=startInd, endInd do\r\n          self.editButton({\r\n               index = i,\r\n               color = color(0,0,0,0)\r\n          })\r\n     end\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               local ind = adv2pButtonIndex[getName(obj)]\r\n\r\n               if ind then\r\n                    local name = getName(obj)\r\n                    local index = adv2p and adv2pButtonIndex[name] + adv2pBtnIndexOffset or buttonIndex[name] + btnIndexOffset\r\n\r\n                    if prestigeSearch and obj.hasTag(\"PrestigeSearch\") then\r\n                         index = 1\r\n                    end\r\n\r\n                    self.editButton({\r\n                         index = index,\r\n                         color = color(0,0,0,0.8)\r\n                    })\r\n               end\r\n          end\r\n     end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Prestige Search Button.a276bc.lua\")",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "09bbe0",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -31.930748,
            "posY": 4.047084,
            "posZ": 32.99457,
            "rotX": 1.82708228,
            "rotY": 180.060944,
            "rotZ": 3.91976333,
            "scaleX": 0.499943346,
            "scaleY": 1.0,
            "scaleZ": 0.499943346
          },
          "Nickname": "Prestige Search Button",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1930373378497212608/06AD7ABCDAAC8FBBCD53D674631C624D18E34D6D/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 0,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Prestige Search Button.09bbe0.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Prestige Search Button.09bbe0.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/actionSelectMenu\")\r\n\r\nplayer = \"Blue\"\r\n\r\nactionZone_GUID = Global.getVar(\"actionZone_GUID\")[3]\r\nselectedActionCardTile_GUID = \"a5737a\"\r\nselectedActionCardZone_GUID = Global.getVar(\"selectedActionZone_GUID\")[3]\nend)\n__bundle_register(\"RftG/actionSelectMenu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nprestigeButton_GUID = {['b5027c']=1,['77721b']=1,['a276bc']=1,['09bbe0']=1}\r\ntargetActionCardName = \"\"\r\nselectedActions = {}\r\nbtnIndexOffset = 7\r\nadv2pBtnIndexOffset = 9\r\n\r\nfunction onload()\r\n     actionZone = getObjectFromGUID(actionZone_GUID)\r\n     selectedActionCardTile = getObjectFromGUID(selectedActionCardTile_GUID)\r\n     selectedActionCardZone = getObjectFromGUID(selectedActionCardZone_GUID)\r\n\r\n     buttonIndex = {}\r\n     adv2pButtonIndex = {}\r\n\r\n     if prestigeButton_GUID[self.getGUID()] then prestigeSearch = true end\r\n\r\n     if prestigeSearch then\r\n          btnIndexOffset = 1\r\n          adv2pBtnIndexOffset = 2\r\n          buttonIndex[\"Prestige / Search\"] = 0\r\n          adv2pButtonIndex[\"Prestige / Search\"] = 1\r\n     else\r\n          local i = 0\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNames\")) do\r\n               buttonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n\r\n          local i = 14\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNamesAdv2p\")) do\r\n               adv2pButtonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n     end\r\n\r\n     createButtons()\r\n\r\n     refreshButtonHighlights()\r\n\r\n     local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local hideFrom = {}\r\n     for _, target in pairs(players) do\r\n          if target ~= player then\r\n               hideFrom[#hideFrom + 1] = target\r\n          end\r\n     end\r\n\r\n     self.setInvisibleTo(hideFrom)\r\nend\r\n\r\nfunction createButtons()\r\n     local tooltips = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local tooltips2pAdv = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local clickFunc = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"settleClick\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local clickFunc2pAdv = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"develop2Click\",\r\n          \"settleClick\",\r\n          \"settle2Click\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local startx = -5.73\r\n     local startx2p = 7.63\r\n\r\n     if prestigeSearch then\r\n          tooltips = {\"Prestige / Search\"}\r\n          tooltips2pAdv = tooltips\r\n          clickFunc = {\"prestigeSearchClick\"}\r\n          clickFunc2pAdv = clickFunc\r\n          startx = 0\r\n          startx2p = 0\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = clickFunc[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx + (i-1) * 1.905, 0.11, 0},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips[i]\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx + (i-1) * 1.905, 0.11, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = clickFunc2pAdv[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx2p - (i-1) * 1.895, 0, 0},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips2pAdv[i]\r\n          })\r\n     end\r\n\r\n     -- these extra set of buttons are for highlighting selected actions\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx2p - (i-1) * 1.895, 0, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\nend\r\n\r\nfunction explore5Click()\r\n     targetActionCardName = \"Explore (+5)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction explore11Click()\r\n     targetActionCardName = \"Explore (+1,+1)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction developClick()\r\n     targetActionCardName = \"Develop\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction develop2Click()\r\n     targetActionCardName = \"DevelopAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settleClick()\r\n     targetActionCardName = \"Settle\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settle2Click()\r\n     targetActionCardName = \"SettleAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumeTradeClick()\r\n     targetActionCardName = \"Consume ($)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumex2Click()\r\n     targetActionCardName = \"Consume (x2)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction produceClick()\r\n     targetActionCardName = \"Produce\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction prestigeSearchClick()\r\n     targetActionCardName = \"Prestige / Search\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction selectPhaseCo()\r\n     if Global.getVar(\"gameStarted\") == false or Global.getVar(\"currentPhaseIndex\") ~= 0 then\r\n          return 1\r\n     end\r\n\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n     local targetName = targetActionCardName\r\n\r\n     if adv2p then\r\n          -- Check to see if action was already selected. If so, just return it back to selection area\r\n          if checkIfSelected(targetName) then\r\n               returnSelectedActionCard(targetName)\r\n               return 1\r\n          end\r\n     else\r\n          returnSelectedActionCard()\r\n     end\r\n\r\n     wait(0.01)\r\n\r\n     local sp = selectedActionCardTile.getSnapPoints()\r\n     local rot = self.getRotation()\r\n     local objs = actionZone.getObjects()\r\n     local targetSnapIndex = 1\r\n\r\n     if adv2p then\r\n          local cardN = countSelectedActionCards()\r\n\r\n          -- too many selected cards\r\n          if cardN >= 2 then\r\n               return 1\r\n          elseif cardN == 1 then\r\n               -- move the other card into the correct spot just in case\r\n               for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n                    if obj.hasTag(\"Action Card\") then\r\n                         obj.setPositionSmooth(selectedActionCardTile.positionToWorld(sp[2].position))\r\n                         break\r\n                    end\r\n               end\r\n          end\r\n\r\n          targetSnapIndex = targetSnapIndex + 1 + cardN\r\n     end\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.type == \"Card\" and getName(obj) == targetName then\r\n               local pos = selectedActionCardTile.positionToWorld(sp[targetSnapIndex].position)\r\n\r\n               obj.setPosition({pos[1], pos[2] + 1, pos[3]})\r\n               obj.setRotation({rot[1], rot[2], 180})\r\n               return 1\r\n          end\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction returnSelectedActionCard(name)\r\n     local objs = selectedActionCardZone.getObjects()\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               if not name or name == getName(obj) then\r\n                    obj.setPosition(actionZone.getPosition())\r\n                    obj.setRotationSmooth({obj.getRotation()[1],obj.getRotation()[2], 0})\r\n                    if name then return end\r\n               end\r\n          end\r\n     end\r\nend\r\n\r\nfunction placeCardAtSnapPoint(card, spOwner, sp, faceDown)\r\n     local rot = spOwner.getRotation()\r\n\r\n     for i=1, 3 do\r\n          rot[i] = rot[i] + sp.rotation[i]\r\n     end\r\n\r\n     if faceDown then rot[3] = 180 end\r\n\r\n     local pos = spOwner.positionToWorld(sp.position)\r\n     card.setPositionSmooth({pos[1], pos[2] + 0.15, pos[3]})\r\n     card.setRotationSmooth(rot)\r\nend\r\n\r\nfunction checkIfSelected(actionName)\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.type == 'Card' and obj.hasTag(\"Action Card\") and getName(obj) == actionName then\r\n               return true\r\n          end\r\n     end\r\n\r\n     return false\r\nend\r\n\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction countSelectedActionCards()\r\n     local n = 0\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               n = n + 1\r\n          end\r\n     end\r\n\r\n     return n\r\nend\r\n\r\nfunction onObjectEnterZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, true)\r\n          end\r\n     end\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction refreshButtonHighlights()\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     local startInd = btnIndexOffset\r\n     local endInd = btnIndexOffset * 2 - 1\r\n\r\n     if adv2p then\r\n          startInd = btnIndexOffset * 2 + adv2pBtnIndexOffset\r\n          endInd = (btnIndexOffset + adv2pBtnIndexOffset) * 2 - 1\r\n     end\r\n\r\n     if prestigeSearch then \r\n          startInd = 1\r\n          endInd = 1\r\n     end\r\n\r\n     for i=startInd, endInd do\r\n          self.editButton({\r\n               index = i,\r\n               color = color(0,0,0,0)\r\n          })\r\n     end\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               local ind = adv2pButtonIndex[getName(obj)]\r\n\r\n               if ind then\r\n                    local name = getName(obj)\r\n                    local index = adv2p and adv2pButtonIndex[name] + adv2pBtnIndexOffset or buttonIndex[name] + btnIndexOffset\r\n\r\n                    if prestigeSearch and obj.hasTag(\"PrestigeSearch\") then\r\n                         index = 1\r\n                    end\r\n\r\n                    self.editButton({\r\n                         index = index,\r\n                         color = color(0,0,0,0.8)\r\n                    })\r\n               end\r\n          end\r\n     end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Prestige Search Button.09bbe0.lua\")",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "f3bcc8",
          "Name": "Infinite_Bag",
          "Transform": {
            "posX": -32.47252,
            "posY": 4.06654644,
            "posZ": 32.9557343,
            "rotX": 1.42960787,
            "rotY": 179.965836,
            "rotZ": -0.00095720723,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Prestige Chips",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.134146184,
            "b": 0.993562043
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "2ae018",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -26.3679924,
                "posY": 3.56802964,
                "posZ": 25.4309387,
                "rotX": 2.23105931,
                "rotY": 180.075241,
                "rotZ": 1.38519776,
                "scaleX": 0.583790839,
                "scaleY": 1.0,
                "scaleZ": 0.583790839
              },
              "Nickname": "Prestige",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Tags": [
                "Prestige",
                "VP"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1930373378498412380/EB491BFB530E47E5546C70137E299323AA445816/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 2,
                  "Thickness": 0.1,
                  "Stackable": true,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "862ecd",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -32.2700348,
            "posY": 4.054405,
            "posZ": 32.28958,
            "rotX": 2.12484074,
            "rotY": 180.011078,
            "rotZ": 0.608102262,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Galactic Status",
          "Description": "First to place a 6-cost development.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADi5pk-Gojy8pgcZ1R1D7m0a/goals/goal_f5.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Galactic Status.862ecd.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Galactic Status.862ecd.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or currentPhase ~= 2 then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        if data.lastPlayedCard then\r\n            local card = getObjectFromGUID(data.lastPlayedCard)\r\n            if card then\r\n                local info = card_db[card.getName()]\r\n                if info and info.type == 2 and info.cost == 6 then\r\n                    winners[#winners + 1] = player\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Galactic Status.862ecd.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "e64f18",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -24.3653584,
            "posY": 4.040989,
            "posZ": 26.4215717,
            "rotX": -7.270173E-08,
            "rotY": 180.003021,
            "rotZ": -3.066859E-07,
            "scaleX": 1.41653681,
            "scaleY": 1.0,
            "scaleZ": 1.41653681
          },
          "Nickname": "Research Leader",
          "Description": "At least three and the most cards with Explore (Phase I) powers in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Most Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAB2F8SOGpehmZzc_BgbKvkNa/goals/goal_m1.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Research Leader.e64f18.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Research Leader.e64f18.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winnersTable = {}\r\n    local willLose = nil\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local n = 0\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.type == 'Card' and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                local info = card_db[obj.getName()]\r\n                if info and (info.passiveCount[\"1\"] > 0 or info.activeCount[\"1\"] > 0) then\r\n                    n = n + 1\r\n                end\r\n            end\r\n        end\r\n        if n >= 3 and (currentPhase == 2 or currentPhase == 3) then\r\n            winnersTable[#winnersTable + 1] = {player, n}\r\n        elseif n < 3 and owner == player then\r\n            -- lose ownership of tile\r\n            willLose = player\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        assignMostGoal(winnersTable)\r\n    elseif willLose then\r\n        loseMostGoal(willLose)\r\n    end\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Research Leader.e64f18.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "c418bc",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -22.389286,
            "posY": 4.040989,
            "posZ": 26.4215775,
            "rotX": 1.02887427E-07,
            "rotY": 180.002365,
            "rotZ": 5.83511834E-08,
            "scaleX": 1.41653681,
            "scaleY": 1.0,
            "scaleZ": 1.41653681
          },
          "Nickname": "Greatest Infrastructure",
          "Description": "At least four and the most developments in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Most Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACX8pPg5EtlEUGcJWMcbwROa/goals/goal_m3.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Greatest Infrastructure.c418bc.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Greatest Infrastructure.c418bc.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winnersTable = {}\r\n    local willLose = nil\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local n = 0\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.type == 'Card' and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                local info = card_db[obj.getName()]\r\n                if info and info.type == 2 then\r\n                    n = n + 1\r\n                end\r\n            end\r\n        end\r\n        if n >= 4 and currentPhase == 2 then\r\n            winnersTable[#winnersTable + 1] = {player, n}\r\n        elseif n < 4 and owner == player then\r\n            -- lose ownership of tile\r\n            willLose = player\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        assignMostGoal(winnersTable)\r\n    elseif willLose then\r\n        loseMostGoal(willLose)\r\n    end\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Greatest Infrastructure.c418bc.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "2d8ccd",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -20.413269,
            "posY": 4.040989,
            "posZ": 26.4216042,
            "rotX": 3.736633E-07,
            "rotY": 179.999741,
            "rotZ": 7.372242E-08,
            "scaleX": 1.41653681,
            "scaleY": 1.0,
            "scaleZ": 1.41653681
          },
          "Nickname": "Production Leader",
          "Description": "At least four and the most production worlds, of any kind, in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Most Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAD5nyHLsZfP4kOH9r8cBJRa/goals/goal_m6.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Production Leader.2d8ccd.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Production Leader.2d8ccd.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winnersTable = {}\r\n    local willLose = nil\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local n = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.type == 'Card' and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                local info = card_db[obj.getName()]\r\n                if info and info.type == 1 and info.goods and not info.flags[\"WINDFALL\"] then\r\n                    n = n + 1\r\n                end\r\n            end\r\n        end\r\n\r\n        if n >= 4 and currentPhase == 3 then\r\n            winnersTable[#winnersTable + 1] = {player, n}\r\n        elseif n < 4 and owner == player then\r\n            -- lose ownership of tile\r\n            willLose = player\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        assignMostGoal(winnersTable)\r\n    elseif willLose then\r\n        loseMostGoal(willLose)\r\n    end\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Production Leader.2d8ccd.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "a9138d",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -30.293457,
            "posY": 4.040989,
            "posZ": 29.354681,
            "rotX": -8.946017E-08,
            "rotY": 179.999588,
            "rotZ": 3.39103565E-07,
            "scaleX": 1.41653681,
            "scaleY": 1.0,
            "scaleZ": 1.41653681
          },
          "Nickname": "Prosperity Lead",
          "Description": "At least three and the most cards with Consume (Phase IV) powers in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Most Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAD2uKDwn1z0imF6CJz9dbBba/goals/goal_m4.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Prosperity Lead.a9138d.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Prosperity Lead.a9138d.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if currentPhase ~= 2 and currentPhase ~= 3 then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winnersTable = {}\r\n    local willLose = nil\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local n = 0\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.type == 'Card' and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                local info = card_db[obj.getName()]\r\n                if info and info.activeCount[\"4\"] > 0 then\r\n                    n = n + 1\r\n                end\r\n            end\r\n        end\r\n        if n >= 3 then\r\n            winnersTable[#winnersTable + 1] = {player, n}\r\n        elseif n < 3 and owner == player then\r\n            -- lose ownership of tile\r\n            willLose = player\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        assignMostGoal(winnersTable)\r\n    elseif willLose then\r\n        loseMostGoal(willLose)\r\n    end\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Prosperity Lead.a9138d.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "61073b",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -32.2695045,
            "posY": 4.040989,
            "posZ": 26.4216061,
            "rotX": -8.33187954E-08,
            "rotY": 179.99968,
            "rotZ": -3.57605984E-07,
            "scaleX": 1.41653681,
            "scaleY": 1.0,
            "scaleZ": 1.41653681
          },
          "Nickname": "Largest Industry",
          "Description": "At least three and the most Novelty and/or Rare production or windfall worlds in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Most Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAB2wcJaC3LswSzsKvg_bsSua/goals/goal_m5.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Largest Industry.61073b.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Largest Industry.61073b.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if currentPhase ~= 3 then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winnersTable = {}\r\n    local willLose = nil\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local n = 0\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.type == 'Card' and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                local info = card_db[obj.getName()]\r\n                if info and info.type == 1 and (info.goods == \"NOVELTY\" or info.goods == \"RARE\") then\r\n                    n = n + 1\r\n                end\r\n            end\r\n        end\r\n        if n >= 3 then\r\n            winnersTable[#winnersTable + 1] = {player, n}\r\n        elseif n < 3 and owner == player then\r\n            -- lose ownership of tile\r\n            willLose = player\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        assignMostGoal(winnersTable)\r\n    elseif willLose then\r\n        loseMostGoal(willLose)\r\n    end\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Largest Industry.61073b.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "ef48af",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -30.29347,
            "posY": 4.040989,
            "posZ": 26.4216042,
            "rotX": -4.814282E-07,
            "rotY": 179.999619,
            "rotZ": 9.880167E-08,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Galactic Riches",
          "Description": "First to have at least four goods in tableau at the end of a phase.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACaxMpnOtDT7lVBxnrEE1Kba/goals/goal_f3.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Galactic Riches.ef48af.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Galactic Riches.ef48af.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or (currentPhase ~= 3 and currentPhase ~= 5) then return end\r\n\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local count = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.type == 'Card' and obj.is_face_down and obj.getDescription() ~= \"\" then\r\n                count = count + 1\r\n                if count >= 4 then\r\n                    winners[#winners + 1] = player\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Galactic Riches.ef48af.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "64829a",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -26.3413582,
            "posY": 4.040989,
            "posZ": 32.2877426,
            "rotX": 9.805897E-08,
            "rotY": 180.000122,
            "rotZ": -1.62823468E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Expansion Leader",
          "Description": "First to have at least eight cards (developments or worlds) in tableau at the end of a phase.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADBnSepC3PvfbZqp9lo6yAOa/goals/goal_f12.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Expansion Leader.64829a.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Expansion Leader.64829a.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n-- [1] = current phase, [2] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or (currentPhase ~= 2 and currentPhase ~= 3) then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local count = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            local info = card_db[obj.getName()]\r\n            if info and (info.type == 1 or info.type == 2) and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                count = count + 1\r\n                if count >= 8 then\r\n                    winners[#winners + 1] = player\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Expansion Leader.64829a.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "b0292b",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -24.3653355,
            "posY": 4.040989,
            "posZ": 29.3546562,
            "rotX": 5.94006622E-08,
            "rotY": 180.002136,
            "rotZ": -1.780538E-07,
            "scaleX": 1.41653681,
            "scaleY": 1.0,
            "scaleZ": 1.41653681
          },
          "Nickname": "Propaganda Edge",
          "Description": "At least three and the most Rebel Military worlds in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Most Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACgfS2Nxxsi73pXMDLbfi2Ua/goals/goal_m7.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Propaganda Edge.b0292b.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Propaganda Edge.b0292b.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if currentPhase ~= 3 then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winnersTable = {}\r\n    local willLose = nil\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local n = 0\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.type == 'Card' and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                local info = card_db[obj.getName()]\r\n                if info and info.flags[\"REBEL\"] then\r\n                    n = n + 1\r\n                end\r\n            end\r\n        end\r\n        if n >= 3 then\r\n            winnersTable[#winnersTable + 1] = {player, n}\r\n        elseif n < 3 and owner == player then\r\n            -- lose ownership of tile\r\n            willLose = player\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        assignMostGoal(winnersTable)\r\n    elseif willLose then\r\n        loseMostGoal(willLose)\r\n    end\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Propaganda Edge.b0292b.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "aa5bbd",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -24.36535,
            "posY": 4.040989,
            "posZ": 32.2877426,
            "rotX": 1.77967024E-07,
            "rotY": 179.9995,
            "rotZ": -4.35013931E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Innovation Leader",
          "Description": "First to have at least one power in each phase, including Trade.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAWeg3eoUMcDKHX-ach8a5ya/goals/goal_f2.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Innovation Leader.aa5bbd.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Innovation Leader.aa5bbd.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or (currentPhase ~= 2 and currentPhase ~= 3) then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winners = {}\r\n\r\n    local phases = {\"1\", \"2\", \"3\", \"4\", \"5\"}\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local uniqueCount = 0\r\n        local recordedPhases = {}\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            local info = card_db[obj.getName()]\r\n            \r\n            if info and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                for _, phase in pairs(phases) do\r\n                    if phase == \"4\" then\r\n                        if not recordedPhases[\"4a\"] and info.passiveCount[phase] > 0 then\r\n                            recordedPhases[\"4a\"] = true\r\n                            uniqueCount = uniqueCount + 1\r\n                        end\r\n                        if not recordedPhases[\"4b\"] and info.activeCount[phase] > 0 then\r\n                            recordedPhases[\"4b\"] = true\r\n                            uniqueCount = uniqueCount + 1\r\n                        end\r\n                    elseif not recordedPhases[phase] and (info.activeCount[phase] > 0 or info.passiveCount[phase] > 0) then\r\n                        recordedPhases[phase] = true\r\n                        uniqueCount = uniqueCount + 1\r\n                    end\r\n                end\r\n            end\r\n\r\n            if uniqueCount >= 6 then\r\n                winners[#winners + 1] = player\r\n                break\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Innovation Leader.aa5bbd.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "e62464",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -22.3893032,
            "posY": 4.040989,
            "posZ": 29.3546638,
            "rotX": 1.25490217E-07,
            "rotY": 179.999161,
            "rotZ": -3.878408E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Budget Surplus",
          "Description": "First to discard at least one card at round end.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADY2qqaISligXmQzLnAx2lya/goals/goal_f1.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Budget Surplus.e62464.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Budget Surplus.e62464.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n\r\n    if owner or currentPhase ~= 100 then return end\r\n\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        if data.roundEndDiscardCount > 0 then\r\n            winners[#winners + 1] = player\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Budget Surplus.e62464.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "417dc7",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -20.41325,
            "posY": 4.040989,
            "posZ": 29.3546467,
            "rotX": -2.11853347E-07,
            "rotY": 179.999832,
            "rotZ": -3.45670259E-07,
            "scaleX": 1.41653681,
            "scaleY": 1.0,
            "scaleZ": 1.41653681
          },
          "Nickname": "Greatest Military",
          "Description": "At least six and the most total military in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Most Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACQeRdxHUPHkUkCLN-anw1ta/goals/goal_m2.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Greatest Military.417dc7.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Greatest Military.417dc7.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n\r\n    local winnersTable = {}\r\n    local willLose = nil\r\n\r\n    for player, data in pairs(playerData) do\r\n        local military = data.powersSnapshot[\"EXTRA_MILITARY\"]\r\n\r\n        if military >= 6 and (currentPhase == 2 or currentPhase == 3) then\r\n            winnersTable[#winnersTable + 1] = {player, military}\r\n        elseif military < 6 and owner == player then\r\n            -- lose ownership of tile\r\n            willLose = player\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        assignMostGoal(winnersTable)\r\n    elseif willLose then\r\n        loseMostGoal(willLose)\r\n    end\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Greatest Military.417dc7.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "4d4f32",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -28.3174152,
            "posY": 4.04099274,
            "posZ": 29.3546658,
            "rotX": 7.10974462E-08,
            "rotY": 179.999908,
            "rotZ": -2.45910655E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Overlord Discoveries",
          "Description": "First to have at least three ALIEN cards in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYCIsQewG7bMtCcXbbz4s1a/goals/goal_f4.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Overlord Discoveries.4d4f32.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Overlord Discoveries.4d4f32.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or (currentPhase ~= 2 and currentPhase ~= 3) then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local count = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            local info = card_db[obj.getName()]\r\n            if info and info.flags[\"ALIEN\"] and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                count = count + 1\r\n                if count >= 3 then\r\n                    winners[#winners + 1] = player\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Overlord Discoveries.4d4f32.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "7f50e3",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -28.3174362,
            "posY": 4.04099274,
            "posZ": 26.4215622,
            "rotX": -1.3553246E-07,
            "rotY": 180.000656,
            "rotZ": -2.12526359E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "System Diversity",
          "Description": "First to have at least one production or windfall world of each kind.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAACQgq2LDFc4Ssc13wK1paia/goals/goal_f6.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"System Diversity.7f50e3.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"System Diversity.7f50e3.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or currentPhase ~= 3 then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local recordedKind = {}\r\n        local count = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            local info = card_db[obj.getName()]\r\n            if info and info.goods and not recordedKind[info.goods] and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                recordedKind[info.goods] = true\r\n                count = count + 1\r\n\r\n                if count >= 4 then\r\n                    winners[#winners + 1] = player\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"System Diversity.7f50e3.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "e1d231",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -30.2934589,
            "posY": 4.04099274,
            "posZ": 32.287735,
            "rotX": -3.60709365E-08,
            "rotY": 179.992676,
            "rotZ": -5.185062E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Uplift Knowledge",
          "Description": "First to have at least three UPLIFT cards in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAe56ydncYaW1Q0cTXgrIXxa/goals/goal_f10.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Uplift Knowledge.e1d231.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Uplift Knowledge.e1d231.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or (currentPhase ~= 2 and currentPhase ~= 3) then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local count = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            local info = card_db[obj.getName()]\r\n            if info and info.flags[\"UPLIFT\"] and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                count = count + 1\r\n                if count >= 3 then\r\n                    winners[#winners + 1] = player\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Uplift Knowledge.e1d231.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "37e57d",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -22.3892937,
            "posY": 4.04099274,
            "posZ": 32.28776,
            "rotX": -3.5025738E-07,
            "rotY": 180.000259,
            "rotZ": -1.20250178E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Military Influence",
          "Description": "First to have either at least three IMPERIUM cards or at least four military worlds in tableau.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAD3PZzwmMYRtXL4SfHUNweca/goals/goal_f7.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Military Influence.37e57d.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Military Influence.37e57d.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or (currentPhase ~= 3 and currentPhase ~= 2) then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local imperiumCount = 0\r\n        local militaryCount = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            local info = card_db[obj.getName()]\r\n            if info and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                if info.flags[\"IMPERIUM\"] then imperiumCount = imperiumCount + 1 end\r\n                if info.type == 1 and info.flags[\"MILITARY\"] then militaryCount = militaryCount + 1 end\r\n\r\n                if imperiumCount >= 3 or militaryCount >= 4 then\r\n                    winners[#winners + 1] = player\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Military Influence.37e57d.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "0717b0",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -26.3413715,
            "posY": 4.04099274,
            "posZ": 29.3546658,
            "rotX": -4.16662061E-07,
            "rotY": 180.0006,
            "rotZ": 2.94573738E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Galactic Standard of Living",
          "Description": "First to have 5 or more VPs in chips.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAytwFXvzlhBycTsh38u7Twa/goals/goal_f11.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Galactic Standard of Living.0717b0.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Galactic Standard of Living.0717b0.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or currentPhase ~= 4 then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n\r\n    local winners = {}\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local count = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.hasTag(\"VP Chip\") then\r\n                count = count + math.max(1, obj.getQuantity())\r\n                if count >= 5 then\r\n                    winners[#winners + 1] = player\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Galactic Standard of Living.0717b0.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "41c70b",
          "Name": "Deck",
          "Transform": {
            "posX": -32.60728,
            "posY": 4.32979774,
            "posZ": 32.62876,
            "rotX": 1.27280307,
            "rotY": 180.011353,
            "rotZ": 179.435364,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            10022,
            10025,
            10003,
            10002,
            10001,
            10000,
            10009,
            10008,
            10007,
            10006,
            10005,
            10004,
            10015,
            10014,
            10012,
            10011,
            10018,
            10021,
            10020,
            10019,
            10037,
            10036,
            10026,
            10039,
            10017,
            10038,
            10023,
            10032,
            10032,
            10024,
            10027,
            10030,
            10030,
            10029,
            10029,
            10016,
            10013,
            10010,
            10028,
            10028,
            10035,
            10035,
            10033,
            10033,
            10034,
            10034,
            10031,
            10031
          ],
          "CustomDeck": {
            "100": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "eeffae",
              "Name": "Card",
              "Transform": {
                "posX": -23.5352879,
                "posY": 2.014538,
                "posZ": 22.1890717,
                "rotX": 0.00419823965,
                "rotY": 179.999863,
                "rotZ": 179.3087,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lifeforms, Inc",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10022,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4f31d0",
              "Name": "Card",
              "Transform": {
                "posX": -24.73098,
                "posY": 2.01497436,
                "posZ": 28.9849911,
                "rotX": 0.0141389733,
                "rotY": 180.000046,
                "rotZ": 179.509079,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Retrofit & Salvage, Inc",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10025,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "404acf",
              "Name": "Card",
              "Transform": {
                "posX": -27.5481,
                "posY": 1.49496734,
                "posZ": 28.4140663,
                "rotX": 0.00135471066,
                "rotY": 180.0107,
                "rotZ": 359.990967,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Uplift Gene Breeders",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10003,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ecac73",
              "Name": "Card",
              "Transform": {
                "posX": -27.4624977,
                "posY": 1.5398581,
                "posZ": 28.3270016,
                "rotX": 0.02296748,
                "rotY": 180.010712,
                "rotZ": 359.990875,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Guardian",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10002,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "dc2030",
              "Name": "Card",
              "Transform": {
                "posX": -27.5043659,
                "posY": 1.57434654,
                "posZ": 28.3539848,
                "rotX": -0.000153799629,
                "rotY": 180.0107,
                "rotZ": -0.00118335651,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Burial Site",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10001,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "066702",
              "Name": "Card",
              "Transform": {
                "posX": -27.5409431,
                "posY": 1.58393693,
                "posZ": 28.8416386,
                "rotX": 0.000907214242,
                "rotY": 179.995117,
                "rotZ": -0.001700165,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Fuel Depot",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10000,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a0bc92",
              "Name": "Card",
              "Transform": {
                "posX": -27.7997551,
                "posY": 1.595493,
                "posZ": 29.1545811,
                "rotX": 0.07249123,
                "rotY": 180.010284,
                "rotZ": -0.00106583664,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Psi-Crystal World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10009,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8bd5d3",
              "Name": "Card",
              "Transform": {
                "posX": -27.86289,
                "posY": 1.60320139,
                "posZ": 28.4189739,
                "rotX": 0.0009506568,
                "rotY": 180.0107,
                "rotZ": -0.00159845571,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Oort Cloud Refinery",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10008,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "656e3a",
              "Name": "Card",
              "Transform": {
                "posX": -27.1335468,
                "posY": 1.61283636,
                "posZ": 28.9988441,
                "rotX": 0.0003101757,
                "rotY": 180.010681,
                "rotZ": -0.0008488777,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ravaged Uplift World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10007,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d39850",
              "Name": "Card",
              "Transform": {
                "posX": -27.7268314,
                "posY": 1.62456441,
                "posZ": 28.857914,
                "rotX": 0.07542928,
                "rotY": 179.962067,
                "rotZ": -0.000567291339,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Fuel Refinery",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10006,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "77f2ee",
              "Name": "Card",
              "Transform": {
                "posX": -26.8264637,
                "posY": 1.63204408,
                "posZ": 28.7394085,
                "rotX": 0.0003678807,
                "rotY": 180.023682,
                "rotZ": 9.663154E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mining Mole Uplift Race",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10005,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "029ac4",
              "Name": "Card",
              "Transform": {
                "posX": -27.1035061,
                "posY": 1.641751,
                "posZ": 28.1962051,
                "rotX": -5.767214E-06,
                "rotY": 180.015518,
                "rotZ": -0.000906064466,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Information Hub",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10004,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "18bd21",
              "Name": "Card",
              "Transform": {
                "posX": -27.7002048,
                "posY": 1.65162754,
                "posZ": 28.6870518,
                "rotX": 0.000686926243,
                "rotY": 180.0107,
                "rotZ": -0.000583810033,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Departure Point",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10015,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b96d31",
              "Name": "Card",
              "Transform": {
                "posX": -24.725668,
                "posY": 1.49479055,
                "posZ": 28.3795452,
                "rotX": 0.00321712671,
                "rotY": 180.008865,
                "rotZ": 359.979126,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Federation Capital",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10014,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "fbb1f4",
              "Name": "Card",
              "Transform": {
                "posX": -24.39091,
                "posY": 1.57432842,
                "posZ": 28.60763,
                "rotX": 0.0007578179,
                "rotY": 180.0082,
                "rotZ": -0.000924411754,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Capital",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10012,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "48f9d4",
              "Name": "Card",
              "Transform": {
                "posX": -23.8455582,
                "posY": 1.58367944,
                "posZ": 27.97467,
                "rotX": 0.005715005,
                "rotY": 180.003525,
                "rotZ": 0.00483513251,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Uplift Revolt World",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10011,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "48e68c",
              "Name": "Card",
              "Transform": {
                "posX": -26.9193974,
                "posY": 1.71872532,
                "posZ": 28.4888935,
                "rotX": 0.000758150651,
                "rotY": 180.700867,
                "rotZ": 1.15620205E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Council",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10018,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ab5cba",
              "Name": "Card",
              "Transform": {
                "posX": -27.1821537,
                "posY": 1.738035,
                "posZ": 28.3505669,
                "rotX": -0.000101717247,
                "rotY": 179.995178,
                "rotZ": -0.000389637629,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Booby Trap",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10021,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "6d2d75",
              "Name": "Card",
              "Transform": {
                "posX": -27.840765,
                "posY": 1.91463137,
                "posZ": 28.3153419,
                "rotX": 359.9932,
                "rotY": 179.97583,
                "rotZ": 348.9916,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Tourist Attraction",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10020,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d09a09",
              "Name": "Card",
              "Transform": {
                "posX": -27.146492,
                "posY": 1.7572546,
                "posZ": 29.08834,
                "rotX": 0.000143638943,
                "rotY": 180.008224,
                "rotZ": -0.000588159,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Universal Exports",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10019,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "972921",
              "Name": "Card",
              "Transform": {
                "posX": -27.292469,
                "posY": 1.49510384,
                "posZ": 23.6590729,
                "rotX": 5.558843E-07,
                "rotY": 180.010681,
                "rotZ": -7.944047E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Uplift Mercenary Force",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10037,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "dc6673",
              "Name": "Card",
              "Transform": {
                "posX": -25.0015774,
                "posY": 1.49510384,
                "posZ": 20.4966,
                "rotX": 4.991981E-07,
                "rotY": 180.010651,
                "rotZ": -7.45502064E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Research Team",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10036,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2ab55",
              "Name": "Card",
              "Transform": {
                "posX": -27.292469,
                "posY": 1.49510384,
                "posZ": 17.3341274,
                "rotX": 5.07427444E-07,
                "rotY": 180.010666,
                "rotZ": -8.13281133E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pan-Galactic Security Council",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10026,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "bf28fe",
              "Name": "Card",
              "Transform": {
                "posX": -22.7106876,
                "posY": 1.49510384,
                "posZ": 23.6590729,
                "rotX": 4.584189E-07,
                "rotY": 180.009842,
                "rotZ": -6.04625939E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Scavengers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10039,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0abd8e",
              "Name": "Card",
              "Transform": {
                "posX": -22.7106876,
                "posY": 1.49510384,
                "posZ": 20.4966,
                "rotX": 4.814502E-07,
                "rotY": 179.978577,
                "rotZ": 9.459294E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Black Hole Miners",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10017,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8eb673",
              "Name": "Card",
              "Transform": {
                "posX": -20.419796,
                "posY": 1.49510384,
                "posZ": 20.4966,
                "rotX": 5.65512551E-07,
                "rotY": 180.014435,
                "rotZ": -7.27203E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Freedom Fighters",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10038,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2c2530",
              "Name": "Card",
              "Transform": {
                "posX": -19.0907841,
                "posY": 1.49510384,
                "posZ": 24.3885822,
                "rotX": 7.87011857E-07,
                "rotY": 180.025375,
                "rotZ": -1.33162574E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pan-Galactic Hologrid",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10023,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a79699",
              "Name": "Card",
              "Transform": {
                "posX": -23.9200974,
                "posY": 1.50550556,
                "posZ": 29.40568,
                "rotX": 0.3874373,
                "rotY": 179.9986,
                "rotZ": 0.001217156,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Power Brokers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10032,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0d0ff6",
              "Name": "Card",
              "Transform": {
                "posX": -24.2004757,
                "posY": 1.55685651,
                "posZ": 29.34351,
                "rotX": 0.305216968,
                "rotY": 179.997711,
                "rotZ": -0.00421556225,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Power Brokers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10032,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b4f51c",
              "Name": "Card",
              "Transform": {
                "posX": -23.7581577,
                "posY": 1.58568,
                "posZ": 29.1997776,
                "rotX": 0.311918736,
                "rotY": 179.9985,
                "rotZ": -0.00147676026,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Universal Peace Institute",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10024,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "97703f",
              "Name": "Card",
              "Transform": {
                "posX": -24.21579,
                "posY": 1.59544122,
                "posZ": 29.2492352,
                "rotX": 0.305544555,
                "rotY": 179.962067,
                "rotZ": 0.000299928448,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pan-Galactic Affluence",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10027,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8552fc",
              "Name": "Card",
              "Transform": {
                "posX": -19.48543,
                "posY": 1.49481452,
                "posZ": 28.96703,
                "rotX": 0.00284184283,
                "rotY": 179.987946,
                "rotZ": 359.9809,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Invasion Fleet",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10030,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "dcab70",
              "Name": "Card",
              "Transform": {
                "posX": -19.271143,
                "posY": 1.54703629,
                "posZ": 28.7691383,
                "rotX": 0.03937056,
                "rotY": 179.987671,
                "rotZ": -0.005210312,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Invasion Fleet",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10030,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ed9404",
              "Name": "Card",
              "Transform": {
                "posX": -23.4831429,
                "posY": 1.609728,
                "posZ": 29.4060326,
                "rotX": 0.3774025,
                "rotY": 179.993652,
                "rotZ": 0.0222289786,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Markets",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10029,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "9b9911",
              "Name": "Card",
              "Transform": {
                "posX": -23.7760563,
                "posY": 1.63595033,
                "posZ": 29.5647259,
                "rotX": 0.391082525,
                "rotY": 179.9986,
                "rotZ": -0.00055207964,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Galactic Markets",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10029,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f19999",
              "Name": "Card",
              "Transform": {
                "posX": -23.125782,
                "posY": 1.6458571,
                "posZ": 29.80853,
                "rotX": 0.4159476,
                "rotY": 179.9844,
                "rotZ": 0.009657834,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Golden Age of Terraforming",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10016,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "72047c",
              "Name": "Card",
              "Transform": {
                "posX": -23.7108841,
                "posY": 1.65544331,
                "posZ": 29.2943058,
                "rotX": 0.3859706,
                "rotY": 179.993835,
                "rotZ": -0.00138443161,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Imperium Planet Buster",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10013,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "83b2ce",
              "Name": "Card",
              "Transform": {
                "posX": -24.0155926,
                "posY": 1.66215944,
                "posZ": 29.1457634,
                "rotX": 0.3053721,
                "rotY": 179.986435,
                "rotZ": 0.00143196329,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Alien Cornucopia",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10010,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ac92ee",
              "Name": "Card",
              "Transform": {
                "posX": -20.4430866,
                "posY": 1.49357,
                "posZ": 27.86072,
                "rotX": 0.01638254,
                "rotY": 179.994,
                "rotZ": 359.896942,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Troops",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10028,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "9c616a",
              "Name": "Card",
              "Transform": {
                "posX": -20.0674038,
                "posY": 1.52193427,
                "posZ": 27.9734612,
                "rotX": 359.593018,
                "rotY": 179.994812,
                "rotZ": 0.199124709,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Troops",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10028,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4a4257",
              "Name": "Card",
              "Transform": {
                "posX": -20.78968,
                "posY": 1.4950763,
                "posZ": 26.3945675,
                "rotX": 0.000293759542,
                "rotY": 180.020844,
                "rotZ": -0.00185134355,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Interstellar Casus Belli",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10035,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "00b7c8",
              "Name": "Card",
              "Transform": {
                "posX": -20.786459,
                "posY": 1.54452121,
                "posZ": 26.5944328,
                "rotX": 0.00732079567,
                "rotY": 180.020844,
                "rotZ": 359.987823,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Interstellar Casus Belli",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10035,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8cbc01",
              "Name": "Card",
              "Transform": {
                "posX": -20.4448643,
                "posY": 1.49506533,
                "posZ": 25.4978256,
                "rotX": 0.000414340524,
                "rotY": 179.996521,
                "rotZ": -0.00259470753,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Sneak Attack",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10033,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "dfcef8",
              "Name": "Card",
              "Transform": {
                "posX": -20.4240932,
                "posY": 1.5504241,
                "posZ": 25.5823574,
                "rotX": 359.993,
                "rotY": 179.99649,
                "rotZ": -0.002637257,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rebel Sneak Attack",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10033,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8733fd",
              "Name": "Card",
              "Transform": {
                "posX": -20.4374065,
                "posY": 1.49504685,
                "posZ": 24.9791851,
                "rotX": 0.000603135,
                "rotY": 180.000183,
                "rotZ": -0.00382499187,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Terraforming Engineers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10034,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "364841",
              "Name": "Card",
              "Transform": {
                "posX": -20.3776951,
                "posY": 1.544581,
                "posZ": 24.9991665,
                "rotX": 359.99176,
                "rotY": 180.000122,
                "rotZ": -0.003381394,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Terraforming Engineers",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10034,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b70c97",
              "Name": "Card",
              "Transform": {
                "posX": -22.2729855,
                "posY": 1.49510419,
                "posZ": 23.7271862,
                "rotX": 1.9785648E-05,
                "rotY": 180.3179,
                "rotZ": -1.22388983E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pan-Galactic Mediator",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10031,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "26260e",
              "Name": "Card",
              "Transform": {
                "posX": -22.10593,
                "posY": 1.55356562,
                "posZ": 23.7262478,
                "rotX": -0.00254083821,
                "rotY": 179.998535,
                "rotZ": 359.993561,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pan-Galactic Mediator",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 10031,
              "SidewaysCard": false,
              "CustomDeck": {
                "100": {
                  "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1930373378495533295/3CBCEABA4868525F2D7D1223D889A6A3C2FB9B77/",
                  "BackURL": "http://cloud-3.steamusercontent.com/ugc/1783967784600204070/5ADC4D2F8F021ABE9B3BD52044E38117914A78C8/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "e2b46b",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -32.1423035,
            "posY": 4.06675243,
            "posZ": 32.77597,
            "rotX": 1.8331784,
            "rotY": 180.024612,
            "rotZ": 1.78909278,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Galactic Standing",
          "Description": "First to have at least two prestige chips and at least three VP chips at the end of a phase.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AABnXXoeB5AMmZlgXSqqkiE6a/goals/goal_f9.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Galactic Standing.e2b46b.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Galactic Standing.e2b46b.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or currentPhase < 1 or currentPhase > 5 then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n\r\n    local winners = {}\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local vpCount = 0\r\n        local prestigeCount = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.hasTag(\"VP Chip\") then\r\n                vpCount = vpCount + math.max(1, obj.getQuantity())\r\n            elseif obj.hasTag(\"Prestige\") then\r\n                prestigeCount = prestigeCount + math.max(1, obj.getQuantity())\r\n            end\r\n\r\n            if vpCount >= 3 and prestigeCount >= 2 then\r\n                winners[#winners + 1] = player\r\n                break\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Galactic Standing.e2b46b.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "1c15bf",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -28.18867,
            "posY": 4.04253674,
            "posZ": 32.7743721,
            "rotX": -8.148908E-08,
            "rotY": 179.988815,
            "rotZ": -1.10322404E-07,
            "scaleX": 1.41653681,
            "scaleY": 1.0,
            "scaleZ": 1.41653681
          },
          "Nickname": "Galactic Prestige",
          "Description": "At least three and the most prestige chips.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "Most Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADfDInIvjPXvgzYf5oX-JKTa/goals/goal_m8.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Galactic Prestige.1c15bf.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Galactic Prestige.1c15bf.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\n-- [1] = current phase, [2] = tableau zone guid, [3] = player data\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winnersTable = {}\r\n    local willLose = nil\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local n = 0\r\n\r\n        for _, obj in pairs(zone.getObjects()) do\r\n            if obj.hasTag(\"Prestige\") then\r\n                n = n + math.max(1, obj.getQuantity())\r\n            end\r\n        end\r\n\r\n        if n >= 3 and currentPhase >= 1 and currentPhase <= 5 then\r\n            winnersTable[#winnersTable + 1] = {player, n}\r\n        elseif n < 3 and owner == player then\r\n            -- lose ownership of tile\r\n            willLose = player\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        log('in here')\r\n        assignMostGoal(winnersTable)\r\n    elseif willLose then\r\n        loseMostGoal(willLose)\r\n    end\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Galactic Prestige.1c15bf.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        },
        {
          "GUID": "f2932e",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -30.164711,
            "posY": 4.042536,
            "posZ": 32.7743721,
            "rotX": -3.24132E-08,
            "rotY": 180.009262,
            "rotZ": 7.02788654E-08,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Peace/War Leader",
          "Description": "First to have either Military less than zero with at least two worlds in tableau, or a takeover power with at least two military worlds in tableau.\n\n*If takeovers are off, the second condition cannot be met.",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "Tags": [
            "First Goal",
            "VP"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAB6bZPWTE08VTpZJiKS7UTya/goals/goal_f8.png?dl=1",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"PeaceWar Leader.f2932e.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"PeaceWar Leader.f2932e.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/goal\")\r\n\r\nfunction endPhaseCheck(params)\r\n    local currentPhase = params[1]\r\n    local playerData = params[2]\r\n    local zone_GUID = Global.getVar(\"tableauZone_GUID\")\r\n\r\n    if owner or (currentPhase ~= 3 and currentPhase ~= 2) then return end\r\n\r\n    local card_db = Global.getVar(\"card_db\")\r\n    local winners = {}\r\n\r\n    for player, data in pairs(playerData) do\r\n        local zone = getObjectFromGUID(zone_GUID[data.index])\r\n        local peace = data.powersSnapshot[\"EXTRA_MILITARY\"] + data.tempMilitary < 0\r\n        local war = data.powersSnapshot[\"TAKEOVER_POWERS\"]\r\n\r\n        if not Global.getVar(\"useTakeovers\") then war = false end\r\n\r\n        local worldCount = 0\r\n        local militaryWorldCount = 0\r\n\r\n        if war or peace then\r\n            for _, obj in pairs(zone.getObjects()) do\r\n                local info = card_db[obj.getName()]\r\n                if info and not obj.is_face_down and not obj.hasTag(\"Ignore Tableau\") then\r\n                    if info.type == 1 then worldCount = worldCount + 1 end\r\n                    if info.type == 1 and info.flags[\"MILITARY\"] then militaryWorldCount = militaryWorldCount + 1 end\r\n\r\n                    if peace and worldCount >= 2 or war and militaryWorldCount >= 2 then\r\n                        winners[#winners + 1] = player\r\n                        break\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    assignGoal(winners)\r\nend\nend)\n__bundle_register(\"RftG/goal\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nowner = nil\r\ntiedOwners = {}\r\n\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\ntableSurface_GUID = \"4ee1f2\"\r\ntiedVpBag_GUID = \"d95c9e\"\r\n\r\nfunction onSave()\r\n    local data = {}\r\n    data.owner = owner\r\n    data.tiedOwners = tiedOwners\r\n    return JSON.encode(data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local data = JSON.decode(saved_data)\r\n        owner = data.owner\r\n        tiedOwners = data.tiedOwners or {}\r\n    end\r\nend\r\n\r\nfunction assignGoal(winners)\r\n    for i=1, #winners do\r\n        local player = winners[i]\r\n        local goal = nil\r\n        if i == 1 then\r\n            owner = player\r\n            goal = self\r\n        else\r\n            goal = self.clone()\r\n            goal.setPosition(self.getPosition())\r\n            Wait.frames(function()\r\n                goal.setVar(\"owner\", player)\r\n            end, 1, 0)\r\n        end\r\n\r\n        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {goal, player}) end, 2, 0)\r\n        broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n    end\r\nend\r\n\r\nfunction assignMostGoal(winnersTable)\r\n    if #winnersTable <= 0 then return end\r\n\r\n    tiedVpBag = getObjectFromGUID(tiedVpBag_GUID)\r\n\r\n    table.sort(winnersTable, function(v1, v2)\r\n        if v1[2] == v2[2] then\r\n            return v1[1] == owner\r\n        end\r\n        return v1[2] > v2[2]\r\n    end)\r\n\r\n    local winningValue = #winnersTable > 0 and winnersTable[1][2] or 0\r\n    local tiedPlayers = {}\r\n    local ties = 0\r\n    -- count number of ties with the winner\r\n    for i=2, #winnersTable do\r\n        local entry = winnersTable[i]\r\n        if entry[2] == winningValue then\r\n            tiedPlayers[entry[1]] = true\r\n            ties = ties + 1\r\n\r\n            -- include the first player winner\r\n            if i == 2 then\r\n                tiedPlayers[winnersTable[1][1]] = true\r\n                ties = ties + 1\r\n            end\r\n        end\r\n    end\r\n\r\n    -- remove tied player vp tokens\r\n    for player, guid in pairs(tiedOwners) do\r\n        if not tiedPlayers[player] then\r\n            local token = getObjectFromGUID(guid)\r\n            if token then token.destruct() end\r\n            tiedOwners[player] = nil\r\n        end\r\n    end\r\n\r\n    if #winnersTable > 0 then\r\n        -- only 1 player beat the value, they get the goal\r\n        if ties == 0 then\r\n            local player = winnersTable[1][1]\r\n            local value = winnersTable[1][2]\r\n\r\n            if winnersTable[1][1] ~= owner then\r\n                broadcastToAll((Player[player].steam_name or player) .. ' has claimed the \"' .. self.getName() .. '\" goal.', player)\r\n                Wait.frames(function() Global.call(\"moveGoalToPlayer\", {self, player}) end, 1)\r\n            end\r\n\r\n            owner = player\r\n        elseif ties > 0 then\r\n            if owner and tiedPlayers[owner] or not owner then\r\n                -- players tied with the leader get the 3 VP token\r\n                for player, tied in pairs(tiedPlayers) do\r\n                    if player ~= owner and not tiedOwners[player] then\r\n                        local token = tiedVpBag.takeObject()\r\n                        token.setName(\"Tied w/ \" .. self.getName())\r\n                        tiedOwners[player] = token.getGUID()\r\n                        Wait.frames(function() Global.call(\"moveGoalToPlayer\", {token, player}) end, 1)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction loseMostGoal(player)\r\n    broadcastToAll((Player[player].steam_name or player) .. ' has lost the \"' .. self.getName() .. \" goal.\", player)\r\n    owner = nil\r\n    returnMostGoal()\r\nend\r\n\r\nfunction returnMostGoal()\r\n    for _, pos in pairs(mostGoalsPlacement) do\r\n        local hits = Physics.cast({\r\n            origin = add(pos, {0, 1, 0}),\r\n            direction = {0,-1,0},\r\n            max_distance = 3\r\n        })\r\n\r\n        for _, hit in pairs(hits) do\r\n            if not hit.hit_object.hasTag(\"Most Goal\") then\r\n                self.setPosition(add(pos, {0, 1, 0}))\r\n                self.setRotation({0,90,0})\r\n                return\r\n            end\r\n        end\r\n    end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"PeaceWar Leader.f2932e.lua\")",
          "LuaScriptState": "{\"tiedOwners\":[]}",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "4ee1f2",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": -0.00189453643,
        "rotZ": 0.0,
        "scaleX": 1.7,
        "scaleY": 1.0,
        "scaleZ": 1.7
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": true,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796176/4A5A65543B98BCFBF57E910D06EC984208223D38/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1843672500558187398/4E4EB4F55A2901B2EEFDEE7550FB26CC6856BA4A/\n",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3f1c4d",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 2.77,
        "posY": 1.48,
        "posZ": -17.941412,
        "rotX": -1.43531675E-08,
        "rotY": 179.999924,
        "rotZ": -8.634576E-09,
        "scaleX": 6.084777,
        "scaleY": 1.0,
        "scaleZ": 6.004497
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0439882725,
        "g": 0.0668977946,
        "b": 0.113231339
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": true,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1867319584733434168/76E4F818BB730F1F8713043E8000EC832B60EE87/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 1.82821679,
            "y": 0.100000143,
            "z": -0.06641522
          },
          "Rotation": {
            "x": -7.66867743E-05,
            "y": 359.991669,
            "z": 179.652649
          }
        },
        {
          "Position": {
            "x": 1.368201,
            "y": 0.100000143,
            "z": -0.0666198
          },
          "Rotation": {
            "x": 6.0142007E-05,
            "y": 359.990448,
            "z": 180.26123
          }
        },
        {
          "Position": {
            "x": 0.906472564,
            "y": 0.100000143,
            "z": -0.0666172653
          },
          "Rotation": {
            "x": 4.09297485E-10,
            "y": 359.988525,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.4478814,
            "y": 0.100000143,
            "z": -0.06661633
          },
          "Rotation": {
            "x": -3.268391E-08,
            "y": 0.0129910195,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.0121339234,
            "y": 0.100000143,
            "z": -0.06661284
          },
          "Rotation": {
            "x": 1.64344343E-08,
            "y": -0.000218566056,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.4716594,
            "y": 0.100000143,
            "z": -0.06661698
          },
          "Rotation": {
            "x": -2.64846953E-08,
            "y": 0.0124719255,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.8279165,
            "y": 0.100000143,
            "z": 0.5725921
          },
          "Rotation": {
            "x": -2.02764348E-08,
            "y": 359.9807,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.36788607,
            "y": 0.100000143,
            "z": 0.572392941
          },
          "Rotation": {
            "x": -5.61894531E-09,
            "y": 359.979767,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.9061876,
            "y": 0.100000143,
            "z": 0.572393537
          },
          "Rotation": {
            "x": 3.13456781E-08,
            "y": 359.992126,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.447600543,
            "y": 0.100000143,
            "z": 0.5724002
          },
          "Rotation": {
            "x": 8.356419E-09,
            "y": 359.989868,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.012436253,
            "y": 0.100000143,
            "z": 0.5723948
          },
          "Rotation": {
            "x": 1.47728816E-08,
            "y": 0.006925812,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.471930265,
            "y": 0.100000143,
            "z": 0.5723678
          },
          "Rotation": {
            "x": -1.04699946E-08,
            "y": -0.000300528336,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.9320959,
            "y": 0.100000143,
            "z": -0.06661635
          },
          "Rotation": {
            "x": 3.244521E-08,
            "y": 359.984924,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.9321735,
            "y": 0.100000143,
            "z": 0.572416067
          },
          "Rotation": {
            "x": 6.93931357E-09,
            "y": 0.0182092842,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.39321291,
            "y": 0.100000143,
            "z": -0.06661509
          },
          "Rotation": {
            "x": -3.21176827E-08,
            "y": 359.987457,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.39349937,
            "y": 0.100000143,
            "z": 0.5723967
          },
          "Rotation": {
            "x": 2.34640343E-08,
            "y": 0.0182092842,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.85146821,
            "y": 0.100000143,
            "z": -0.0666144639
          },
          "Rotation": {
            "x": -2.14760529E-08,
            "y": 359.9878,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.85175312,
            "y": 0.100000143,
            "z": 0.5723973
          },
          "Rotation": {
            "x": 2.62997535E-08,
            "y": 0.0181683041,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.86376488,
            "y": 0.100000143,
            "z": -0.713757336
          },
          "Rotation": {
            "x": 3.71734252E-08,
            "y": 0.0007649812,
            "z": -9.981369E-09
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 1.5390141,
            "y": 0.100000143,
            "z": -0.713756859
          },
          "Rotation": {
            "x": 1.16056267E-08,
            "y": 0.00107916992,
            "z": 1.92563014E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 1.21426237,
            "y": 0.100000143,
            "z": -0.7137565
          },
          "Rotation": {
            "x": -1.40717633E-08,
            "y": 0.000341509469,
            "z": -2.63668145E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.88951087,
            "y": 0.100000143,
            "z": -0.713756
          },
          "Rotation": {
            "x": 6.300022E-08,
            "y": -0.00157094351,
            "z": -5.17701224E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.564761341,
            "y": 0.100000143,
            "z": -0.7137556
          },
          "Rotation": {
            "x": 2.42614711E-08,
            "y": 9.562265E-05,
            "z": -4.24957136E-09
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.240009919,
            "y": 0.100000143,
            "z": -0.713755131
          },
          "Rotation": {
            "x": -7.56091652E-08,
            "y": 0.00269109453,
            "z": 7.21304E-08
          },
          "Tags": [
            "VP"
          ]
        }
      ]
    },
    {
      "GUID": "a22fe5",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -2.40782833,
        "posY": 1.4814992,
        "posZ": 17.9675884,
        "rotX": 2.13292743E-08,
        "rotY": -3.74929879E-11,
        "rotZ": -4.962959E-09,
        "scaleX": 6.084777,
        "scaleY": 1.0,
        "scaleZ": 6.004497
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0439882725,
        "g": 0.0668977946,
        "b": 0.113231339
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": true,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1867319584733434168/76E4F818BB730F1F8713043E8000EC832B60EE87/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onload()\r\n     local obj = getObjectFromGUID(\"3f1c4d\")\r\n     self.setSnapPoints(obj.getSnapPoints())\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 1.82821679,
            "y": 0.100000143,
            "z": -0.06641522
          },
          "Rotation": {
            "x": -7.66867743E-05,
            "y": 359.991669,
            "z": 179.652649
          }
        },
        {
          "Position": {
            "x": 1.368201,
            "y": 0.100000143,
            "z": -0.0666198
          },
          "Rotation": {
            "x": 6.014202E-05,
            "y": 359.990448,
            "z": 180.26123
          }
        },
        {
          "Position": {
            "x": 0.906472564,
            "y": 0.100000143,
            "z": -0.0666172653
          },
          "Rotation": {
            "x": 4.09297485E-10,
            "y": 359.988525,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.4478814,
            "y": 0.100000143,
            "z": -0.06661633
          },
          "Rotation": {
            "x": -3.268391E-08,
            "y": 0.0129910195,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.0121339234,
            "y": 0.100000143,
            "z": -0.06661284
          },
          "Rotation": {
            "x": 1.64344343E-08,
            "y": -0.000218566056,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.4716594,
            "y": 0.100000143,
            "z": -0.06661698
          },
          "Rotation": {
            "x": -2.64846971E-08,
            "y": 0.0124719255,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.8279165,
            "y": 0.100000143,
            "z": 0.5725921
          },
          "Rotation": {
            "x": -2.02764348E-08,
            "y": 359.9807,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.36788607,
            "y": 0.100000143,
            "z": 0.572392941
          },
          "Rotation": {
            "x": -5.61894531E-09,
            "y": 359.979767,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.9061876,
            "y": 0.100000143,
            "z": 0.572393537
          },
          "Rotation": {
            "x": 3.13456781E-08,
            "y": 359.992126,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.447600543,
            "y": 0.100000143,
            "z": 0.5724002
          },
          "Rotation": {
            "x": 8.356419E-09,
            "y": 359.989868,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.012436253,
            "y": 0.100000143,
            "z": 0.5723948
          },
          "Rotation": {
            "x": 1.47728816E-08,
            "y": 0.006925812,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.471930265,
            "y": 0.100000143,
            "z": 0.5723678
          },
          "Rotation": {
            "x": -1.04699946E-08,
            "y": -0.000300528336,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.9320959,
            "y": 0.100000143,
            "z": -0.06661635
          },
          "Rotation": {
            "x": 3.244521E-08,
            "y": 359.984924,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.9321735,
            "y": 0.100000143,
            "z": 0.572416067
          },
          "Rotation": {
            "x": 6.93931357E-09,
            "y": 0.0182092842,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.39321291,
            "y": 0.100000143,
            "z": -0.06661509
          },
          "Rotation": {
            "x": -3.21176827E-08,
            "y": 359.987457,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.39349937,
            "y": 0.100000143,
            "z": 0.5723967
          },
          "Rotation": {
            "x": 2.34640343E-08,
            "y": 0.0182092842,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.85146821,
            "y": 0.100000143,
            "z": -0.0666144639
          },
          "Rotation": {
            "x": -2.14760529E-08,
            "y": 359.9878,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.85175312,
            "y": 0.100000143,
            "z": 0.5723973
          },
          "Rotation": {
            "x": 2.62997535E-08,
            "y": 0.0181683041,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.86376488,
            "y": 0.100000143,
            "z": -0.713757336
          },
          "Rotation": {
            "x": 3.71734252E-08,
            "y": 0.0007649812,
            "z": -9.981369E-09
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 1.5390141,
            "y": 0.100000143,
            "z": -0.713756859
          },
          "Rotation": {
            "x": 1.16056267E-08,
            "y": 0.00107916992,
            "z": 1.92563014E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 1.21426237,
            "y": 0.100000143,
            "z": -0.7137565
          },
          "Rotation": {
            "x": -1.40717633E-08,
            "y": 0.000341509469,
            "z": -2.63668145E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.88951087,
            "y": 0.100000143,
            "z": -0.713756
          },
          "Rotation": {
            "x": 6.300022E-08,
            "y": -0.00157094351,
            "z": -5.17701224E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.564761341,
            "y": 0.100000143,
            "z": -0.7137556
          },
          "Rotation": {
            "x": 2.42614711E-08,
            "y": 9.562265E-05,
            "z": -4.24957136E-09
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.240009919,
            "y": 0.100000143,
            "z": -0.713755131
          },
          "Rotation": {
            "x": -7.56091652E-08,
            "y": 0.00269109453,
            "z": 7.21304E-08
          },
          "Tags": [
            "VP"
          ]
        }
      ]
    },
    {
      "GUID": "bcf758",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -18.0541782,
        "posY": 1.4814992,
        "posZ": -2.77453041,
        "rotX": 6.935358E-08,
        "rotY": 270.0,
        "rotZ": 3.777131E-08,
        "scaleX": 6.084777,
        "scaleY": 1.0,
        "scaleZ": 6.004497
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0439882725,
        "g": 0.0668977946,
        "b": 0.113231339
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": true,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1867319584733434168/76E4F818BB730F1F8713043E8000EC832B60EE87/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onload()\r\n     local obj = getObjectFromGUID(\"3f1c4d\")\r\n     self.setSnapPoints(obj.getSnapPoints())\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 1.82821679,
            "y": 0.100000143,
            "z": -0.06641522
          },
          "Rotation": {
            "x": -7.66867743E-05,
            "y": 359.991669,
            "z": 179.652649
          }
        },
        {
          "Position": {
            "x": 1.368201,
            "y": 0.100000143,
            "z": -0.0666198
          },
          "Rotation": {
            "x": 6.014202E-05,
            "y": 359.990448,
            "z": 180.26123
          }
        },
        {
          "Position": {
            "x": 0.906472564,
            "y": 0.100000143,
            "z": -0.0666172653
          },
          "Rotation": {
            "x": 4.09297485E-10,
            "y": 359.988525,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.4478814,
            "y": 0.100000143,
            "z": -0.06661633
          },
          "Rotation": {
            "x": -3.268391E-08,
            "y": 0.0129910195,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.0121339234,
            "y": 0.100000143,
            "z": -0.06661284
          },
          "Rotation": {
            "x": 1.64344343E-08,
            "y": -0.000218566056,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.4716594,
            "y": 0.100000143,
            "z": -0.06661698
          },
          "Rotation": {
            "x": -2.64846971E-08,
            "y": 0.0124719255,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.8279165,
            "y": 0.100000143,
            "z": 0.5725921
          },
          "Rotation": {
            "x": -2.02764348E-08,
            "y": 359.9807,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.36788607,
            "y": 0.100000143,
            "z": 0.572392941
          },
          "Rotation": {
            "x": -5.61894531E-09,
            "y": 359.979767,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.9061876,
            "y": 0.100000143,
            "z": 0.572393537
          },
          "Rotation": {
            "x": 3.13456781E-08,
            "y": 359.992126,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.447600543,
            "y": 0.100000143,
            "z": 0.5724002
          },
          "Rotation": {
            "x": 8.356419E-09,
            "y": 359.989868,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.012436253,
            "y": 0.100000143,
            "z": 0.5723948
          },
          "Rotation": {
            "x": 1.47728816E-08,
            "y": 0.006925812,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.471930265,
            "y": 0.100000143,
            "z": 0.5723678
          },
          "Rotation": {
            "x": -1.04699946E-08,
            "y": -0.000300528336,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.9320959,
            "y": 0.100000143,
            "z": -0.06661635
          },
          "Rotation": {
            "x": 3.244521E-08,
            "y": 359.984924,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.9321735,
            "y": 0.100000143,
            "z": 0.572416067
          },
          "Rotation": {
            "x": 6.93931357E-09,
            "y": 0.0182092842,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.39321291,
            "y": 0.100000143,
            "z": -0.06661509
          },
          "Rotation": {
            "x": -3.21176827E-08,
            "y": 359.987457,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.39349937,
            "y": 0.100000143,
            "z": 0.5723967
          },
          "Rotation": {
            "x": 2.34640343E-08,
            "y": 0.0182092842,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.85146821,
            "y": 0.100000143,
            "z": -0.0666144639
          },
          "Rotation": {
            "x": -2.14760529E-08,
            "y": 359.9878,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.85175312,
            "y": 0.100000143,
            "z": 0.5723973
          },
          "Rotation": {
            "x": 2.62997535E-08,
            "y": 0.0181683041,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.86376488,
            "y": 0.100000143,
            "z": -0.713757336
          },
          "Rotation": {
            "x": 3.71734252E-08,
            "y": 0.0007649812,
            "z": -9.981369E-09
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 1.5390141,
            "y": 0.100000143,
            "z": -0.713756859
          },
          "Rotation": {
            "x": 1.16056267E-08,
            "y": 0.00107916992,
            "z": 1.92563014E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 1.21426237,
            "y": 0.100000143,
            "z": -0.7137565
          },
          "Rotation": {
            "x": -1.40717633E-08,
            "y": 0.000341509469,
            "z": -2.63668145E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.88951087,
            "y": 0.100000143,
            "z": -0.713756
          },
          "Rotation": {
            "x": 6.300022E-08,
            "y": -0.00157094351,
            "z": -5.17701224E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.564761341,
            "y": 0.100000143,
            "z": -0.7137556
          },
          "Rotation": {
            "x": 2.42614711E-08,
            "y": 9.562265E-05,
            "z": -4.24957136E-09
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.240009919,
            "y": 0.100000143,
            "z": -0.713755131
          },
          "Rotation": {
            "x": -7.56091652E-08,
            "y": 0.00269109453,
            "z": 7.21304E-08
          },
          "Tags": [
            "VP"
          ]
        }
      ]
    },
    {
      "GUID": "b4aab3",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 18.0239849,
        "posY": 1.4814992,
        "posZ": 2.760296,
        "rotX": -1.01695852E-08,
        "rotY": 90.0,
        "rotZ": 7.54462448E-09,
        "scaleX": 6.084777,
        "scaleY": 1.0,
        "scaleZ": 6.004497
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0439882725,
        "g": 0.0668977946,
        "b": 0.113231339
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": true,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1867319584733434168/76E4F818BB730F1F8713043E8000EC832B60EE87/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onload()\r\n     local obj = getObjectFromGUID(\"3f1c4d\")\r\n     self.setSnapPoints(obj.getSnapPoints())\r\nend",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 1.82821679,
            "y": 0.100000143,
            "z": -0.06641522
          },
          "Rotation": {
            "x": -7.66867743E-05,
            "y": 359.991669,
            "z": 179.652649
          }
        },
        {
          "Position": {
            "x": 1.368201,
            "y": 0.100000143,
            "z": -0.0666198
          },
          "Rotation": {
            "x": 6.014202E-05,
            "y": 359.990448,
            "z": 180.26123
          }
        },
        {
          "Position": {
            "x": 0.906472564,
            "y": 0.100000143,
            "z": -0.0666172653
          },
          "Rotation": {
            "x": 4.09297485E-10,
            "y": 359.988525,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.4478814,
            "y": 0.100000143,
            "z": -0.06661633
          },
          "Rotation": {
            "x": -3.268391E-08,
            "y": 0.0129910195,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.0121339234,
            "y": 0.100000143,
            "z": -0.06661284
          },
          "Rotation": {
            "x": 1.64344343E-08,
            "y": -0.000218566056,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.4716594,
            "y": 0.100000143,
            "z": -0.06661698
          },
          "Rotation": {
            "x": -2.64846971E-08,
            "y": 0.0124719255,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.8279165,
            "y": 0.100000143,
            "z": 0.5725921
          },
          "Rotation": {
            "x": -2.02764348E-08,
            "y": 359.9807,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.36788607,
            "y": 0.100000143,
            "z": 0.572392941
          },
          "Rotation": {
            "x": -5.61894531E-09,
            "y": 359.979767,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.9061876,
            "y": 0.100000143,
            "z": 0.572393537
          },
          "Rotation": {
            "x": 3.13456781E-08,
            "y": 359.992126,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 0.447600543,
            "y": 0.100000143,
            "z": 0.5724002
          },
          "Rotation": {
            "x": 8.356419E-09,
            "y": 359.989868,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.012436253,
            "y": 0.100000143,
            "z": 0.5723948
          },
          "Rotation": {
            "x": 1.47728816E-08,
            "y": 0.006925812,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.471930265,
            "y": 0.100000143,
            "z": 0.5723678
          },
          "Rotation": {
            "x": -1.04699946E-08,
            "y": -0.000300528336,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.9320959,
            "y": 0.100000143,
            "z": -0.06661635
          },
          "Rotation": {
            "x": 3.244521E-08,
            "y": 359.984924,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -0.9321735,
            "y": 0.100000143,
            "z": 0.572416067
          },
          "Rotation": {
            "x": 6.93931357E-09,
            "y": 0.0182092842,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.39321291,
            "y": 0.100000143,
            "z": -0.06661509
          },
          "Rotation": {
            "x": -3.21176827E-08,
            "y": 359.987457,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.39349937,
            "y": 0.100000143,
            "z": 0.5723967
          },
          "Rotation": {
            "x": 2.34640343E-08,
            "y": 0.0182092842,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.85146821,
            "y": 0.100000143,
            "z": -0.0666144639
          },
          "Rotation": {
            "x": -2.14760529E-08,
            "y": 359.9878,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": -1.85175312,
            "y": 0.100000143,
            "z": 0.5723973
          },
          "Rotation": {
            "x": 2.62997535E-08,
            "y": 0.0181683041,
            "z": 180.0
          }
        },
        {
          "Position": {
            "x": 1.86376488,
            "y": 0.100000143,
            "z": -0.713757336
          },
          "Rotation": {
            "x": 3.71734252E-08,
            "y": 0.0007649812,
            "z": -9.981369E-09
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 1.5390141,
            "y": 0.100000143,
            "z": -0.713756859
          },
          "Rotation": {
            "x": 1.16056267E-08,
            "y": 0.00107916992,
            "z": 1.92563014E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 1.21426237,
            "y": 0.100000143,
            "z": -0.7137565
          },
          "Rotation": {
            "x": -1.40717633E-08,
            "y": 0.000341509469,
            "z": -2.63668145E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.88951087,
            "y": 0.100000143,
            "z": -0.713756
          },
          "Rotation": {
            "x": 6.300022E-08,
            "y": -0.00157094351,
            "z": -5.17701224E-08
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.564761341,
            "y": 0.100000143,
            "z": -0.7137556
          },
          "Rotation": {
            "x": 2.42614711E-08,
            "y": 9.562265E-05,
            "z": -4.24957136E-09
          },
          "Tags": [
            "VP"
          ]
        },
        {
          "Position": {
            "x": 0.240009919,
            "y": 0.100000143,
            "z": -0.713755131
          },
          "Rotation": {
            "x": -7.56091652E-08,
            "y": 0.00269109453,
            "z": 7.21304E-08
          },
          "Tags": [
            "VP"
          ]
        }
      ]
    },
    {
      "GUID": "718265",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 10.08,
        "posY": 1.545954,
        "posZ": 4.480002,
        "rotX": 1.73465935E-08,
        "rotY": 90.00333,
        "rotZ": 180.0,
        "scaleX": 1.18020344,
        "scaleY": 1.51459324,
        "scaleZ": 1.18020344
      },
      "Nickname": "Ready",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
        "DiffuseURL": "http://i.imgur.com/LSBlZZX.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Ready.718265.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Ready.718265.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/readyButton\")\nend)\n__bundle_register(\"RftG/readyButton\", function(require, _LOADED, __bundle_register, __bundle_modules)\nisReady = false\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.isReady = isReady\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          isReady = data.isReady\r\n     end\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Ready\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          rotation = {0, 0, 180},\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Not Ready\"\r\n     })\r\nend\r\n\r\nfunction toggleState(obj, _, rightClick)\r\n     if rightClick or Global.getVar(\"gameStarted\") == false then\r\n          return\r\n     end\r\n\r\n     isReady = not isReady\r\n     Global.call(\"updateReadyButtons\", {player, isReady, true})\r\nend\r\n\r\nfunction setToggleState(ready)\r\n     local rot = self.getRotation()\r\n     isReady = ready\r\n\r\n     if isReady then\r\n          self.setRotation({rot[1], rot[2], 0})\r\n     else\r\n          self.setRotation({rot[1], rot[2], 180})\r\n     end\r\nend\nend)\nreturn __bundle_require(\"Ready.718265.lua\")",
      "LuaScriptState": "{\"isReady\":false}",
      "XmlUI": ""
    },
    {
      "GUID": "169b57",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -4.480001,
        "posY": 1.54595387,
        "posZ": 10.08,
        "rotX": 7.801683E-08,
        "rotY": 359.9879,
        "rotZ": 180.0,
        "scaleX": 1.18020344,
        "scaleY": 1.51459324,
        "scaleZ": 1.18020344
      },
      "Nickname": "Ready",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
        "DiffuseURL": "http://i.imgur.com/LSBlZZX.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Ready.169b57.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Ready.169b57.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/readyButton\")\nend)\n__bundle_register(\"RftG/readyButton\", function(require, _LOADED, __bundle_register, __bundle_modules)\nisReady = false\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.isReady = isReady\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          isReady = data.isReady\r\n     end\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Ready\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          rotation = {0, 0, 180},\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Not Ready\"\r\n     })\r\nend\r\n\r\nfunction toggleState(obj, _, rightClick)\r\n     if rightClick or Global.getVar(\"gameStarted\") == false then\r\n          return\r\n     end\r\n\r\n     isReady = not isReady\r\n     Global.call(\"updateReadyButtons\", {player, isReady, true})\r\nend\r\n\r\nfunction setToggleState(ready)\r\n     local rot = self.getRotation()\r\n     isReady = ready\r\n\r\n     if isReady then\r\n          self.setRotation({rot[1], rot[2], 0})\r\n     else\r\n          self.setRotation({rot[1], rot[2], 180})\r\n     end\r\nend\nend)\nreturn __bundle_require(\"Ready.169b57.lua\")",
      "LuaScriptState": "{\"isReady\":false}",
      "XmlUI": ""
    },
    {
      "GUID": "8f6042",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 4.480003,
        "posY": 1.54595387,
        "posZ": -10.08,
        "rotX": -5.970293E-08,
        "rotY": 180.0,
        "rotZ": 180.0,
        "scaleX": 1.18020344,
        "scaleY": 1.51459324,
        "scaleZ": 1.18020344
      },
      "Nickname": "Ready",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
        "DiffuseURL": "http://i.imgur.com/LSBlZZX.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Ready.8f6042.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Ready.8f6042.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/readyButton\")\nend)\n__bundle_register(\"RftG/readyButton\", function(require, _LOADED, __bundle_register, __bundle_modules)\nisReady = false\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.isReady = isReady\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          isReady = data.isReady\r\n     end\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Ready\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          rotation = {0, 0, 180},\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Not Ready\"\r\n     })\r\nend\r\n\r\nfunction toggleState(obj, _, rightClick)\r\n     if rightClick or Global.getVar(\"gameStarted\") == false then\r\n          return\r\n     end\r\n\r\n     isReady = not isReady\r\n     Global.call(\"updateReadyButtons\", {player, isReady, true})\r\nend\r\n\r\nfunction setToggleState(ready)\r\n     local rot = self.getRotation()\r\n     isReady = ready\r\n\r\n     if isReady then\r\n          self.setRotation({rot[1], rot[2], 0})\r\n     else\r\n          self.setRotation({rot[1], rot[2], 180})\r\n     end\r\nend\nend)\nreturn __bundle_require(\"Ready.8f6042.lua\")",
      "LuaScriptState": "{\"isReady\":false}",
      "XmlUI": ""
    },
    {
      "GUID": "6ed6bc",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -10.08,
        "posY": 1.545954,
        "posZ": -4.4800005,
        "rotX": -1.58622044E-07,
        "rotY": 270.0,
        "rotZ": 180.0,
        "scaleX": 1.18020344,
        "scaleY": 1.51459324,
        "scaleZ": 1.18020344
      },
      "Nickname": "Ready",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
        "DiffuseURL": "http://i.imgur.com/LSBlZZX.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Ready.6ed6bc.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Ready.6ed6bc.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/readyButton\")\nend)\n__bundle_register(\"RftG/readyButton\", function(require, _LOADED, __bundle_register, __bundle_modules)\nisReady = false\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.isReady = isReady\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          isReady = data.isReady\r\n     end\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Ready\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          rotation = {0, 0, 180},\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Not Ready\"\r\n     })\r\nend\r\n\r\nfunction toggleState(obj, _, rightClick)\r\n     if rightClick or Global.getVar(\"gameStarted\") == false then\r\n          return\r\n     end\r\n\r\n     isReady = not isReady\r\n     Global.call(\"updateReadyButtons\", {player, isReady, true})\r\nend\r\n\r\nfunction setToggleState(ready)\r\n     local rot = self.getRotation()\r\n     isReady = ready\r\n\r\n     if isReady then\r\n          self.setRotation({rot[1], rot[2], 0})\r\n     else\r\n          self.setRotation({rot[1], rot[2], 180})\r\n     end\r\nend\nend)\nreturn __bundle_require(\"Ready.6ed6bc.lua\")",
      "LuaScriptState": "{\"isReady\":false}",
      "XmlUI": ""
    },
    {
      "GUID": "98db35",
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -0.003530995,
        "posY": 3.42602587,
        "posZ": -37.6853867,
        "rotX": 0.0,
        "rotY": 4.46236E-05,
        "rotZ": 0.0,
        "scaleX": 23.7594433,
        "scaleY": 1.69583619,
        "scaleZ": 3.69580936
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.1025641
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "dc1b97",
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 37.8835678,
        "posY": 3.38599014,
        "posZ": -0.00973319,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 22.7358112,
        "scaleY": 2.12523079,
        "scaleZ": 3.7820313
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.75
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "be1ba1",
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 1.88442918E-05,
        "posY": 3.38561368,
        "posZ": 37.71376,
        "rotX": 0.0,
        "rotY": 180.000046,
        "rotZ": 0.0,
        "scaleX": 22.9352779,
        "scaleY": 1.73286676,
        "scaleZ": 3.62618446
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.75
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "9f5339",
      "Name": "Custom_PDF",
      "Transform": {
        "posX": -46.2743454,
        "posY": 6.20479965,
        "posZ": 31.3164577,
        "rotX": 34.9922638,
        "rotY": 134.95723,
        "rotZ": 359.956451,
        "scaleX": 2.67430973,
        "scaleY": 1.0,
        "scaleZ": 2.67430973
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomPDF": {
        "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1843673153253859024/233757FC708D8104B2033EEA5CCC7B2DD0A798AA/",
        "PDFPassword": "",
        "PDFPage": 0,
        "PDFPageOffset": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b44250",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 0.001425664,
        "posY": 1.48149931,
        "posZ": -24.5515461,
        "rotX": 2.15343547E-07,
        "rotY": 180.0,
        "rotZ": -3.046606E-08,
        "scaleX": 0.49882403,
        "scaleY": 1.0,
        "scaleZ": 0.4981664
      },
      "Nickname": "Action Select Menu",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153253968793/2CB45A8324D3F5E56FBDBCA4CC3072EC4DC21B9C/",
        "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153253968710/236B926EB025C02016BC6F499EEFB964B05AA11E/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Action Select Menu.b44250.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Action Select Menu.b44250.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/actionSelectMenu\")\r\n\r\nplayer = \"Yellow\"\r\n\r\nactionZone_GUID = Global.getVar(\"actionZone_GUID\")[1]\r\nselectedActionCardTile_GUID = \"082406\"\r\nselectedActionCardZone_GUID = \"d507c0\"\nend)\n__bundle_register(\"RftG/actionSelectMenu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nprestigeButton_GUID = {['b5027c']=1,['77721b']=1,['a276bc']=1,['09bbe0']=1}\r\ntargetActionCardName = \"\"\r\nselectedActions = {}\r\nbtnIndexOffset = 7\r\nadv2pBtnIndexOffset = 9\r\n\r\nfunction onload()\r\n     actionZone = getObjectFromGUID(actionZone_GUID)\r\n     selectedActionCardTile = getObjectFromGUID(selectedActionCardTile_GUID)\r\n     selectedActionCardZone = getObjectFromGUID(selectedActionCardZone_GUID)\r\n\r\n     buttonIndex = {}\r\n     adv2pButtonIndex = {}\r\n\r\n     if prestigeButton_GUID[self.getGUID()] then prestigeSearch = true end\r\n\r\n     if prestigeSearch then\r\n          btnIndexOffset = 1\r\n          adv2pBtnIndexOffset = 2\r\n          buttonIndex[\"Prestige / Search\"] = 0\r\n          adv2pButtonIndex[\"Prestige / Search\"] = 1\r\n     else\r\n          local i = 0\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNames\")) do\r\n               buttonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n\r\n          local i = 14\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNamesAdv2p\")) do\r\n               adv2pButtonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n     end\r\n\r\n     createButtons()\r\n\r\n     refreshButtonHighlights()\r\n\r\n     local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local hideFrom = {}\r\n     for _, target in pairs(players) do\r\n          if target ~= player then\r\n               hideFrom[#hideFrom + 1] = target\r\n          end\r\n     end\r\n\r\n     self.setInvisibleTo(hideFrom)\r\nend\r\n\r\nfunction createButtons()\r\n     local tooltips = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local tooltips2pAdv = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local clickFunc = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"settleClick\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local clickFunc2pAdv = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"develop2Click\",\r\n          \"settleClick\",\r\n          \"settle2Click\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local startx = -5.73\r\n     local startx2p = 7.63\r\n\r\n     if prestigeSearch then\r\n          tooltips = {\"Prestige / Search\"}\r\n          tooltips2pAdv = tooltips\r\n          clickFunc = {\"prestigeSearchClick\"}\r\n          clickFunc2pAdv = clickFunc\r\n          startx = 0\r\n          startx2p = 0\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = clickFunc[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx + (i-1) * 1.905, 0.11, 0},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips[i]\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx + (i-1) * 1.905, 0.11, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = clickFunc2pAdv[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx2p - (i-1) * 1.895, 0, 0},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips2pAdv[i]\r\n          })\r\n     end\r\n\r\n     -- these extra set of buttons are for highlighting selected actions\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx2p - (i-1) * 1.895, 0, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\nend\r\n\r\nfunction explore5Click()\r\n     targetActionCardName = \"Explore (+5)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction explore11Click()\r\n     targetActionCardName = \"Explore (+1,+1)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction developClick()\r\n     targetActionCardName = \"Develop\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction develop2Click()\r\n     targetActionCardName = \"DevelopAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settleClick()\r\n     targetActionCardName = \"Settle\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settle2Click()\r\n     targetActionCardName = \"SettleAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumeTradeClick()\r\n     targetActionCardName = \"Consume ($)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumex2Click()\r\n     targetActionCardName = \"Consume (x2)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction produceClick()\r\n     targetActionCardName = \"Produce\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction prestigeSearchClick()\r\n     targetActionCardName = \"Prestige / Search\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction selectPhaseCo()\r\n     if Global.getVar(\"gameStarted\") == false or Global.getVar(\"currentPhaseIndex\") ~= 0 then\r\n          return 1\r\n     end\r\n\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n     local targetName = targetActionCardName\r\n\r\n     if adv2p then\r\n          -- Check to see if action was already selected. If so, just return it back to selection area\r\n          if checkIfSelected(targetName) then\r\n               returnSelectedActionCard(targetName)\r\n               return 1\r\n          end\r\n     else\r\n          returnSelectedActionCard()\r\n     end\r\n\r\n     wait(0.01)\r\n\r\n     local sp = selectedActionCardTile.getSnapPoints()\r\n     local rot = self.getRotation()\r\n     local objs = actionZone.getObjects()\r\n     local targetSnapIndex = 1\r\n\r\n     if adv2p then\r\n          local cardN = countSelectedActionCards()\r\n\r\n          -- too many selected cards\r\n          if cardN >= 2 then\r\n               return 1\r\n          elseif cardN == 1 then\r\n               -- move the other card into the correct spot just in case\r\n               for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n                    if obj.hasTag(\"Action Card\") then\r\n                         obj.setPositionSmooth(selectedActionCardTile.positionToWorld(sp[2].position))\r\n                         break\r\n                    end\r\n               end\r\n          end\r\n\r\n          targetSnapIndex = targetSnapIndex + 1 + cardN\r\n     end\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.type == \"Card\" and getName(obj) == targetName then\r\n               local pos = selectedActionCardTile.positionToWorld(sp[targetSnapIndex].position)\r\n\r\n               obj.setPosition({pos[1], pos[2] + 1, pos[3]})\r\n               obj.setRotation({rot[1], rot[2], 180})\r\n               return 1\r\n          end\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction returnSelectedActionCard(name)\r\n     local objs = selectedActionCardZone.getObjects()\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               if not name or name == getName(obj) then\r\n                    obj.setPosition(actionZone.getPosition())\r\n                    obj.setRotationSmooth({obj.getRotation()[1],obj.getRotation()[2], 0})\r\n                    if name then return end\r\n               end\r\n          end\r\n     end\r\nend\r\n\r\nfunction placeCardAtSnapPoint(card, spOwner, sp, faceDown)\r\n     local rot = spOwner.getRotation()\r\n\r\n     for i=1, 3 do\r\n          rot[i] = rot[i] + sp.rotation[i]\r\n     end\r\n\r\n     if faceDown then rot[3] = 180 end\r\n\r\n     local pos = spOwner.positionToWorld(sp.position)\r\n     card.setPositionSmooth({pos[1], pos[2] + 0.15, pos[3]})\r\n     card.setRotationSmooth(rot)\r\nend\r\n\r\nfunction checkIfSelected(actionName)\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.type == 'Card' and obj.hasTag(\"Action Card\") and getName(obj) == actionName then\r\n               return true\r\n          end\r\n     end\r\n\r\n     return false\r\nend\r\n\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction countSelectedActionCards()\r\n     local n = 0\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               n = n + 1\r\n          end\r\n     end\r\n\r\n     return n\r\nend\r\n\r\nfunction onObjectEnterZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, true)\r\n          end\r\n     end\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction refreshButtonHighlights()\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     local startInd = btnIndexOffset\r\n     local endInd = btnIndexOffset * 2 - 1\r\n\r\n     if adv2p then\r\n          startInd = btnIndexOffset * 2 + adv2pBtnIndexOffset\r\n          endInd = (btnIndexOffset + adv2pBtnIndexOffset) * 2 - 1\r\n     end\r\n\r\n     if prestigeSearch then \r\n          startInd = 1\r\n          endInd = 1\r\n     end\r\n\r\n     for i=startInd, endInd do\r\n          self.editButton({\r\n               index = i,\r\n               color = color(0,0,0,0)\r\n          })\r\n     end\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               local ind = adv2pButtonIndex[getName(obj)]\r\n\r\n               if ind then\r\n                    local name = getName(obj)\r\n                    local index = adv2p and adv2pButtonIndex[name] + adv2pBtnIndexOffset or buttonIndex[name] + btnIndexOffset\r\n\r\n                    if prestigeSearch and obj.hasTag(\"PrestigeSearch\") then\r\n                         index = 1\r\n                    end\r\n\r\n                    self.editButton({\r\n                         index = index,\r\n                         color = color(0,0,0,0.8)\r\n                    })\r\n               end\r\n          end\r\n     end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Action Select Menu.b44250.lua\")",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d507c0",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -0.03665948,
        "posY": 4.0,
        "posZ": -9.984416,
        "rotX": 0.0,
        "rotY": 3.7338672E-05,
        "rotZ": 0.0,
        "scaleX": 5.43798447,
        "scaleY": 6.0,
        "scaleZ": 3.20752668
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "820d9e",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -9.978291,
        "posY": 4.0,
        "posZ": -0.0286848377,
        "rotX": 0.0,
        "rotY": 3.7338672E-05,
        "rotZ": 0.0,
        "scaleX": 3.21151638,
        "scaleY": 6.0088315,
        "scaleZ": 5.417574
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b1409d",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 0.0300154537,
        "posY": 4.0,
        "posZ": 9.98387,
        "rotX": 0.0,
        "rotY": 3.7338672E-05,
        "rotZ": 0.0,
        "scaleX": 5.419055,
        "scaleY": 6.0,
        "scaleZ": 3.26160431
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "326786",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 10.0090256,
        "posY": 4.0,
        "posZ": -0.00781846,
        "rotX": 0.0,
        "rotY": 3.7338672E-05,
        "rotZ": 0.0,
        "scaleX": 3.25290251,
        "scaleY": 6.0,
        "scaleZ": 5.42925644
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a5737a",
      "Name": "BlockSquare",
      "Transform": {
        "posX": 4.07792031E-05,
        "posY": 1.48955023,
        "posZ": 9.987568,
        "rotX": 2.06875583E-07,
        "rotY": 0.00383441057,
        "rotZ": -6.52307847E-07,
        "scaleX": 5.370696,
        "scaleY": 0.0161025524,
        "scaleZ": 3.160494
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0,
        "a": 0.804832637
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 3.91504364E-06,
            "y": 0.500022233,
            "z": 2.10329E-06
          },
          "Rotation": {
            "x": 0.000548412,
            "y": 0.0203885045,
            "z": -0.0035801623
          }
        },
        {
          "Position": {
            "x": 0.279342979,
            "y": 0.4999282,
            "z": 4.331614E-05
          },
          "Rotation": {
            "x": 0.000740557269,
            "y": 0.0189541578,
            "z": 358.9775
          }
        },
        {
          "Position": {
            "x": -0.279249,
            "y": 0.5001017,
            "z": -5.81108143E-05
          },
          "Rotation": {
            "x": 0.0003114167,
            "y": 0.0193912983,
            "z": 1.0287925
          }
        }
      ]
    },
    {
      "GUID": "3e3772",
      "Name": "BlockSquare",
      "Transform": {
        "posX": -9.99505,
        "posY": 1.48955035,
        "posZ": 0.00267567975,
        "rotX": 7.294186E-08,
        "rotY": 270.0,
        "rotZ": -2.90788122E-08,
        "scaleX": 5.370696,
        "scaleY": 0.0161025524,
        "scaleZ": 3.160494
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0,
        "a": 0.804832637
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 3.91504364E-06,
            "y": 0.500022233,
            "z": 2.10329E-06
          },
          "Rotation": {
            "x": 0.000548412,
            "y": 0.0203885045,
            "z": -0.0035801623
          }
        },
        {
          "Position": {
            "x": 0.279342979,
            "y": 0.4999282,
            "z": 4.331614E-05
          },
          "Rotation": {
            "x": 0.000740557269,
            "y": 0.0189541578,
            "z": 358.9775
          }
        },
        {
          "Position": {
            "x": -0.279249,
            "y": 0.5001017,
            "z": -5.81108143E-05
          },
          "Rotation": {
            "x": 0.0003114167,
            "y": 0.0193912983,
            "z": 1.0287925
          }
        }
      ]
    },
    {
      "GUID": "082406",
      "Name": "BlockSquare",
      "Transform": {
        "posX": -5.27729E-08,
        "posY": 1.48955023,
        "posZ": -9.999285,
        "rotX": 1.45880691E-07,
        "rotY": 180.0,
        "rotZ": 1.61596617E-07,
        "scaleX": 5.370696,
        "scaleY": 0.0161025524,
        "scaleZ": 3.160494
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0,
        "a": 0.804832637
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 3.91504364E-06,
            "y": 0.500022233,
            "z": 2.10329E-06
          },
          "Rotation": {
            "x": 0.000548412,
            "y": 0.0203885045,
            "z": -0.0035801623
          }
        },
        {
          "Position": {
            "x": 0.279342979,
            "y": 0.4999282,
            "z": 4.331614E-05
          },
          "Rotation": {
            "x": 0.000740557269,
            "y": 0.0189541578,
            "z": 358.9775
          }
        },
        {
          "Position": {
            "x": -0.279249,
            "y": 0.5001017,
            "z": -5.81108143E-05
          },
          "Rotation": {
            "x": 0.0003114167,
            "y": 0.0193912983,
            "z": 1.0287925
          }
        }
      ]
    },
    {
      "GUID": "2c39a5",
      "Name": "BlockSquare",
      "Transform": {
        "posX": 10.0128365,
        "posY": 1.48955023,
        "posZ": -5.69685E-07,
        "rotX": -4.08351681E-08,
        "rotY": 90.0,
        "rotZ": -1.99296574E-06,
        "scaleX": 5.370696,
        "scaleY": 0.0161025524,
        "scaleZ": 3.160494
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0,
        "a": 0.804832637
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 3.91504364E-06,
            "y": 0.500022233,
            "z": 2.10329E-06
          },
          "Rotation": {
            "x": 0.000548412,
            "y": 0.0203885045,
            "z": -0.0035801623
          }
        },
        {
          "Position": {
            "x": 0.279342979,
            "y": 0.4999282,
            "z": 4.331614E-05
          },
          "Rotation": {
            "x": 0.000740557269,
            "y": 0.0189541578,
            "z": 358.9775
          }
        },
        {
          "Position": {
            "x": -0.279249,
            "y": 0.5001017,
            "z": -5.81108143E-05
          },
          "Rotation": {
            "x": 0.0003114167,
            "y": 0.0193912983,
            "z": 1.0287925
          }
        }
      ]
    },
    {
      "GUID": "7552ef",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -24.6641769,
        "posY": 1.4814992,
        "posZ": 0.000889867137,
        "rotX": -1.34363324E-06,
        "rotY": 269.64386,
        "rotZ": -2.93193718E-08,
        "scaleX": 0.49882403,
        "scaleY": 1.0,
        "scaleZ": 0.4981664
      },
      "Nickname": "Action Select Menu",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153253968793/2CB45A8324D3F5E56FBDBCA4CC3072EC4DC21B9C/",
        "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153253968710/236B926EB025C02016BC6F499EEFB964B05AA11E/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Action Select Menu.7552ef.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Action Select Menu.7552ef.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/actionSelectMenu\")\r\n\r\nplayer = \"Red\"\r\n\r\nactionZone_GUID = Global.getVar(\"actionZone_GUID\")[2]\r\nselectedActionCardTile_GUID = \"3e3772\"\r\nselectedActionCardZone_GUID = \"820d9e\"\nend)\n__bundle_register(\"RftG/actionSelectMenu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nprestigeButton_GUID = {['b5027c']=1,['77721b']=1,['a276bc']=1,['09bbe0']=1}\r\ntargetActionCardName = \"\"\r\nselectedActions = {}\r\nbtnIndexOffset = 7\r\nadv2pBtnIndexOffset = 9\r\n\r\nfunction onload()\r\n     actionZone = getObjectFromGUID(actionZone_GUID)\r\n     selectedActionCardTile = getObjectFromGUID(selectedActionCardTile_GUID)\r\n     selectedActionCardZone = getObjectFromGUID(selectedActionCardZone_GUID)\r\n\r\n     buttonIndex = {}\r\n     adv2pButtonIndex = {}\r\n\r\n     if prestigeButton_GUID[self.getGUID()] then prestigeSearch = true end\r\n\r\n     if prestigeSearch then\r\n          btnIndexOffset = 1\r\n          adv2pBtnIndexOffset = 2\r\n          buttonIndex[\"Prestige / Search\"] = 0\r\n          adv2pButtonIndex[\"Prestige / Search\"] = 1\r\n     else\r\n          local i = 0\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNames\")) do\r\n               buttonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n\r\n          local i = 14\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNamesAdv2p\")) do\r\n               adv2pButtonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n     end\r\n\r\n     createButtons()\r\n\r\n     refreshButtonHighlights()\r\n\r\n     local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local hideFrom = {}\r\n     for _, target in pairs(players) do\r\n          if target ~= player then\r\n               hideFrom[#hideFrom + 1] = target\r\n          end\r\n     end\r\n\r\n     self.setInvisibleTo(hideFrom)\r\nend\r\n\r\nfunction createButtons()\r\n     local tooltips = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local tooltips2pAdv = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local clickFunc = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"settleClick\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local clickFunc2pAdv = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"develop2Click\",\r\n          \"settleClick\",\r\n          \"settle2Click\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local startx = -5.73\r\n     local startx2p = 7.63\r\n\r\n     if prestigeSearch then\r\n          tooltips = {\"Prestige / Search\"}\r\n          tooltips2pAdv = tooltips\r\n          clickFunc = {\"prestigeSearchClick\"}\r\n          clickFunc2pAdv = clickFunc\r\n          startx = 0\r\n          startx2p = 0\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = clickFunc[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx + (i-1) * 1.905, 0.11, 0},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips[i]\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx + (i-1) * 1.905, 0.11, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = clickFunc2pAdv[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx2p - (i-1) * 1.895, 0, 0},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips2pAdv[i]\r\n          })\r\n     end\r\n\r\n     -- these extra set of buttons are for highlighting selected actions\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx2p - (i-1) * 1.895, 0, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\nend\r\n\r\nfunction explore5Click()\r\n     targetActionCardName = \"Explore (+5)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction explore11Click()\r\n     targetActionCardName = \"Explore (+1,+1)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction developClick()\r\n     targetActionCardName = \"Develop\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction develop2Click()\r\n     targetActionCardName = \"DevelopAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settleClick()\r\n     targetActionCardName = \"Settle\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settle2Click()\r\n     targetActionCardName = \"SettleAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumeTradeClick()\r\n     targetActionCardName = \"Consume ($)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumex2Click()\r\n     targetActionCardName = \"Consume (x2)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction produceClick()\r\n     targetActionCardName = \"Produce\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction prestigeSearchClick()\r\n     targetActionCardName = \"Prestige / Search\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction selectPhaseCo()\r\n     if Global.getVar(\"gameStarted\") == false or Global.getVar(\"currentPhaseIndex\") ~= 0 then\r\n          return 1\r\n     end\r\n\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n     local targetName = targetActionCardName\r\n\r\n     if adv2p then\r\n          -- Check to see if action was already selected. If so, just return it back to selection area\r\n          if checkIfSelected(targetName) then\r\n               returnSelectedActionCard(targetName)\r\n               return 1\r\n          end\r\n     else\r\n          returnSelectedActionCard()\r\n     end\r\n\r\n     wait(0.01)\r\n\r\n     local sp = selectedActionCardTile.getSnapPoints()\r\n     local rot = self.getRotation()\r\n     local objs = actionZone.getObjects()\r\n     local targetSnapIndex = 1\r\n\r\n     if adv2p then\r\n          local cardN = countSelectedActionCards()\r\n\r\n          -- too many selected cards\r\n          if cardN >= 2 then\r\n               return 1\r\n          elseif cardN == 1 then\r\n               -- move the other card into the correct spot just in case\r\n               for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n                    if obj.hasTag(\"Action Card\") then\r\n                         obj.setPositionSmooth(selectedActionCardTile.positionToWorld(sp[2].position))\r\n                         break\r\n                    end\r\n               end\r\n          end\r\n\r\n          targetSnapIndex = targetSnapIndex + 1 + cardN\r\n     end\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.type == \"Card\" and getName(obj) == targetName then\r\n               local pos = selectedActionCardTile.positionToWorld(sp[targetSnapIndex].position)\r\n\r\n               obj.setPosition({pos[1], pos[2] + 1, pos[3]})\r\n               obj.setRotation({rot[1], rot[2], 180})\r\n               return 1\r\n          end\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction returnSelectedActionCard(name)\r\n     local objs = selectedActionCardZone.getObjects()\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               if not name or name == getName(obj) then\r\n                    obj.setPosition(actionZone.getPosition())\r\n                    obj.setRotationSmooth({obj.getRotation()[1],obj.getRotation()[2], 0})\r\n                    if name then return end\r\n               end\r\n          end\r\n     end\r\nend\r\n\r\nfunction placeCardAtSnapPoint(card, spOwner, sp, faceDown)\r\n     local rot = spOwner.getRotation()\r\n\r\n     for i=1, 3 do\r\n          rot[i] = rot[i] + sp.rotation[i]\r\n     end\r\n\r\n     if faceDown then rot[3] = 180 end\r\n\r\n     local pos = spOwner.positionToWorld(sp.position)\r\n     card.setPositionSmooth({pos[1], pos[2] + 0.15, pos[3]})\r\n     card.setRotationSmooth(rot)\r\nend\r\n\r\nfunction checkIfSelected(actionName)\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.type == 'Card' and obj.hasTag(\"Action Card\") and getName(obj) == actionName then\r\n               return true\r\n          end\r\n     end\r\n\r\n     return false\r\nend\r\n\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction countSelectedActionCards()\r\n     local n = 0\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               n = n + 1\r\n          end\r\n     end\r\n\r\n     return n\r\nend\r\n\r\nfunction onObjectEnterZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, true)\r\n          end\r\n     end\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction refreshButtonHighlights()\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     local startInd = btnIndexOffset\r\n     local endInd = btnIndexOffset * 2 - 1\r\n\r\n     if adv2p then\r\n          startInd = btnIndexOffset * 2 + adv2pBtnIndexOffset\r\n          endInd = (btnIndexOffset + adv2pBtnIndexOffset) * 2 - 1\r\n     end\r\n\r\n     if prestigeSearch then \r\n          startInd = 1\r\n          endInd = 1\r\n     end\r\n\r\n     for i=startInd, endInd do\r\n          self.editButton({\r\n               index = i,\r\n               color = color(0,0,0,0)\r\n          })\r\n     end\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               local ind = adv2pButtonIndex[getName(obj)]\r\n\r\n               if ind then\r\n                    local name = getName(obj)\r\n                    local index = adv2p and adv2pButtonIndex[name] + adv2pBtnIndexOffset or buttonIndex[name] + btnIndexOffset\r\n\r\n                    if prestigeSearch and obj.hasTag(\"PrestigeSearch\") then\r\n                         index = 1\r\n                    end\r\n\r\n                    self.editButton({\r\n                         index = index,\r\n                         color = color(0,0,0,0.8)\r\n                    })\r\n               end\r\n          end\r\n     end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Action Select Menu.7552ef.lua\")",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5c95f7",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 0.000176999587,
        "posY": 1.4814992,
        "posZ": 24.5775871,
        "rotX": -5.12999137E-08,
        "rotY": 1.41483136E-09,
        "rotZ": 8.869487E-08,
        "scaleX": 0.49882403,
        "scaleY": 1.0,
        "scaleZ": 0.4981664
      },
      "Nickname": "Action Select Menu",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153253968793/2CB45A8324D3F5E56FBDBCA4CC3072EC4DC21B9C/",
        "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153253968710/236B926EB025C02016BC6F499EEFB964B05AA11E/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Action Select Menu.5c95f7.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Action Select Menu.5c95f7.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/actionSelectMenu\")\r\n\r\nplayer = \"Blue\"\r\n\r\nactionZone_GUID = Global.getVar(\"actionZone_GUID\")[3]\r\nselectedActionCardTile_GUID = \"a5737a\"\r\nselectedActionCardZone_GUID = Global.getVar(\"selectedActionZone_GUID\")[3]\nend)\n__bundle_register(\"RftG/actionSelectMenu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nprestigeButton_GUID = {['b5027c']=1,['77721b']=1,['a276bc']=1,['09bbe0']=1}\r\ntargetActionCardName = \"\"\r\nselectedActions = {}\r\nbtnIndexOffset = 7\r\nadv2pBtnIndexOffset = 9\r\n\r\nfunction onload()\r\n     actionZone = getObjectFromGUID(actionZone_GUID)\r\n     selectedActionCardTile = getObjectFromGUID(selectedActionCardTile_GUID)\r\n     selectedActionCardZone = getObjectFromGUID(selectedActionCardZone_GUID)\r\n\r\n     buttonIndex = {}\r\n     adv2pButtonIndex = {}\r\n\r\n     if prestigeButton_GUID[self.getGUID()] then prestigeSearch = true end\r\n\r\n     if prestigeSearch then\r\n          btnIndexOffset = 1\r\n          adv2pBtnIndexOffset = 2\r\n          buttonIndex[\"Prestige / Search\"] = 0\r\n          adv2pButtonIndex[\"Prestige / Search\"] = 1\r\n     else\r\n          local i = 0\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNames\")) do\r\n               buttonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n\r\n          local i = 14\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNamesAdv2p\")) do\r\n               adv2pButtonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n     end\r\n\r\n     createButtons()\r\n\r\n     refreshButtonHighlights()\r\n\r\n     local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local hideFrom = {}\r\n     for _, target in pairs(players) do\r\n          if target ~= player then\r\n               hideFrom[#hideFrom + 1] = target\r\n          end\r\n     end\r\n\r\n     self.setInvisibleTo(hideFrom)\r\nend\r\n\r\nfunction createButtons()\r\n     local tooltips = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local tooltips2pAdv = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local clickFunc = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"settleClick\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local clickFunc2pAdv = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"develop2Click\",\r\n          \"settleClick\",\r\n          \"settle2Click\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local startx = -5.73\r\n     local startx2p = 7.63\r\n\r\n     if prestigeSearch then\r\n          tooltips = {\"Prestige / Search\"}\r\n          tooltips2pAdv = tooltips\r\n          clickFunc = {\"prestigeSearchClick\"}\r\n          clickFunc2pAdv = clickFunc\r\n          startx = 0\r\n          startx2p = 0\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = clickFunc[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx + (i-1) * 1.905, 0.11, 0},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips[i]\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx + (i-1) * 1.905, 0.11, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = clickFunc2pAdv[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx2p - (i-1) * 1.895, 0, 0},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips2pAdv[i]\r\n          })\r\n     end\r\n\r\n     -- these extra set of buttons are for highlighting selected actions\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx2p - (i-1) * 1.895, 0, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\nend\r\n\r\nfunction explore5Click()\r\n     targetActionCardName = \"Explore (+5)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction explore11Click()\r\n     targetActionCardName = \"Explore (+1,+1)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction developClick()\r\n     targetActionCardName = \"Develop\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction develop2Click()\r\n     targetActionCardName = \"DevelopAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settleClick()\r\n     targetActionCardName = \"Settle\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settle2Click()\r\n     targetActionCardName = \"SettleAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumeTradeClick()\r\n     targetActionCardName = \"Consume ($)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumex2Click()\r\n     targetActionCardName = \"Consume (x2)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction produceClick()\r\n     targetActionCardName = \"Produce\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction prestigeSearchClick()\r\n     targetActionCardName = \"Prestige / Search\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction selectPhaseCo()\r\n     if Global.getVar(\"gameStarted\") == false or Global.getVar(\"currentPhaseIndex\") ~= 0 then\r\n          return 1\r\n     end\r\n\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n     local targetName = targetActionCardName\r\n\r\n     if adv2p then\r\n          -- Check to see if action was already selected. If so, just return it back to selection area\r\n          if checkIfSelected(targetName) then\r\n               returnSelectedActionCard(targetName)\r\n               return 1\r\n          end\r\n     else\r\n          returnSelectedActionCard()\r\n     end\r\n\r\n     wait(0.01)\r\n\r\n     local sp = selectedActionCardTile.getSnapPoints()\r\n     local rot = self.getRotation()\r\n     local objs = actionZone.getObjects()\r\n     local targetSnapIndex = 1\r\n\r\n     if adv2p then\r\n          local cardN = countSelectedActionCards()\r\n\r\n          -- too many selected cards\r\n          if cardN >= 2 then\r\n               return 1\r\n          elseif cardN == 1 then\r\n               -- move the other card into the correct spot just in case\r\n               for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n                    if obj.hasTag(\"Action Card\") then\r\n                         obj.setPositionSmooth(selectedActionCardTile.positionToWorld(sp[2].position))\r\n                         break\r\n                    end\r\n               end\r\n          end\r\n\r\n          targetSnapIndex = targetSnapIndex + 1 + cardN\r\n     end\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.type == \"Card\" and getName(obj) == targetName then\r\n               local pos = selectedActionCardTile.positionToWorld(sp[targetSnapIndex].position)\r\n\r\n               obj.setPosition({pos[1], pos[2] + 1, pos[3]})\r\n               obj.setRotation({rot[1], rot[2], 180})\r\n               return 1\r\n          end\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction returnSelectedActionCard(name)\r\n     local objs = selectedActionCardZone.getObjects()\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               if not name or name == getName(obj) then\r\n                    obj.setPosition(actionZone.getPosition())\r\n                    obj.setRotationSmooth({obj.getRotation()[1],obj.getRotation()[2], 0})\r\n                    if name then return end\r\n               end\r\n          end\r\n     end\r\nend\r\n\r\nfunction placeCardAtSnapPoint(card, spOwner, sp, faceDown)\r\n     local rot = spOwner.getRotation()\r\n\r\n     for i=1, 3 do\r\n          rot[i] = rot[i] + sp.rotation[i]\r\n     end\r\n\r\n     if faceDown then rot[3] = 180 end\r\n\r\n     local pos = spOwner.positionToWorld(sp.position)\r\n     card.setPositionSmooth({pos[1], pos[2] + 0.15, pos[3]})\r\n     card.setRotationSmooth(rot)\r\nend\r\n\r\nfunction checkIfSelected(actionName)\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.type == 'Card' and obj.hasTag(\"Action Card\") and getName(obj) == actionName then\r\n               return true\r\n          end\r\n     end\r\n\r\n     return false\r\nend\r\n\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction countSelectedActionCards()\r\n     local n = 0\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               n = n + 1\r\n          end\r\n     end\r\n\r\n     return n\r\nend\r\n\r\nfunction onObjectEnterZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, true)\r\n          end\r\n     end\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction refreshButtonHighlights()\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     local startInd = btnIndexOffset\r\n     local endInd = btnIndexOffset * 2 - 1\r\n\r\n     if adv2p then\r\n          startInd = btnIndexOffset * 2 + adv2pBtnIndexOffset\r\n          endInd = (btnIndexOffset + adv2pBtnIndexOffset) * 2 - 1\r\n     end\r\n\r\n     if prestigeSearch then \r\n          startInd = 1\r\n          endInd = 1\r\n     end\r\n\r\n     for i=startInd, endInd do\r\n          self.editButton({\r\n               index = i,\r\n               color = color(0,0,0,0)\r\n          })\r\n     end\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               local ind = adv2pButtonIndex[getName(obj)]\r\n\r\n               if ind then\r\n                    local name = getName(obj)\r\n                    local index = adv2p and adv2pButtonIndex[name] + adv2pBtnIndexOffset or buttonIndex[name] + btnIndexOffset\r\n\r\n                    if prestigeSearch and obj.hasTag(\"PrestigeSearch\") then\r\n                         index = 1\r\n                    end\r\n\r\n                    self.editButton({\r\n                         index = index,\r\n                         color = color(0,0,0,0.8)\r\n                    })\r\n               end\r\n          end\r\n     end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Action Select Menu.5c95f7.lua\")",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "74c6f0",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 24.6139851,
        "posY": 1.4814992,
        "posZ": -0.0008694984,
        "rotX": 2.93364735E-07,
        "rotY": 90.0,
        "rotZ": 1.79656439E-07,
        "scaleX": 0.49882403,
        "scaleY": 1.0,
        "scaleZ": 0.4981664
      },
      "Nickname": "Action Select Menu",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153253968793/2CB45A8324D3F5E56FBDBCA4CC3072EC4DC21B9C/",
        "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153253968710/236B926EB025C02016BC6F499EEFB964B05AA11E/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Action Select Menu.74c6f0.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Action Select Menu.74c6f0.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/actionSelectMenu\")\r\n\r\nplayer = \"Green\"\r\n\r\nactionZone_GUID = Global.getVar(\"actionZone_GUID\")[4]\r\nselectedActionCardTile_GUID = \"2c39a5\"\r\nselectedActionCardZone_GUID = \"326786\"\nend)\n__bundle_register(\"RftG/actionSelectMenu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"util\")\r\n\r\nprestigeButton_GUID = {['b5027c']=1,['77721b']=1,['a276bc']=1,['09bbe0']=1}\r\ntargetActionCardName = \"\"\r\nselectedActions = {}\r\nbtnIndexOffset = 7\r\nadv2pBtnIndexOffset = 9\r\n\r\nfunction onload()\r\n     actionZone = getObjectFromGUID(actionZone_GUID)\r\n     selectedActionCardTile = getObjectFromGUID(selectedActionCardTile_GUID)\r\n     selectedActionCardZone = getObjectFromGUID(selectedActionCardZone_GUID)\r\n\r\n     buttonIndex = {}\r\n     adv2pButtonIndex = {}\r\n\r\n     if prestigeButton_GUID[self.getGUID()] then prestigeSearch = true end\r\n\r\n     if prestigeSearch then\r\n          btnIndexOffset = 1\r\n          adv2pBtnIndexOffset = 2\r\n          buttonIndex[\"Prestige / Search\"] = 0\r\n          adv2pButtonIndex[\"Prestige / Search\"] = 1\r\n     else\r\n          local i = 0\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNames\")) do\r\n               buttonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n\r\n          local i = 14\r\n          for _, entry in ipairs(Global.getVar(\"phaseCardNamesAdv2p\")) do\r\n               adv2pButtonIndex[entry] = i\r\n               i = i + 1\r\n          end\r\n     end\r\n\r\n     createButtons()\r\n\r\n     refreshButtonHighlights()\r\n\r\n     local players = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local hideFrom = {}\r\n     for _, target in pairs(players) do\r\n          if target ~= player then\r\n               hideFrom[#hideFrom + 1] = target\r\n          end\r\n     end\r\n\r\n     self.setInvisibleTo(hideFrom)\r\nend\r\n\r\nfunction createButtons()\r\n     local tooltips = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local tooltips2pAdv = {\r\n          \"I: Explore (+5)\",\r\n          \"I: Explore (+1,+1)\",\r\n          \"II: Develop\",\r\n          \"II: Develop\",\r\n          \"III: Settle\",\r\n          \"III: Settle\",\r\n          \"IV: Consume ($)\",\r\n          \"IV: Consume (2x)\",\r\n          \"V: Produce\"\r\n     }\r\n\r\n     local clickFunc = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"settleClick\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local clickFunc2pAdv = {\r\n          \"explore5Click\",\r\n          \"explore11Click\",\r\n          \"developClick\",\r\n          \"develop2Click\",\r\n          \"settleClick\",\r\n          \"settle2Click\",\r\n          \"consumeTradeClick\",\r\n          \"consumex2Click\",\r\n          \"produceClick\"\r\n     }\r\n\r\n     local startx = -5.73\r\n     local startx2p = 7.63\r\n\r\n     if prestigeSearch then\r\n          tooltips = {\"Prestige / Search\"}\r\n          tooltips2pAdv = tooltips\r\n          clickFunc = {\"prestigeSearchClick\"}\r\n          clickFunc2pAdv = clickFunc\r\n          startx = 0\r\n          startx2p = 0\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = clickFunc[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx + (i-1) * 1.905, 0.11, 0},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips[i]\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx + (i-1) * 1.905, 0.11, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\n\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = clickFunc2pAdv[i],\r\n               function_owner = self,\r\n               width = 600,\r\n               height = 600,\r\n               position = {startx2p - (i-1) * 1.895, 0, 0},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               tooltip = tooltips2pAdv[i]\r\n          })\r\n     end\r\n\r\n     -- these extra set of buttons are for highlighting selected actions\r\n     for i=1, #tooltips2pAdv do\r\n          self.createButton({\r\n               click_function = \"none\",\r\n               function_owner = self,\r\n               width = 0,\r\n               height = 0,\r\n               font_size = 120,\r\n               position = {startx2p - (i-1) * 1.895, 0, -0.1},\r\n               rotation = {0, 0, 180},\r\n               color = color(0, 0, 0, 0),\r\n               label = \"■\",\r\n               scale = {2,1,2},\r\n               font_size = 1000,\r\n               font_color = \"Yellow\"\r\n          })\r\n     end\r\nend\r\n\r\nfunction explore5Click()\r\n     targetActionCardName = \"Explore (+5)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction explore11Click()\r\n     targetActionCardName = \"Explore (+1,+1)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction developClick()\r\n     targetActionCardName = \"Develop\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction develop2Click()\r\n     targetActionCardName = \"DevelopAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settleClick()\r\n     targetActionCardName = \"Settle\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction settle2Click()\r\n     targetActionCardName = \"SettleAdv2p\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumeTradeClick()\r\n     targetActionCardName = \"Consume ($)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction consumex2Click()\r\n     targetActionCardName = \"Consume (x2)\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction produceClick()\r\n     targetActionCardName = \"Produce\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction prestigeSearchClick()\r\n     targetActionCardName = \"Prestige / Search\"\r\n     startLuaCoroutine(self, \"selectPhaseCo\")\r\nend\r\n\r\nfunction selectPhaseCo()\r\n     if Global.getVar(\"gameStarted\") == false or Global.getVar(\"currentPhaseIndex\") ~= 0 then\r\n          return 1\r\n     end\r\n\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n     local targetName = targetActionCardName\r\n\r\n     if adv2p then\r\n          -- Check to see if action was already selected. If so, just return it back to selection area\r\n          if checkIfSelected(targetName) then\r\n               returnSelectedActionCard(targetName)\r\n               return 1\r\n          end\r\n     else\r\n          returnSelectedActionCard()\r\n     end\r\n\r\n     wait(0.01)\r\n\r\n     local sp = selectedActionCardTile.getSnapPoints()\r\n     local rot = self.getRotation()\r\n     local objs = actionZone.getObjects()\r\n     local targetSnapIndex = 1\r\n\r\n     if adv2p then\r\n          local cardN = countSelectedActionCards()\r\n\r\n          -- too many selected cards\r\n          if cardN >= 2 then\r\n               return 1\r\n          elseif cardN == 1 then\r\n               -- move the other card into the correct spot just in case\r\n               for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n                    if obj.hasTag(\"Action Card\") then\r\n                         obj.setPositionSmooth(selectedActionCardTile.positionToWorld(sp[2].position))\r\n                         break\r\n                    end\r\n               end\r\n          end\r\n\r\n          targetSnapIndex = targetSnapIndex + 1 + cardN\r\n     end\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.type == \"Card\" and getName(obj) == targetName then\r\n               local pos = selectedActionCardTile.positionToWorld(sp[targetSnapIndex].position)\r\n\r\n               obj.setPosition({pos[1], pos[2] + 1, pos[3]})\r\n               obj.setRotation({rot[1], rot[2], 180})\r\n               return 1\r\n          end\r\n     end\r\n\r\n     return 1\r\nend\r\n\r\nfunction returnSelectedActionCard(name)\r\n     local objs = selectedActionCardZone.getObjects()\r\n\r\n     for _, obj in pairs(objs) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               if not name or name == getName(obj) then\r\n                    obj.setPosition(actionZone.getPosition())\r\n                    obj.setRotationSmooth({obj.getRotation()[1],obj.getRotation()[2], 0})\r\n                    if name then return end\r\n               end\r\n          end\r\n     end\r\nend\r\n\r\nfunction placeCardAtSnapPoint(card, spOwner, sp, faceDown)\r\n     local rot = spOwner.getRotation()\r\n\r\n     for i=1, 3 do\r\n          rot[i] = rot[i] + sp.rotation[i]\r\n     end\r\n\r\n     if faceDown then rot[3] = 180 end\r\n\r\n     local pos = spOwner.positionToWorld(sp.position)\r\n     card.setPositionSmooth({pos[1], pos[2] + 0.15, pos[3]})\r\n     card.setRotationSmooth(rot)\r\nend\r\n\r\nfunction checkIfSelected(actionName)\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.type == 'Card' and obj.hasTag(\"Action Card\") and getName(obj) == actionName then\r\n               return true\r\n          end\r\n     end\r\n\r\n     return false\r\nend\r\n\r\nfunction getName(obj)\r\n     return obj.getName() .. (obj.hasTag(\"Adv2p\") and \"Adv2p\" or \"\")\r\nend\r\n\r\nfunction countSelectedActionCards()\r\n     local n = 0\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               n = n + 1\r\n          end\r\n     end\r\n\r\n     return n\r\nend\r\n\r\nfunction onObjectEnterZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, true)\r\n          end\r\n     end\r\nend\r\n\r\nfunction onObjectLeaveZone(zone, obj)\r\n     if zone == selectedActionCardZone then\r\n          refreshButtonHighlights()\r\n          if obj.hasTag(\"PrestigeSearch\") then\r\n               uiSetVisibilityToPlayer(\"prestigeSearchMenu\", player, false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction refreshButtonHighlights()\r\n     local adv2p = Global.getVar(\"advanced2p\")\r\n\r\n     local startInd = btnIndexOffset\r\n     local endInd = btnIndexOffset * 2 - 1\r\n\r\n     if adv2p then\r\n          startInd = btnIndexOffset * 2 + adv2pBtnIndexOffset\r\n          endInd = (btnIndexOffset + adv2pBtnIndexOffset) * 2 - 1\r\n     end\r\n\r\n     if prestigeSearch then \r\n          startInd = 1\r\n          endInd = 1\r\n     end\r\n\r\n     for i=startInd, endInd do\r\n          self.editButton({\r\n               index = i,\r\n               color = color(0,0,0,0)\r\n          })\r\n     end\r\n\r\n     for _, obj in pairs(selectedActionCardZone.getObjects()) do\r\n          if obj.hasTag(\"Action Card\") then\r\n               local ind = adv2pButtonIndex[getName(obj)]\r\n\r\n               if ind then\r\n                    local name = getName(obj)\r\n                    local index = adv2p and adv2pButtonIndex[name] + adv2pBtnIndexOffset or buttonIndex[name] + btnIndexOffset\r\n\r\n                    if prestigeSearch and obj.hasTag(\"PrestigeSearch\") then\r\n                         index = 1\r\n                    end\r\n\r\n                    self.editButton({\r\n                         index = index,\r\n                         color = color(0,0,0,0.8)\r\n                    })\r\n               end\r\n          end\r\n     end\r\nend\nend)\n__bundle_register(\"util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Action Select Menu.74c6f0.lua\")",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "6f9171",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -0.000400770543,
        "posY": 1.4814992,
        "posZ": 3.09062147,
        "rotX": 2.36431248E-08,
        "rotY": 179.992569,
        "rotZ": -1.41063641E-08,
        "scaleX": 2.800913,
        "scaleY": 1.0,
        "scaleZ": 2.800913
      },
      "Nickname": "Setup Menu",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153256618800/B2FE235A70C0EFA5A9F039F62ED35402312CAAC6/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Setup Menu.6f9171.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Setup Menu.6f9171.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/util\")\r\n\r\nvpPoolBag_GUID = \"c2e459\"\r\nvpTokensBag_GUID = \"5719f7\"\r\ntiedVpTokensBag_GUID = \"d95c9e\"\r\nprestigeBag_GUID = \"f3bcc8\"\r\nmainDeck_GUID = \"b2cf34\"\r\nprestigeLeaderTile_GUID = \"17753d\"\r\nexpDeck_GUID = {\"bfc713\", \"d7de72\", \"41c70b\"}\r\ndrawMat_GUID = \"021362\"\r\n\r\nvpPoolBagPlacement = {0.00, 1.40, 4.49}\r\nvpTokensBagPlacement = {0.00, 500, 4.49}\r\ntiedVpTokensBagPlacement = {-2.36, 1.46, 4.44}\r\nprestigeBagPlacement = {2.36, 1.46, 4.44}\r\ndrawMatPlacement = {0.00, 1.48, 0.00}\r\nmainDeckPlacement = {-1.75, 4.13, -0.02}\r\nprestigeLeaderTilePlacement = {5.70, 1.58, 4.45}\r\nadvanced2p = false\r\nuseGoals = false\r\nuseTakeovers = false\r\n\r\nfirstGoals_GUID = {\"862ecd\", \"0717b0\", \"4d4f32\", \"aa5bbd\", \"e62464\", \"7f50e3\", \"ef48af\", \"64829a\", \"e1d231\", \"37e57d\", \"f2932e\", \"e2b46b\"}\r\nmostGoals_GUID = {\"417dc7\", \"c418bc\", \"2d8ccd\", \"61073b\", \"a9138d\", \"b0292b\", \"e64f18\", \"1c15bf\"}\r\nfirstGoalsIndex = {8,10,12}\r\nmostGoalsIndex = {6,7,8}\r\n\r\nfirstGoalsPlacement = {{-5.33, 1.48, 2.79},{-5.33, 1.48, 0.94},{-5.33, 1.48, -0.91},{-5.33, 1.48, -2.76}}\r\nmostGoalsPlacement = {{5.69, 1.48, -1.01},{5.69, 1.48, 0.96}}\r\n\r\nexpansionLevel = 0\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.active = self.UI.getAttribute(\"menu\", \"active\")\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\n--Loads save, creates buttons and identifies key entities\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          self.UI.setAttribute(\"menu\", \"active\", data.active)\r\n     end\r\n\r\n     self.interactable = false\r\n     mainBag = getObjectFromGUID(\"4c1650\")\r\n\r\n     updatePlayerCountLabel()\r\nend\r\n\r\nfunction startGameClick(player, button, id)\r\n     if button ~= \"-1\" then return end\r\n\r\n     self.setPosition({0, -1, 0})\r\n     self.UI.setAttribute(\"menu\", \"active\", \"false\")\r\n     startLuaCoroutine(self, \"setupCo\")\r\n\r\n     --self.destruct()\r\nend\r\n\r\nfunction setupCo()\r\n     local registeredColors = {\"Yellow\", \"Red\", \"Blue\", \"Green\"}\r\n     local players = Global.call(\"getSeatedPlayersWithHands\")\r\n     local playerCount = math.max(2, #players)\r\n\r\n     broadcastToAll(\"Setting up for a \" .. playerCount .. \" player game.\", \"White\")\r\n\r\n     -- removed unused objects by players\r\n     local registeredPlayers = {}\r\n     for _, player in pairs(players) do\r\n          registeredPlayers[player] = 1\r\n     end\r\n\r\n     local unregisteredPlayers = {}\r\n     for _, color in pairs(registeredColors) do\r\n          if not registeredPlayers[color] then\r\n               unregisteredPlayers[#unregisteredPlayers + 1] = color\r\n          end\r\n     end\r\n\r\n     local playerData = Global.getVar(\"playerData\")\r\n     local readyTokens_GUID = Global.getVar(\"readyTokens_GUID\")\r\n     local smallReadyTokens_GUID = Global.getVar(\"smallReadyTokens_GUID\")\r\n     local statTracker_GUID = Global.getVar(\"statTracker_GUID\")\r\n\r\n     for _, player in pairs(unregisteredPlayers) do\r\n          local i = playerData[player].index\r\n          getObjectFromGUID(readyTokens_GUID[i]).destruct()\r\n          getObjectFromGUID(smallReadyTokens_GUID[i]).destruct()\r\n          getObjectFromGUID(statTracker_GUID[i]).destruct()\r\n     end\r\n\r\n     local drawMat = mainBag.takeObject({\r\n          guid = drawMat_GUID,\r\n          position = drawMatPlacement,\r\n          rotation = {0, 180, 0},\r\n          smooth = false\r\n     })\r\n     drawMat.interactable = false\r\n     drawMat.setLock(true)\r\n\r\n     -- place vp bags\r\n     local vpPoolBag = mainBag.takeObject({\r\n          guid = vpPoolBag_GUID,\r\n          position = vpPoolBagPlacement,\r\n          smooth = false\r\n     })\r\n\r\n     local vpTokensBag = mainBag.takeObject({\r\n          guid = vpTokensBag_GUID,\r\n          position = vpTokensBagPlacement,\r\n          smooth = false\r\n     })\r\n\r\n     vpPoolBag.setLock(true)\r\n     vpTokensBag.setLock(true)\r\n\r\n     local vpPoolBagPos = vpPoolBag.getPosition()\r\n     for i=1, playerCount * 12 do\r\n          vpPoolBag.putObject(vpTokensBag.takeObject())\r\n     end\r\n\r\n     if expansionLevel >= 3 then\r\n          local prestigeBag = mainBag.takeObject({\r\n               guid = prestigeBag_GUID,\r\n               position = prestigeBagPlacement,\r\n               smooth = false\r\n          })\r\n          prestigeBag.setLock(true)\r\n\r\n          local tile = mainBag.takeObject({\r\n               guid = prestigeLeaderTile_GUID,\r\n               position = prestigeLeaderTilePlacement,\r\n               smooth = false,\r\n               rotation = {0, 180, 0}\r\n          })\r\n     end\r\n\r\n     -- place Deck\r\n     local deck = mainBag.takeObject({\r\n          guid = mainDeck_GUID,\r\n          position = mainDeckPlacement,\r\n          rotation = {0, 180, 180},\r\n          smooth = false\r\n     })\r\n\r\n     -- Remove gambling world because it is going to get replaced\r\n     if expansionLevel >= 2 then\r\n          for _, card in pairs(deck.getObjects()) do\r\n               if card.name == \"Gambling World\" then\r\n                    mainBag.putObject(deck.takeObject({guid = card.guid}))\r\n                    break\r\n               end\r\n          end\r\n     end\r\n\r\n     -- check Expansions\r\n     for i=1, expansionLevel do\r\n          wait(0.1)\r\n          deck.putObject(mainBag.takeObject({guid = expDeck_GUID[i], rotation={0, 180, 180}}))\r\n     end\r\n\r\n     -- check if using goals\r\n     if useGoals and expansionLevel > 0 then\r\n          local tiedVpBag = mainBag.takeObject({\r\n               guid = tiedVpTokensBag_GUID,\r\n               position = tiedVpTokensBagPlacement,\r\n               smooth = false\r\n          })\r\n          tiedVpBag.setLock(true)\r\n\r\n          local shuffledFirstGoals = {}\r\n          local shuffledMostGoals = {}\r\n\r\n          for i=1, firstGoalsIndex[expansionLevel] do\r\n               shuffledFirstGoals[#shuffledFirstGoals + 1] = firstGoals_GUID[i]\r\n          end\r\n          \r\n          for i=1, mostGoalsIndex[expansionLevel] do\r\n               shuffledMostGoals[#shuffledMostGoals + 1] = mostGoals_GUID[i]\r\n          end\r\n\r\n          shuffle(shuffledFirstGoals)\r\n          shuffle(shuffledMostGoals)\r\n\r\n          for i=1, #mostGoalsPlacement do\r\n               mainBag.takeObject({\r\n                    guid = shuffledMostGoals[i],\r\n                    position = mostGoalsPlacement[i],\r\n                    rotation = {0, 90, 0},\r\n                    smooth = false\r\n               })\r\n          end\r\n\r\n          for i=1, #firstGoalsPlacement do\r\n               mainBag.takeObject({\r\n                    guid = shuffledFirstGoals[i],\r\n                    position = firstGoalsPlacement[i],\r\n                    rotation = {0, 270, 0},\r\n                    smooth = false\r\n               })\r\n          end\r\n     end\r\n\r\n     wait(1)\r\n\r\n     -- search deck for start worlds\r\n     local card_db = Global.getVar(\"card_db\")\r\n     local startWorlds_GUID = {}\r\n     for _, card in pairs(deck.getObjects()) do\r\n          if card_db[card.name] == nil then\r\n               print(\"'\" .. card.name .. \"' not found in card lookup table.\", \"Red\")\r\n          elseif card_db[card.name].flags[\"START\"] then\r\n               startWorlds_GUID[#startWorlds_GUID + 1] = card.guid\r\n          end\r\n     end\r\n\r\n     startWorlds_GUID = Global.call(\"shuffle\", startWorlds_GUID)\r\n\r\n     -- for i=1, #players do\r\n     --      local card = deck.takeObject({guid = startWorlds_GUID[i]})\r\n     --      wait(0.1)\r\n     --      card.deal(1, players[i])\r\n     --      Global.call(\"attemptPlayCard\", {card, players[i]})\r\n     --      card.highlightOn(\"Yellow\")\r\n     --      card.addTag(\"Selected\")\r\n     -- end\r\n     local redStartWorlds_GUID = {}\r\n     local blueStartWorlds_GUID = {}\r\n\r\n     for _, card in pairs(deck.getObjects()) do\r\n          local data = card_db[card.name]\r\n          if not data then\r\n               print(\"'\" .. card.name .. \"' not found in card lookup table.\", \"Red\")\r\n          elseif data.flags[\"START\"] then\r\n               if data.flags[\"START_RED\"] then\r\n                    redStartWorlds_GUID[#redStartWorlds_GUID + 1] = card.guid\r\n               elseif data.flags[\"START_BLUE\"] then\r\n                    blueStartWorlds_GUID[#blueStartWorlds_GUID + 1] = card.guid\r\n               end\r\n          end\r\n     end\r\n\r\n     redStartWorlds_GUID = shuffle(redStartWorlds_GUID)\r\n     blueStartWorlds_GUID = shuffle(blueStartWorlds_GUID)\r\n     \r\n     for i=1, #players do\r\n          local card = deck.takeObject({guid = redStartWorlds_GUID[i]})\r\n          card.deal(1, players[i])\r\n          card.highlightOn(\"Orange\")\r\n          card.addTag(\"Explore Highlight\")\r\n\r\n          card = deck.takeObject({guid = blueStartWorlds_GUID[i]})\r\n          card.deal(1, players[i])\r\n          card.highlightOn(\"Orange\")\r\n          card.addTag(\"Explore Highlight\")\r\n     end\r\n\r\n     wait(0.1)\r\n\r\n     deck.shuffle()\r\n\r\n     for i=1, #players do\r\n          deck.deal(6, players[i])\r\n     end\r\n\r\n     Global.call(\"gameStart\", {advanced2p = advanced2p, takeovers = useTakeovers, expansionLevel = expansionLevel})\r\n\r\n     return 1\r\nend\r\n\r\nfunction onPlayerChangeColor(player_color)\r\n     updatePlayerCountLabel()\r\nend\r\n\r\nfunction updatePlayerCountLabel()\r\n     local n = #getSeatedPlayersWithHands()\r\n     self.UI.setValue(\"playerCount\", \"Players: \" .. n)\r\n     self.UI.setAttribute(\"advancedVariant\", \"interactable\", n <= 2)\r\n\r\n     if advanced2p and n > 2 then\r\n          advanced2p = false\r\n          self.UI.setAttribute(\"advancedVariant\", \"isOn\", false)\r\n     end\r\nend\r\n\r\nfunction advancedVariantClicked(player, value, id)\r\n     self.UI.setAttribute(id, \"isOn\", value)\r\n     advanced2p = (value == \"True\" and true) or false\r\nend\r\n\r\nfunction expClicked(player, value, id)\r\n     self.UI.setAttribute(id, \"isOn\", value)\r\n     if value == \"True\" then\r\n          expansionLevel = tonumber(id:sub(id:len(), id:len()))\r\n          \r\n          self.UI.setAttribute(\"useGoals\" , \"interactable\", expansionLevel > 0)\r\n          if expansionLevel == 0 then\r\n               useGoals = false\r\n               self.UI.setAttribute(\"useGoals\", \"isOn\", false)\r\n          end\r\n\r\n          self.UI.setAttribute(\"useTakeovers\", \"interactable\", expansionLevel >= 2)\r\n          if expansionLevel < 2 then\r\n               useTakeovers = false\r\n               self.UI.setAttribute(\"useTakeovers\", \"isOn\", false)\r\n          end\r\n     end\r\nend\r\n\r\nfunction useGoalsClicked(player, value, id)\r\n     self.UI.setAttribute(id, \"isOn\", value)\r\n     useGoals = value == \"True\" and true or false\r\nend\r\n\r\nfunction useTakeoversClicked(player, value, id)\r\n     self.UI.setAttribute(id, \"isOn\", value)\r\n     useTakeovers = value == \"True\" and true or false\r\nend\nend)\n__bundle_register(\"RftG/util\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction magiclines(s)\r\n    if s:sub(-1)~=\"\\n\" then s=s..\"\\n\" end\r\n    return s:gmatch(\"(.-)\\n\")\r\nend\r\n\r\nfunction all_trim(s)\r\n    return s:gsub('%s+', '')\r\nend\r\n\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat\r\n        coroutine.yield(0)\r\n    until os.time() > start + time\r\nend\r\n\r\nfunction shuffle(tbl)\r\n    for i = #tbl, 2, -1 do\r\n        local j = math.random(i)\r\n        tbl[i], tbl[j] = tbl[j], tbl[i]\r\n    end\r\n    return tbl\r\nend\r\n\r\nfunction split(str, delimiter)\r\n    local fields = {}\r\n\r\n    local sep = delimiter or \" \"\r\n    local pattern = string.format(\"([^%s]+)\", delimiter)\r\n    string.gsub(str, pattern, function(c) fields[#fields + 1] = c end)\r\n\r\n    return fields\r\nend\r\n\r\nfunction tableLength(tbl)\r\n    local count = 0\r\n    for k, v in pairs(tbl) do count = count + 1 end\r\n        return count\r\n    end\r\n\r\n    function getSeatedPlayersWithHands()\r\n    local results = {}\r\n    local players = getSeatedPlayers()\r\n\r\n    for i=1, #players do\r\n        if Player[players[i]].seated and Player[players[i]].getHandCount() > 0 then\r\n            results[#results + 1] = players[i]\r\n        end\r\n    end\r\n    return results\r\nend\r\n\r\nfunction add(v1, v2)\r\n    return {v1[1] + v2[1], v1[2] + v2[2], v1[3] + v2[3]}\r\nend\r\n\r\nfunction getCardSlot(card)\r\n    local hits = Physics.cast({\r\n         origin = add(card.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 5\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.hasTag(\"Slot\") then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction getCard(slot)\r\n    local hits = Physics.cast({\r\n         origin = add(slot.getPosition(), {0,1,0}),\r\n         direction = {0,-1,0},\r\n         max_distance = 2\r\n    })\r\n\r\n    for _, hit in pairs(hits) do\r\n         if hit.hit_object.type == 'Card' and hit.hit_object.is_face_down == false then\r\n              return hit.hit_object\r\n         end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction deleteLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node and node.value do\r\n        if node.value == value then   -- head of list\r\n            list = {}\r\n            break\r\n        elseif node.next and node.next.value == value then\r\n            node.next = nil\r\n            break\r\n        elseif not node.next then\r\n            break\r\n        end\r\n        node = node.next\r\n    end\r\n\r\n    return list\r\nend\r\n\r\nfunction getLinkedListNode(list, value)\r\n    local node = list\r\n\r\n    while node do\r\n        if node.value == value then\r\n            return node\r\n        end\r\n        \r\n        if not node.next then return nil end\r\n\r\n        node = node.next\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nfunction concatPowerName(power)\r\n    local value = power.name\r\n    if power.name ~= \"DISCARD\" then return value end\r\n    for code, _ in pairs(power.codes) do\r\n        value = value .. \"|\" .. code\r\n    end\r\n    return value\r\nend\r\n\r\nfunction uiSetVisibilityToPlayer(id, playerColor, visible)\r\n    local attr = UI.getAttribute(id, \"visibility\")\r\n    if visible then\r\n         attr = attr .. \"|\" .. playerColor\r\n    else\r\n         local newAttr = \"\"\r\n         tokens = split(attr, \"|\")\r\n\r\n         for i=1, #tokens do\r\n              if tokens[i] ~= playerColor then\r\n                   newAttr = newAttr .. tokens[i] .. \"|\"\r\n              end\r\n         end\r\n\r\n         if newAttr == \"\" then\r\n              attr = \"Brown\"\r\n         else\r\n              attr = newAttr:sub(1, newAttr:len() - 1)\r\n         end\r\n    end\r\n\r\n    UI.setAttribute(id, \"visibility\", attr)\r\nend\nend)\nreturn __bundle_require(\"Setup Menu.6f9171.lua\")",
      "LuaScriptState": "{\"active\":\"true\"}",
      "XmlUI": "<Defaults>\r\n     <Text class=\"label\" fontSize=\"24\" color=\"White\"/>\r\n     <Text class=\"btnLabel\" fontSize=\"50\" fontStyle=\"Bold\" />\r\n     <Toggle textColor=\"White\" resizeTextForBestFit=\"true\"/>\r\n</Defaults>\r\n\r\n<Panel id=\"menu\" width=\"270\" height=\"360\" rotation=\"0 0 180\" active=\"true\" position=\"0 220 -10\" scale=\"0.6\" color=\"#000000CC\">\r\n     <VerticalLayout childForceExpandHeight=\"false\" spacing=\"8\" padding=\"10\">\r\n          <Text id=\"playerCount\" class=\"label\">Players: 0</Text>\r\n          <Toggle id=\"advancedVariant\" onValueChanged=\"advancedVariantClicked\">2P Advanced Variant</Toggle>\r\n          <ToggleGroup preferredHeight=\"150\">\r\n               <VerticalLayout>\r\n               <Toggle id=\"exp0\" onValueChanged=\"expClicked\">Base Game</Toggle>\r\n               <Toggle id=\"exp1\" onValueChanged=\"expClicked\">Gathering Storm</Toggle>\r\n               <Toggle id=\"exp2\" onValueChanged=\"expClicked\">Rebel vs. Imperium</Toggle>\r\n               <Toggle id=\"exp3\" onValueChanged=\"expClicked\">Brink of War</Toggle>\r\n               </VerticalLayout>\r\n          </ToggleGroup>\r\n          <HorizontalLayout>\r\n               <Toggle id=\"useGoals\" onValueChanged=\"useGoalsClicked\" interactable=\"false\">Goals</Toggle>\r\n               <Toggle id=\"useTakeovers\" onValueChanged=\"useTakeoversClicked\" interactable=\"false\">Takeovers</Toggle>\r\n          </HorizontalLayout>\r\n          <Text class=\"label\" fontSize=\"12\">*Have all players seated before starting.</Text>\r\n          <Button fontSize=\"30\" fontStyle=\"Bold\" preferredHeight=\"60\" onClick=\"startGameClick\">Start Game</Button>\r\n     </VerticalLayout>\r\n</Panel>"
    },
    {
      "GUID": "32297e",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -1.74694026,
        "posY": 2.55414248,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": -4.46236E-05,
        "rotZ": 0.0,
        "scaleX": 2.37135315,
        "scaleY": 1.945287,
        "scaleZ": 3.32054
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "fe5c37",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 1.74652648,
        "posY": 2.55,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": -4.46236E-05,
        "rotZ": 0.0,
        "scaleX": 2.36805272,
        "scaleY": 1.95,
        "scaleZ": 3.31162548
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2f8337",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 2.61787987,
        "posY": 1.62768209,
        "posZ": -17.9266968,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 25.987402,
        "scaleY": 0.191388,
        "scaleZ": 11.8238754
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "6a2b88",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -18.0464859,
        "posY": 1.619448,
        "posZ": -2.61331916,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7440434,
        "scaleY": 0.211103931,
        "scaleZ": 26.0364075
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "6707c2",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -2.23623276,
        "posY": 1.65,
        "posZ": 17.98415,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 26.0376434,
        "scaleY": 0.15,
        "scaleZ": 11.8358
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "970244",
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 18.0751534,
        "posY": 1.618376,
        "posZ": 2.74816513,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.7518673,
        "scaleY": 0.213247791,
        "scaleZ": 26.4014969
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1515fe",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 24.9160652,
        "posY": 1.4814992,
        "posZ": 26.798666,
        "rotX": 1.43349366E-09,
        "rotY": 4.644635E-09,
        "rotZ": 2.58573718E-10,
        "scaleX": 3.77104521,
        "scaleY": 1.0,
        "scaleZ": 3.77104521
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153260359171/74A439E49923C1AD6BDED424698DA3884181B5AC/",
        "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153260363690/A708AB6FE30548FB6FE3F56FB4211DB059F8EB31/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "107a21",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -25.03002,
        "posY": 1.4814992,
        "posZ": -26.82889,
        "rotX": -5.38294955E-08,
        "rotY": 179.999344,
        "rotZ": 3.996697E-09,
        "scaleX": 3.77104521,
        "scaleY": 1.0,
        "scaleZ": 3.77104521
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1843673153260359171/74A439E49923C1AD6BDED424698DA3884181B5AC/",
        "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1843673153260363690/A708AB6FE30548FB6FE3F56FB4211DB059F8EB31/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "dd182c",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 5.09190845,
        "posY": 1.50852859,
        "posZ": -24.5324326,
        "rotX": -6.884183E-07,
        "rotY": 179.980347,
        "rotZ": 180.0,
        "scaleX": 0.494924664,
        "scaleY": 0.6351529,
        "scaleZ": 0.494924664
      },
      "Nickname": "Ready",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
        "DiffuseURL": "http://i.imgur.com/LSBlZZX.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Ready.dd182c.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Ready.dd182c.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/readyButton\")\nend)\n__bundle_register(\"RftG/readyButton\", function(require, _LOADED, __bundle_register, __bundle_modules)\nisReady = false\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.isReady = isReady\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          isReady = data.isReady\r\n     end\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Ready\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          rotation = {0, 0, 180},\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Not Ready\"\r\n     })\r\nend\r\n\r\nfunction toggleState(obj, _, rightClick)\r\n     if rightClick or Global.getVar(\"gameStarted\") == false then\r\n          return\r\n     end\r\n\r\n     isReady = not isReady\r\n     Global.call(\"updateReadyButtons\", {player, isReady, true})\r\nend\r\n\r\nfunction setToggleState(ready)\r\n     local rot = self.getRotation()\r\n     isReady = ready\r\n\r\n     if isReady then\r\n          self.setRotation({rot[1], rot[2], 0})\r\n     else\r\n          self.setRotation({rot[1], rot[2], 180})\r\n     end\r\nend\nend)\nreturn __bundle_require(\"Ready.dd182c.lua\")",
      "LuaScriptState": "{\"isReady\":false}",
      "XmlUI": ""
    },
    {
      "GUID": "ab5795",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -24.6641769,
        "posY": 1.50852859,
        "posZ": -5.117879,
        "rotX": -2.258998E-08,
        "rotY": 270.0,
        "rotZ": 180.0,
        "scaleX": 0.494924664,
        "scaleY": 0.6351529,
        "scaleZ": 0.494924664
      },
      "Nickname": "Ready",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
        "DiffuseURL": "http://i.imgur.com/LSBlZZX.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Ready.ab5795.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Ready.ab5795.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/readyButton\")\nend)\n__bundle_register(\"RftG/readyButton\", function(require, _LOADED, __bundle_register, __bundle_modules)\nisReady = false\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.isReady = isReady\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          isReady = data.isReady\r\n     end\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Ready\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          rotation = {0, 0, 180},\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Not Ready\"\r\n     })\r\nend\r\n\r\nfunction toggleState(obj, _, rightClick)\r\n     if rightClick or Global.getVar(\"gameStarted\") == false then\r\n          return\r\n     end\r\n\r\n     isReady = not isReady\r\n     Global.call(\"updateReadyButtons\", {player, isReady, true})\r\nend\r\n\r\nfunction setToggleState(ready)\r\n     local rot = self.getRotation()\r\n     isReady = ready\r\n\r\n     if isReady then\r\n          self.setRotation({rot[1], rot[2], 0})\r\n     else\r\n          self.setRotation({rot[1], rot[2], 180})\r\n     end\r\nend\nend)\nreturn __bundle_require(\"Ready.ab5795.lua\")",
      "LuaScriptState": "{\"isReady\":false}",
      "XmlUI": ""
    },
    {
      "GUID": "37d9aa",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -5.125045,
        "posY": 1.50852859,
        "posZ": 24.5775871,
        "rotX": 2.35277966E-07,
        "rotY": -1.86709421E-08,
        "rotZ": 180.0,
        "scaleX": 0.494924664,
        "scaleY": 0.6351529,
        "scaleZ": 0.494924664
      },
      "Nickname": "Ready",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
        "DiffuseURL": "http://i.imgur.com/LSBlZZX.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Ready.37d9aa.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Ready.37d9aa.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/readyButton\")\nend)\n__bundle_register(\"RftG/readyButton\", function(require, _LOADED, __bundle_register, __bundle_modules)\nisReady = false\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.isReady = isReady\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          isReady = data.isReady\r\n     end\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Ready\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          rotation = {0, 0, 180},\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Not Ready\"\r\n     })\r\nend\r\n\r\nfunction toggleState(obj, _, rightClick)\r\n     if rightClick or Global.getVar(\"gameStarted\") == false then\r\n          return\r\n     end\r\n\r\n     isReady = not isReady\r\n     Global.call(\"updateReadyButtons\", {player, isReady, true})\r\nend\r\n\r\nfunction setToggleState(ready)\r\n     local rot = self.getRotation()\r\n     isReady = ready\r\n\r\n     if isReady then\r\n          self.setRotation({rot[1], rot[2], 0})\r\n     else\r\n          self.setRotation({rot[1], rot[2], 180})\r\n     end\r\nend\nend)\nreturn __bundle_require(\"Ready.37d9aa.lua\")",
      "LuaScriptState": "{\"isReady\":false}",
      "XmlUI": ""
    },
    {
      "GUID": "476374",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 24.6139851,
        "posY": 1.50852847,
        "posZ": 5.12225437,
        "rotX": -9.857507E-07,
        "rotY": 90.00001,
        "rotZ": 180.0,
        "scaleX": 0.494924664,
        "scaleY": 0.6351529,
        "scaleZ": 0.494924664
      },
      "Nickname": "Ready",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
        "DiffuseURL": "http://i.imgur.com/LSBlZZX.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Ready.476374.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Ready.476374.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/readyButton\")\nend)\n__bundle_register(\"RftG/readyButton\", function(require, _LOADED, __bundle_register, __bundle_modules)\nisReady = false\r\n\r\nfunction onSave()\r\n    local saved_data = {}\r\n    saved_data.isReady = isReady\r\n    return JSON.encode(saved_data)\r\nend\r\n\r\nfunction onload(saved_data)\r\n     if saved_data ~= \"\" then\r\n          local data = JSON.decode(saved_data)\r\n          isReady = data.isReady\r\n     end\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Ready\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"toggleState\",\r\n          function_owner = self,\r\n          width = 800,\r\n          height = 800,\r\n          rotation = {0, 0, 180},\r\n          color = color(0, 0, 0, 0),\r\n          tooltip = \"Not Ready\"\r\n     })\r\nend\r\n\r\nfunction toggleState(obj, _, rightClick)\r\n     if rightClick or Global.getVar(\"gameStarted\") == false then\r\n          return\r\n     end\r\n\r\n     isReady = not isReady\r\n     Global.call(\"updateReadyButtons\", {player, isReady, true})\r\nend\r\n\r\nfunction setToggleState(ready)\r\n     local rot = self.getRotation()\r\n     isReady = ready\r\n\r\n     if isReady then\r\n          self.setRotation({rot[1], rot[2], 0})\r\n     else\r\n          self.setRotation({rot[1], rot[2], 180})\r\n     end\r\nend\nend)\nreturn __bundle_require(\"Ready.476374.lua\")",
      "LuaScriptState": "{\"isReady\":false}",
      "XmlUI": ""
    },
    {
      "GUID": "f9c4ee",
      "Name": "BlockSquare",
      "Transform": {
        "posX": -2.627115E-05,
        "posY": 1.49502516,
        "posZ": -25.7303772,
        "rotX": -1.850987E-07,
        "rotY": 0.0308308173,
        "rotZ": -9.05223942E-07,
        "scaleX": 0.8750001,
        "scaleY": 0.0270524025,
        "scaleZ": 0.88
      },
      "Nickname": "Help Text",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "<Panel width=\"1500\" height=\"120\" visibility=\"Black|Yellow\">\r\n     <Text id=\"label\" color=\"White\" fontSize=\"80\"></Text>\r\n</Panel>"
    },
    {
      "GUID": "5a39e2",
      "Name": "BlockSquare",
      "Transform": {
        "posX": -25.794178,
        "posY": 1.49502516,
        "posZ": 0.0008896277,
        "rotX": 2.20123752E-07,
        "rotY": 89.98743,
        "rotZ": -1.8982044E-07,
        "scaleX": 0.8750001,
        "scaleY": 0.0270524025,
        "scaleZ": 0.8750001
      },
      "Nickname": "Help Text",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "<Panel width=\"1500\" height=\"120\" visibility=\"Black|Red\">\r\n     <Text id=\"label\" color=\"White\" fontSize=\"80\"></Text>\r\n</Panel>"
    },
    {
      "GUID": "515d9a",
      "Name": "BlockSquare",
      "Transform": {
        "posX": 0.000173447683,
        "posY": 1.49502516,
        "posZ": 25.7545357,
        "rotX": 1.98723722E-08,
        "rotY": 179.997574,
        "rotZ": -3.95498262E-07,
        "scaleX": 0.8750001,
        "scaleY": 0.0270524025,
        "scaleZ": 0.88
      },
      "Nickname": "Help Text",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "<Panel width=\"1500\" height=\"120\" visibility=\"Black|Blue\">\r\n     <Text id=\"label\" color=\"White\" fontSize=\"80\"></Text>\r\n</Panel>"
    },
    {
      "GUID": "1dbea0",
      "Name": "BlockSquare",
      "Transform": {
        "posX": 25.8139839,
        "posY": 1.49502516,
        "posZ": -0.0008701683,
        "rotX": -1.46410443E-07,
        "rotY": 269.987457,
        "rotZ": 2.0929734E-07,
        "scaleX": 0.8750001,
        "scaleY": 0.0270524025,
        "scaleZ": 0.88
      },
      "Nickname": "Help Text",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "<Panel width=\"1500\" height=\"120\" visibility=\"Black|Green\">\r\n     <Text id=\"label\" color=\"White\" fontSize=\"80\"></Text>\r\n</Panel>"
    },
    {
      "GUID": "3b078d",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -5.10533667,
        "posY": 1.48149931,
        "posZ": -9.993139,
        "rotX": -6.730261E-08,
        "rotY": 179.998886,
        "rotZ": -1.71862212E-07,
        "scaleX": 1.58859241,
        "scaleY": 1.0,
        "scaleZ": 1.58859241
      },
      "Nickname": "Stat Tracker",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1867318528552107285/A00E511C60E9DB7F2540DC64CCA6A2EB5E69778E/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"rootModuleName\":\"Stat Tracker.3b078d.lua\",\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"Stat Tracker.3b078d.lua\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"RftG/statTracker\")\nend)\n__bundle_register(\"RftG/statTracker\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction createButtons()\r\n    self.createButton({\r\n         click_function = \"none\",\r\n         function_owner = self,\r\n         label = \"0\",\r\n         width = 0,\r\n         height = 0,\r\n         position = {-0.82, 0.2, -0.4},\r\n         font_size = 600,\r\n         scale = {0.5, 0.5, 0.5},\r\n    })\r\n\r\n    self.createButton({\r\n         click_function = \"none\",\r\n         function_owner = self,\r\n         label = \"+0\",\r\n         width = 0,\r\n         height = 0,\r\n         position = {-0.72, 0.2, 0.5},\r\n         font_size = 400,\r\n         scale = {0.5, 0.5, 0.5},\r\n         font_color = \"Red\"\r\n    })\r\n\r\n    self.createButton({\r\n         click_function = \"none\",\r\n         function_owner = self,\r\n         label = \"0\",\r\n         width = 0,\r\n         height = 0,\r\n         position = {0.5, 0.2, 0.02},\r\n         font_size = 1000,\r\n         scale = {0.5, 0.5, 0.5},\r\n         font_color = color(1,1,1)\r\n    })\r\nend\r\n\r\nfunction updateLabel(params)\r\n    if not self.getButtons() then\r\n         return\r\n    end\r\n\r\n    type = params[1]\r\n    value = params[2]\r\n\r\n    if type == \"hand\" then\r\n         self.editButton({\r\n              index = 0,\r\n              label = value\r\n         })\r\n    elseif type == \"military\" then\r\n         local prefix = \"+\"\r\n         if value < 0 then\r\n              prefix = \"\"\r\n         end\r\n         self.editButton({\r\n              index = 1,\r\n              label = prefix .. value\r\n         })\r\n    elseif type == \"vp\" then\r\n         self.editButton({\r\n              index = 2,\r\n              label = value\r\n         })\r\n    end\r\nend\nend)\nreturn __bundle_require(\"Stat Tracker.3b078d.lua\")",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2ed5dd",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -10.0298328,
        "posY": 1.48149931,
        "posZ": 5.040945,
        "rotX": 8.3893417E-07,
        "rotY": 269.996948,
        "rotZ": 1.5726242E-07,
        "scaleX": 1.58859241,
        "scaleY": 1.0,
        "scaleZ": 1.58859241
      },
      "Nickname": "Stat Tracker",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1867318528552107285/A00E511C60E9DB7F2540DC64CCA6A2EB5E69778E/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function createButtons()\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {-0.82, 0.2, -0.4},\r\n          font_size = 600,\r\n          scale = {0.5, 0.5, 0.5},\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"+0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {-0.72, 0.2, 0.5},\r\n          font_size = 400,\r\n          scale = {0.5, 0.5, 0.5},\r\n          font_color = \"Red\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {0.5, 0.2, 0.02},\r\n          font_size = 1000,\r\n          scale = {0.5, 0.5, 0.5},\r\n          font_color = color(1,1,1)\r\n     })\r\nend\r\n\r\nfunction updateLabel(params)\r\n     if not self.getButtons() then\r\n          return\r\n     end\r\n\r\n     type = params[1]\r\n     value = params[2]\r\n\r\n     if type == \"hand\" then\r\n          self.editButton({\r\n               index = 0,\r\n               label = value\r\n          })\r\n     elseif type == \"military\" then\r\n          local prefix = \"+\"\r\n          if value < 0 then\r\n               prefix = \"\"\r\n          end\r\n          self.editButton({\r\n               index = 1,\r\n               label = prefix .. value\r\n          })\r\n     elseif type == \"vp\" then\r\n          self.editButton({\r\n               index = 2,\r\n               label = value\r\n          })\r\n     end\r\nend",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "dc9bac",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 5.08763,
        "posY": 1.48149931,
        "posZ": 10.0224667,
        "rotX": 1.18824111E-07,
        "rotY": 359.9909,
        "rotZ": -5.98041538E-07,
        "scaleX": 1.58859241,
        "scaleY": 1.0,
        "scaleZ": 1.58859241
      },
      "Nickname": "Stat Tracker",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1867318528552107285/A00E511C60E9DB7F2540DC64CCA6A2EB5E69778E/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function createButtons()\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {-0.82, 0.2, -0.4},\r\n          font_size = 600,\r\n          scale = {0.5, 0.5, 0.5},\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"+0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {-0.72, 0.2, 0.5},\r\n          font_size = 400,\r\n          scale = {0.5, 0.5, 0.5},\r\n          font_color = \"Red\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {0.5, 0.2, 0.02},\r\n          font_size = 1000,\r\n          scale = {0.5, 0.5, 0.5},\r\n          font_color = color(1,1,1)\r\n     })\r\nend\r\n\r\nfunction updateLabel(params)\r\n     if not self.getButtons() then\r\n          return\r\n     end\r\n\r\n     type = params[1]\r\n     value = params[2]\r\n\r\n     if type == \"hand\" then\r\n          self.editButton({\r\n               index = 0,\r\n               label = value\r\n          })\r\n     elseif type == \"military\" then\r\n          local prefix = \"+\"\r\n          if value < 0 then\r\n               prefix = \"\"\r\n          end\r\n          self.editButton({\r\n               index = 1,\r\n               label = prefix .. value\r\n          })\r\n     elseif type == \"vp\" then\r\n          self.editButton({\r\n               index = 2,\r\n               label = value\r\n          })\r\n     end\r\nend",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "8865a8",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 10.0527887,
        "posY": 1.48149931,
        "posZ": -5.07940054,
        "rotX": 2.547147E-08,
        "rotY": 89.9817,
        "rotZ": -6.886619E-08,
        "scaleX": 1.58859241,
        "scaleY": 1.0,
        "scaleZ": 1.58859241
      },
      "Nickname": "Stat Tracker",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1867318528552107285/A00E511C60E9DB7F2540DC64CCA6A2EB5E69778E/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function createButtons()\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {-0.82, 0.2, -0.4},\r\n          font_size = 600,\r\n          scale = {0.5, 0.5, 0.5},\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"+0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {-0.72, 0.2, 0.5},\r\n          font_size = 400,\r\n          scale = {0.5, 0.5, 0.5},\r\n          font_color = \"Red\"\r\n     })\r\n\r\n     self.createButton({\r\n          click_function = \"none\",\r\n          function_owner = self,\r\n          label = \"0\",\r\n          width = 0,\r\n          height = 0,\r\n          position = {0.5, 0.2, 0.02},\r\n          font_size = 1000,\r\n          scale = {0.5, 0.5, 0.5},\r\n          font_color = color(1,1,1)\r\n     })\r\nend\r\n\r\nfunction updateLabel(params)\r\n     if not self.getButtons() then\r\n          return\r\n     end\r\n\r\n     type = params[1]\r\n     value = params[2]\r\n\r\n     if type == \"hand\" then\r\n          self.editButton({\r\n               index = 0,\r\n               label = value\r\n          })\r\n     elseif type == \"military\" then\r\n          local prefix = \"+\"\r\n          if value < 0 then\r\n               prefix = \"\"\r\n          end\r\n          self.editButton({\r\n               index = 1,\r\n               label = prefix .. value\r\n          })\r\n     elseif type == \"vp\" then\r\n          self.editButton({\r\n               index = 2,\r\n               label = value\r\n          })\r\n     end\r\nend",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "694f20",
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 0.00334310322,
        "posY": 2.20268583,
        "posZ": -25.0993938,
        "rotX": 0.0,
        "rotY": 0.166599661,
        "rotZ": 0.0,
        "scaleX": 13.5195179,
        "scaleY": 1.44237411,
        "scaleZ": 2.25408077
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.1025641
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "260523",
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 25.29013,
        "posY": 2.20116282,
        "posZ": -0.0278725438,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 13.1525021,
        "scaleY": 1.34776926,
        "scaleZ": 2.3430016
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.75
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c6b24a",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -8.354622,
        "posY": 1.586957,
        "posZ": -17.5426369,
        "rotX": 5.2098E-09,
        "rotY": 179.9916,
        "rotZ": -5.94600138E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.1999951,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ba672d",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -5.55552864,
        "posY": 1.586957,
        "posZ": -17.5414047,
        "rotX": -2.94399012E-08,
        "rotY": 179.9916,
        "rotZ": -3.06478465E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "bf03fb",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -2.74601316,
        "posY": 1.586957,
        "posZ": -17.5414162,
        "rotX": -3.24828742E-09,
        "rotY": 179.9916,
        "rotZ": 7.121998E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ff71e9",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 0.0444116481,
        "posY": 1.586957,
        "posZ": -17.5414181,
        "rotX": -3.29953664E-08,
        "rotY": 179.9916,
        "rotZ": -2.71130975E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "177aef",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 2.843502,
        "posY": 1.586957,
        "posZ": -17.5414352,
        "rotX": -9.41255252E-09,
        "rotY": 179.9916,
        "rotZ": -3.947179E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f464a0",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 5.639612,
        "posY": 1.586957,
        "posZ": -17.5414066,
        "rotX": 3.03306E-09,
        "rotY": 179.9916,
        "rotZ": -2.40513458E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "81fcf3",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -8.352789,
        "posY": 1.586957,
        "posZ": -21.3795547,
        "rotX": -1.72771752E-08,
        "rotY": 179.9916,
        "rotZ": -4.08029948E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "105b73",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -5.553606,
        "posY": 1.586957,
        "posZ": -21.378355,
        "rotX": 1.3985014E-08,
        "rotY": 179.9916,
        "rotZ": -3.87968946E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f678fe",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -2.74427414,
        "posY": 1.586957,
        "posZ": -21.378355,
        "rotX": -1.41683358E-08,
        "rotY": 179.9916,
        "rotZ": -1.62383387E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0a06f7",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 0.04612564,
        "posY": 1.586957,
        "posZ": -21.3783913,
        "rotX": 3.52539473E-08,
        "rotY": 179.9916,
        "rotZ": -1.434857E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1f945e",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 2.845347,
        "posY": 1.586957,
        "posZ": -21.378355,
        "rotX": -3.683186E-08,
        "rotY": 179.9916,
        "rotZ": -3.06282573E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "6d5dfb",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 5.64126539,
        "posY": 1.586957,
        "posZ": -21.37819,
        "rotX": -2.84027131E-08,
        "rotY": 179.9916,
        "rotZ": -3.55036676E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "7bca04",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 8.441265,
        "posY": 1.586957,
        "posZ": -17.5414066,
        "rotX": -6.026143E-09,
        "rotY": 179.9916,
        "rotZ": -6.820874E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2f2d7b",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 8.441743,
        "posY": 1.586957,
        "posZ": -21.3784752,
        "rotX": 1.55641668E-08,
        "rotY": 179.9916,
        "rotZ": -1.46204089E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b40cf5",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 11.2470589,
        "posY": 1.586957,
        "posZ": -17.54141,
        "rotX": 1.23415438E-08,
        "rotY": 179.9916,
        "rotZ": -5.83859E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "08306a",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 11.2488079,
        "posY": 1.586957,
        "posZ": -21.378355,
        "rotX": -2.90394855E-08,
        "rotY": 179.9916,
        "rotZ": -3.1882454E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e75181",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 14.03544,
        "posY": 1.586957,
        "posZ": -17.54141,
        "rotX": -1.46591956E-08,
        "rotY": 179.9916,
        "rotZ": -5.38298153E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e43e25",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 14.03718,
        "posY": 1.586957,
        "posZ": -21.378355,
        "rotX": -6.34639452E-09,
        "rotY": 179.9916,
        "rotZ": 9.340012E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3fafd9",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6251945,
        "posY": 1.58845615,
        "posZ": -8.364006,
        "rotX": -5.9241497E-08,
        "rotY": 89.99172,
        "rotZ": -1.70284551E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c91c70",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6239662,
        "posY": 1.58845615,
        "posZ": -5.564905,
        "rotX": -2.81368315E-08,
        "rotY": 89.99044,
        "rotZ": -2.05320489E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f4ac17",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6239815,
        "posY": 1.58845615,
        "posZ": -2.755389,
        "rotX": -5.12704634E-09,
        "rotY": 89.98853,
        "rotZ": 3.82321268E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "23338b",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6239872,
        "posY": 1.58845615,
        "posZ": 0.035037037,
        "rotX": -8.0611E-10,
        "rotY": 90.01299,
        "rotZ": -9.289408E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "aa84f2",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6240082,
        "posY": 1.58845615,
        "posZ": 2.83412862,
        "rotX": 3.436372E-08,
        "rotY": 89.99978,
        "rotZ": 4.780735E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "926c9a",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6239834,
        "posY": 1.58845615,
        "posZ": 5.63024,
        "rotX": 4.08738927E-08,
        "rotY": 90.0124741,
        "rotZ": 3.76141358E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "46ffe4",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6239872,
        "posY": 1.58845615,
        "posZ": 8.431891,
        "rotX": 6.69795863E-09,
        "rotY": 89.98496,
        "rotZ": 7.106323E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "cfe481",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6239948,
        "posY": 1.58845615,
        "posZ": 11.2376862,
        "rotX": -2.06028616E-08,
        "rotY": 89.98744,
        "rotZ": 2.11850235E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "308704",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 17.6239986,
        "posY": 1.58845615,
        "posZ": 14.0260677,
        "rotX": 1.07858412E-07,
        "rotY": 89.98783,
        "rotZ": 8.466236E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3f48b0",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.4621124,
        "posY": 1.58845615,
        "posZ": -8.362174,
        "rotX": 1.28612768E-07,
        "rotY": 89.99165,
        "rotZ": -2.32256724E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1c0f10",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.4609165,
        "posY": 1.58845615,
        "posZ": -5.56298828,
        "rotX": 3.970651E-08,
        "rotY": 89.99044,
        "rotZ": 8.982979E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e3724c",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.46092,
        "posY": 1.58845615,
        "posZ": -2.75365567,
        "rotX": -1.82673148E-08,
        "rotY": 89.98853,
        "rotZ": 2.50753871E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b4857c",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.4609623,
        "posY": 1.58845615,
        "posZ": 0.0367457978,
        "rotX": -2.84573275E-07,
        "rotY": 90.01297,
        "rotZ": 4.839933E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "8fc41c",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.460928,
        "posY": 1.58845615,
        "posZ": 2.83596778,
        "rotX": -1.18432965E-07,
        "rotY": 89.99973,
        "rotZ": 1.908699E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "7116f4",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.4607658,
        "posY": 1.58845615,
        "posZ": 5.631888,
        "rotX": -1.66659817E-07,
        "rotY": 90.01248,
        "rotZ": 2.94116035E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "855ed5",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.4610558,
        "posY": 1.58845615,
        "posZ": 8.43236351,
        "rotX": -1.11428278E-07,
        "rotY": 89.98494,
        "rotZ": 3.54539537E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "588617",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.4609413,
        "posY": 1.58845615,
        "posZ": 11.23943,
        "rotX": -5.917178E-08,
        "rotY": 89.98742,
        "rotZ": 3.32032243E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "57c877",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 21.4609432,
        "posY": 1.58845615,
        "posZ": 14.0278025,
        "rotX": -1.37238857E-07,
        "rotY": 89.9878,
        "rotZ": 1.60426652E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "520dbd",
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 0.0106049441,
        "posY": 2.19544649,
        "posZ": 25.1746063,
        "rotX": 0.0,
        "rotY": 180.000046,
        "rotZ": 0.0,
        "scaleX": 13.2240191,
        "scaleY": 1.42789531,
        "scaleZ": 2.29424453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.75
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c097f9",
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -25.232769,
        "posY": 2.20285225,
        "posZ": -0.0934515446,
        "rotX": 0.0,
        "rotY": 89.99997,
        "rotZ": 0.0,
        "scaleX": 13.087347,
        "scaleY": 1.44270623,
        "scaleZ": 2.2736752
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.75
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e3ba8f",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 8.712118,
        "posY": 1.58845615,
        "posZ": 17.5693951,
        "rotX": 4.31340261E-08,
        "rotY": 359.991669,
        "rotZ": -4.39011636E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e7ba9f",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 5.91737175,
        "posY": 1.58845615,
        "posZ": 17.56757,
        "rotX": 1.09136087E-08,
        "rotY": 359.990448,
        "rotZ": -2.879949E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "52b87c",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 3.10785484,
        "posY": 1.58845615,
        "posZ": 17.567585,
        "rotX": 3.56621932E-09,
        "rotY": 359.988525,
        "rotZ": -2.0204423E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "555149",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 0.317428976,
        "posY": 1.58845615,
        "posZ": 17.56759,
        "rotX": -8.367598E-09,
        "rotY": 0.0129910195,
        "rotZ": -5.91576743E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "8037b0",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -2.4816606,
        "posY": 1.58845615,
        "posZ": 17.5676117,
        "rotX": 4.04699172E-08,
        "rotY": -0.000218567176,
        "rotZ": -1.17425518E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "060f9e",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -5.27776861,
        "posY": 1.58845615,
        "posZ": 17.5675869,
        "rotX": 4.8042037E-10,
        "rotY": 0.0124719255,
        "rotZ": -3.22432747E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a1353b",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -8.079433,
        "posY": 1.58845615,
        "posZ": 17.56759,
        "rotX": 1.05832643E-09,
        "rotY": 359.984924,
        "rotZ": 8.294528E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b5229e",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -10.8852272,
        "posY": 1.58845615,
        "posZ": 17.5675983,
        "rotX": -2.760824E-08,
        "rotY": 359.987457,
        "rotZ": -6.24248457E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1a4842",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -13.6736088,
        "posY": 1.58845615,
        "posZ": 17.5676022,
        "rotX": 8.728902E-09,
        "rotY": 359.9878,
        "rotZ": -3.68177133E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995071,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "df1039",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 8.714626,
        "posY": 1.58845615,
        "posZ": 21.4057159,
        "rotX": 4.96194019E-08,
        "rotY": 359.991669,
        "rotZ": 2.1316481E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ebcc6d",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 5.915455,
        "posY": 1.58845615,
        "posZ": 21.40452,
        "rotX": 5.6525117E-08,
        "rotY": 359.990448,
        "rotZ": -1.3823338E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c62480",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 3.106121,
        "posY": 1.58845615,
        "posZ": 21.4045238,
        "rotX": -2.16411618E-08,
        "rotY": 359.988525,
        "rotZ": -1.19241124E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ee10bc",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": 0.31572,
        "posY": 1.58845615,
        "posZ": 21.4045639,
        "rotX": 1.5135095E-08,
        "rotY": 0.0129910195,
        "rotZ": -2.2996737E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3604d3",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -2.48350024,
        "posY": 1.58845615,
        "posZ": 21.4045315,
        "rotX": -2.17209521E-08,
        "rotY": -0.000218569228,
        "rotZ": -2.994821E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "9924ec",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -5.279417,
        "posY": 1.58845615,
        "posZ": 21.40437,
        "rotX": 2.10096474E-08,
        "rotY": 0.0124719255,
        "rotZ": 1.7153825E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "152bcf",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -8.07990551,
        "posY": 1.58845615,
        "posZ": 21.40466,
        "rotX": 1.57435469E-08,
        "rotY": 359.984924,
        "rotZ": 3.11456461E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c258b2",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -10.8869705,
        "posY": 1.58845615,
        "posZ": 21.4045429,
        "rotX": 4.15598755E-08,
        "rotY": 359.987457,
        "rotZ": -3.70174824E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ccffe8",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -13.6753426,
        "posY": 1.58845615,
        "posZ": 21.4045467,
        "rotX": 4.8663285E-08,
        "rotY": 359.9878,
        "rotZ": -1.86452187E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0680be",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.65539,
        "posY": 1.58845615,
        "posZ": 8.349769,
        "rotX": 1.42477688E-07,
        "rotY": 269.9917,
        "rotZ": 1.19234613E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "516c32",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.6541615,
        "posY": 1.58845615,
        "posZ": 5.550675,
        "rotX": 7.07601444E-08,
        "rotY": 269.990417,
        "rotZ": 2.691874E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c5ff70",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.6541748,
        "posY": 1.58845615,
        "posZ": 2.741157,
        "rotX": 3.12997877E-08,
        "rotY": 269.988525,
        "rotZ": 6.15825E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a655ef",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.65418,
        "posY": 1.58845615,
        "posZ": -0.04926905,
        "rotX": 5.96549938E-08,
        "rotY": 270.013,
        "rotZ": 1.66681069E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3f2608",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.6542015,
        "posY": 1.58845615,
        "posZ": -2.84836245,
        "rotX": 7.672108E-08,
        "rotY": 269.9998,
        "rotZ": -1.3491086E-09,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "400835",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.6541767,
        "posY": 1.58845615,
        "posZ": -5.64447355,
        "rotX": 9.142952E-08,
        "rotY": 270.012451,
        "rotZ": 7.064607E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "79379f",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.65418,
        "posY": 1.58845615,
        "posZ": -8.446131,
        "rotX": 1.05098231E-07,
        "rotY": 269.985,
        "rotZ": 7.259161E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3e487d",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.6541862,
        "posY": 1.58845615,
        "posZ": -11.2519226,
        "rotX": 6.41201154E-08,
        "rotY": 269.987427,
        "rotZ": 6.154087E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2b57c2",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -17.65419,
        "posY": 1.58845615,
        "posZ": -14.0403061,
        "rotX": 6.80874948E-08,
        "rotY": 269.9878,
        "rotZ": 5.64673144E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995041,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "4e113d",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.4923077,
        "posY": 1.58845615,
        "posZ": 8.34793949,
        "rotX": 9.230798E-08,
        "rotY": 269.991638,
        "rotZ": 2.60870735E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c7e5ec",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.4911137,
        "posY": 1.58845615,
        "posZ": 5.548755,
        "rotX": -1.59845172E-07,
        "rotY": 269.9904,
        "rotZ": 5.45024136E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a26157",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.4911137,
        "posY": 1.58845615,
        "posZ": 2.73942018,
        "rotX": 4.018995E-08,
        "rotY": 269.988464,
        "rotZ": 2.93369425E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2886e4",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.4911537,
        "posY": 1.58845615,
        "posZ": -0.050979875,
        "rotX": 6.076275E-08,
        "rotY": 270.01297,
        "rotZ": 1.13449381E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "aed135",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.4911213,
        "posY": 1.58845615,
        "posZ": -2.850203,
        "rotX": 2.09287876E-07,
        "rotY": 269.999756,
        "rotZ": -2.32045508E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "22c53f",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.4909611,
        "posY": 1.58845615,
        "posZ": -5.646121,
        "rotX": -1.2931396E-07,
        "rotY": 270.012451,
        "rotZ": 4.71342219E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "48dc85",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.49125,
        "posY": 1.58845615,
        "posZ": -8.446599,
        "rotX": -3.952282E-08,
        "rotY": 269.985,
        "rotZ": 4.142852E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ec7c1a",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.4911327,
        "posY": 1.58845615,
        "posZ": -11.253664,
        "rotX": 2.79138046E-08,
        "rotY": 269.9874,
        "rotZ": -1.10185159E-08,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "fc2149",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -21.4911366,
        "posY": 1.58845615,
        "posZ": -14.042038,
        "rotX": 2.17300411E-07,
        "rotY": 269.987762,
        "rotZ": -2.52810764E-07,
        "scaleX": 2.22815,
        "scaleY": 0.0139135253,
        "scaleZ": 1.51264024
      },
      "Nickname": "Card Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.199995011,
        "b": 0.8235294,
        "a": 0.0
      },
      "Tags": [
        "Slot"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "98436d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 4.18019724,
        "posZ": -37.6967278,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 24.927372,
        "scaleY": 7.0,
        "scaleZ": 4.04898071
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "999ceb",
      "Name": "Card",
      "Transform": {
        "posX": -3.28633571,
        "posY": 3.26857376,
        "posZ": -37.6967278,
        "rotX": 2.19872942E-09,
        "rotY": 180.0,
        "rotZ": 0.0347689949,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Develop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9000,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ce2060",
      "Name": "Card",
      "Transform": {
        "posX": -5.47722626,
        "posY": 3.16857386,
        "posZ": -37.6967278,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Explore (+1,+1)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9001,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "74881b",
      "Name": "Card",
      "Transform": {
        "posX": 1.0954448,
        "posY": 3.47474,
        "posZ": -37.6967278,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Settle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9003,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5ac2ce",
      "Name": "Card",
      "Transform": {
        "posX": -7.66811752,
        "posY": 3.06857371,
        "posZ": -37.6967278,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Explore (+5)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9002,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0e2624",
      "Name": "Card",
      "Transform": {
        "posX": 9.859009,
        "posY": 3.86857414,
        "posZ": -37.6967278,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Produce",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9005,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "8723c4",
      "Name": "Card",
      "Transform": {
        "posX": 7.66811752,
        "posY": 3.76857376,
        "posZ": -37.6967278,
        "rotX": -2.3166832E-08,
        "rotY": 180.0,
        "rotZ": 0.0235080048,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consume ($)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9006,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "817c1c",
      "Name": "Card",
      "Transform": {
        "posX": 5.47722626,
        "posY": 3.66857386,
        "posZ": -37.6967278,
        "rotX": 1.51569589E-06,
        "rotY": 180.0,
        "rotZ": 0.04559618,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consume (x2)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9004,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3f02c8",
      "Name": "Card",
      "Transform": {
        "posX": -1.09544539,
        "posY": 3.37474012,
        "posZ": -37.6967278,
        "rotX": 1.52449218E-08,
        "rotY": 180.0,
        "rotZ": -1.67466467E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Develop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "Adv2p"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9008,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ca974d",
      "Name": "Card",
      "Transform": {
        "posX": 3.28633523,
        "posY": 3.56857371,
        "posZ": -37.6967278,
        "rotX": 5.403538E-06,
        "rotY": 180.000717,
        "rotZ": 359.986053,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Settle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "Adv2p"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9009,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f158bf",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.17473984,
        "posZ": 5.47721863,
        "rotX": -1.343792E-07,
        "rotY": 270.0,
        "rotZ": 1.13813467E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Explore (+1,+1)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8901,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "cdefe1",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.07474,
        "posZ": 7.668106,
        "rotX": 2.51877964E-07,
        "rotY": 270.0,
        "rotZ": -2.04986736E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Explore (+5)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8902,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "faa176",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.77473974,
        "posZ": -7.668106,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consume (x2)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8904,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "095953",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.67473984,
        "posZ": -5.47721863,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consume ($)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8906,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "01e903",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.27473974,
        "posZ": 3.28633118,
        "rotX": 4.1125864E-07,
        "rotY": 270.0,
        "rotZ": -4.89050472E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Develop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8900,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3d58f4",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.47474,
        "posZ": -1.09544373,
        "rotX": -9.904376E-07,
        "rotY": 270.0,
        "rotZ": 3.158602E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Settle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8903,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "941d7b",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.87474012,
        "posZ": -9.858994,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Produce",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8905,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1dbb0f",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.37474012,
        "posZ": 1.09544373,
        "rotX": 8.664063E-07,
        "rotY": 270.0,
        "rotZ": 1.22161082E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Develop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "Adv2p"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8908,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "fcb9fa",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 3.57473969,
        "posZ": -3.286331,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Settle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "Adv2p"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8909,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "587427",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -37.65481,
        "posY": 4.461135,
        "posZ": -5.38696465E-09,
        "rotX": 0.0,
        "rotY": 90.00001,
        "rotZ": 0.0,
        "scaleX": 25.0,
        "scaleY": 7.0,
        "scaleZ": 3.92206931
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "eec17a",
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -37.7837143,
        "posY": 3.4755168,
        "posZ": 0.015089035,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.44574356,
        "scaleY": 1.73857594,
        "scaleZ": 22.7999535
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.75
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ff94f8",
      "Name": "Card",
      "Transform": {
        "posX": -7.66818047,
        "posY": 3.77473974,
        "posZ": 37.69006,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consume (x2)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8804,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "bf1d88",
      "Name": "Card",
      "Transform": {
        "posX": -9.859062,
        "posY": 3.87474012,
        "posZ": 37.6964264,
        "rotX": 8.974262E-10,
        "rotY": -1.30100531E-07,
        "rotZ": -3.1156722E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Produce",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8805,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1f756f",
      "Name": "Card",
      "Transform": {
        "posX": -5.477299,
        "posY": 3.67473984,
        "posZ": 37.68369,
        "rotX": -9.996531E-10,
        "rotY": 1.82935935E-07,
        "rotZ": 3.375401E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consume ($)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8806,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1d6790",
      "Name": "Card",
      "Transform": {
        "posX": 7.66798973,
        "posY": 3.07474,
        "posZ": 37.64548,
        "rotX": -3.59134567E-09,
        "rotY": -3.447713E-08,
        "rotZ": -1.735048E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Explore (+5)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8802,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d27ffa",
      "Name": "Card",
      "Transform": {
        "posX": 5.477108,
        "posY": 3.17473984,
        "posZ": 37.65185,
        "rotX": 2.6095055E-09,
        "rotY": 1.57017951E-07,
        "rotZ": 1.56475E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Explore (+1,+1)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8801,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "28e28a",
      "Name": "Card",
      "Transform": {
        "posX": 3.28622627,
        "posY": 3.27473974,
        "posZ": 37.65822,
        "rotX": 5.558991E-09,
        "rotY": 4.77787239E-07,
        "rotZ": -2.27136184E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Develop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8800,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "481897",
      "Name": "Card",
      "Transform": {
        "posX": -1.095536,
        "posY": 3.47473979,
        "posZ": 37.6709557,
        "rotX": -4.46999948E-09,
        "rotY": 8.579657E-07,
        "rotZ": 1.739686E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Settle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8803,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ac5fa0",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -9.36826546E-05,
        "posY": 4.412199,
        "posZ": 37.66777,
        "rotX": 0.0,
        "rotY": 180.166534,
        "rotZ": 0.0,
        "scaleX": 25.0,
        "scaleY": 7.0,
        "scaleZ": 4.37050962
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "eb2285",
      "Name": "Card",
      "Transform": {
        "posX": -3.286417,
        "posY": 3.57473969,
        "posZ": 37.6773224,
        "rotX": -7.881068E-07,
        "rotY": 4.68549144E-10,
        "rotZ": 359.965851,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Settle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "Adv2p"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8809,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "91e284",
      "Name": "Card",
      "Transform": {
        "posX": 1.095345,
        "posY": 3.37474012,
        "posZ": 37.6645851,
        "rotX": 0.522612631,
        "rotY": -0.00106112729,
        "rotZ": 359.883636,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Develop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "Adv2p"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8808,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "eff100",
      "Name": "Card",
      "Transform": {
        "posX": 37.9630127,
        "posY": 3.27473974,
        "posZ": -3.2863276,
        "rotX": 3.36606936E-05,
        "rotY": 89.99781,
        "rotZ": -0.001916761,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Develop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8700,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "230b2f",
      "Name": "Card",
      "Transform": {
        "posX": 37.9630165,
        "posY": 3.77473974,
        "posZ": 7.668106,
        "rotX": 5.64523179E-05,
        "rotY": 89.9989243,
        "rotZ": 0.000771415245,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consume (x2)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8704,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "4b5cb9",
      "Name": "Card",
      "Transform": {
        "posX": 37.9630165,
        "posY": 3.87474012,
        "posZ": 9.858994,
        "rotX": 4.3209134E-08,
        "rotY": 89.99029,
        "rotZ": 8.713138E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Produce",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8705,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "0f845a",
      "Name": "Card",
      "Transform": {
        "posX": 37.9630165,
        "posY": 3.67473984,
        "posZ": 5.47721863,
        "rotX": 5.352177E-05,
        "rotY": 89.99143,
        "rotZ": -0.00177731388,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consume ($)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8706,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "cfd83b",
      "Name": "Card",
      "Transform": {
        "posX": 37.9630127,
        "posY": 3.47474,
        "posZ": 1.09544361,
        "rotX": 5.58532847E-05,
        "rotY": 89.97953,
        "rotZ": -0.00200143433,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Settle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8703,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b32604",
      "Name": "Card",
      "Transform": {
        "posX": 37.96301,
        "posY": 3.17473984,
        "posZ": -5.47721863,
        "rotX": 3.5420715E-05,
        "rotY": 89.99688,
        "rotZ": 0.000928308349,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Explore (+1,+1)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8701,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d08c44",
      "Name": "Card",
      "Transform": {
        "posX": 37.96301,
        "posY": 3.07474,
        "posZ": -7.668106,
        "rotX": 6.569927E-05,
        "rotY": 89.99511,
        "rotZ": 7.154382E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Explore (+5)",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8702,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "adc17a",
      "Name": "Card",
      "Transform": {
        "posX": 37.9630127,
        "posY": 3.57474,
        "posZ": 3.28632712,
        "rotX": 0.000145941929,
        "rotY": 90.01313,
        "rotZ": 0.90691787,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Settle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "Adv2p"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8709,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2d8cc1",
      "Name": "Card",
      "Transform": {
        "posX": 37.9630127,
        "posY": 3.37474012,
        "posZ": -1.09544384,
        "rotX": 0.000251863239,
        "rotY": 89.99812,
        "rotZ": 0.9073079,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Develop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "Adv2p"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8708,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1ca706",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 37.9630127,
        "posY": 4.461135,
        "posZ": -1.41090482E-07,
        "rotX": 0.0,
        "rotY": 270.000031,
        "rotZ": 0.0,
        "scaleX": 25.0,
        "scaleY": 7.0,
        "scaleZ": 4.94523335
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b9a3c8",
      "Name": "Custom_PDF",
      "Transform": {
        "posX": -41.1675072,
        "posY": 6.207197,
        "posZ": 36.42252,
        "rotX": 34.99353,
        "rotY": 135.009537,
        "rotZ": 359.977783,
        "scaleX": 2.67430973,
        "scaleY": 1.0,
        "scaleZ": 2.67430973
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomPDF": {
        "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1910106289018955275/7B6A5E321CC54D0014896673BE42373F295FCC55/",
        "PDFPassword": "",
        "PDFPage": 0,
        "PDFPageOffset": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "7ecb64",
      "Name": "Custom_PDF",
      "Transform": {
        "posX": -36.0609856,
        "posY": 6.209016,
        "posZ": 41.52885,
        "rotX": 34.99362,
        "rotY": 134.957062,
        "rotZ": 359.948975,
        "scaleX": 2.67430973,
        "scaleY": 1.0,
        "scaleZ": 2.67430973
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomPDF": {
        "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1910106289019355524/27AE6EADEA329AB41FC2E6DCFB7722D28FCBA057/",
        "PDFPassword": "",
        "PDFPage": 0,
        "PDFPageOffset": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b88067",
      "Name": "Notecard",
      "Transform": {
        "posX": 23.418623,
        "posY": 1.551499,
        "posZ": -21.1733475,
        "rotX": 6.4149277E-09,
        "rotY": 1.14659488E-05,
        "rotZ": 2.62086424E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Script Instructions",
      "Description": "- Select action by clicking the menu buttons in your hidden zone. Click ready when done.\n\n- Select cards to play by clicking the button on cards and paying their cost. They will be put into play after all players are ready.\n\n- Pay the cost by flipping cards face down in your hand. They will be discarded after all players are ready.\n",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "416393",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -29.402319,
        "posY": -0.109217644,
        "posZ": 32.4532852,
        "rotX": 2.00738964E-06,
        "rotY": 359.975739,
        "rotZ": 1.35445816E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Sounds",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0159948841,
        "g": 0.0159948841,
        "b": 0.0159948841
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/1930373169971980382/D3140C4DAFF0235D0AC685739A887A64A8FC1582/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 0,
        "TypeIndex": 0,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "fe78ab",
      "Name": "BlockSquare",
      "Transform": {
        "posX": -26.8003559,
        "posY": 0.7349429,
        "posZ": 32.483757,
        "rotX": 5.007465E-07,
        "rotY": 180.0,
        "rotZ": -6.999503E-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Enforce Rules Button",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "function onload()\r\n    self.createButton({\r\n        click_function = \"toggleEnforceRulesClick\",\r\n        function_owner = Global,\r\n        width = 2500,\r\n        height=  800,\r\n        font_size = 300,\r\n        position = {0, 1, 0},\r\n        label = \"Enforce Rules: ON\",\r\n        tooltip = \"Toggles rule enforcement. Turn this OFF if there is some issue with the script.\"\r\n    })\r\nend\r\n\r\nfunction changeEnforceRulesButtonLabel(value)\r\n    self.editButton({\r\n        index = 0,\r\n        label = \"Enforce Rules: \" .. (value and \"ON\" or \"OFF\")\r\n    })\r\nend",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "58adc4",
      "Name": "Card",
      "Transform": {
        "posX": 37.96301,
        "posY": 2.97473979,
        "posZ": -9.858994,
        "rotX": 2.97550878E-06,
        "rotY": 89.9992752,
        "rotZ": 3.851052E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Prestige / Search",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "PrestigeSearch"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8707,
      "SidewaysCard": false,
      "CustomDeck": {
        "87": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AAAoRaIsrxvLS8RHHH_51Yhba/cards/cardbacks/action_cardback_green.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "1d8a52",
      "Name": "Card",
      "Transform": {
        "posX": 9.858872,
        "posY": 2.97473979,
        "posZ": 37.6391144,
        "rotX": 8.726168E-05,
        "rotY": 1.23809343E-06,
        "rotZ": 0.820069849,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Prestige / Search",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "PrestigeSearch"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8807,
      "SidewaysCard": false,
      "CustomDeck": {
        "88": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AADYD2KuoCs5MHl1uQ1FDyKqa/cards/cardbacks/action_cardback_blue.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c629ef",
      "Name": "Card",
      "Transform": {
        "posX": -9.859009,
        "posY": 2.968574,
        "posZ": -37.6967278,
        "rotX": -2.986496E-09,
        "rotY": 180.0,
        "rotZ": 359.965851,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Prestige / Search",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "PrestigeSearch"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 9007,
      "SidewaysCard": false,
      "CustomDeck": {
        "90": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACYX0g3hS0l-cNz3N4tHFhja/cards/cardbacks/action_cardback_yellow.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "8befdb",
      "Name": "Card",
      "Transform": {
        "posX": -37.65481,
        "posY": 2.97473979,
        "posZ": 9.858994,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Prestige / Search",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.713293731,
        "g": 0.713293731,
        "b": 0.713293731
      },
      "Tags": [
        "Action Card",
        "PrestigeSearch"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 8907,
      "SidewaysCard": false,
      "CustomDeck": {
        "89": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1843672500557298402/DE39A67B457163C4A852F6BE14D2F185BDAA6506/",
          "BackURL": "https://www.dropbox.com/sh/l4knwm3uq51va48/AACAxPqrO46GyS400wy9FC3Ea/cards/cardbacks/action_cardback_red.png?dl=1",
          "NumWidth": 5,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "eec23d",
      "Name": "Custom_PDF",
      "Transform": {
        "posX": -30.9547062,
        "posY": 6.21032667,
        "posZ": 46.6354561,
        "rotX": 34.9917831,
        "rotY": 135.020691,
        "rotZ": 359.993744,
        "scaleX": 2.67430973,
        "scaleY": 1.0,
        "scaleZ": 2.67430973
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomPDF": {
        "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1930373378495753041/061CBABB96FE47EC9A6B055AF395A67AE4D60934/",
        "PDFPassword": "",
        "PDFPage": 0,
        "PDFPageOffset": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    }
  ]
}